<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:String x:Key="Closing">
        是否确定离开Hawk?
    </system:String>
    <system:String x:Key="ConfigNull">
        不包含任何有关配置文件的任何信息，请检查
    </system:String>
    <system:String x:Key="ControlLoad">
        控件加载
    </system:String>
    <system:String x:Key="Closing2" xml:space="preserve">
        【{0}】任务可能还没有保存
        【是】:保存任务并退出, 
        【否】：不保存退出，
        【取消】:直接退出
    </system:String>
    <system:String x:Key="DataMgmt">
        数据管理
    </system:String>
    <system:String x:Key="SysState">
        系统状态视图
    </system:String>
    <system:String x:Key="DebugView">
        调试信息窗口
    </system:String>
   
    <system:String x:Key="Error">
        失败
    </system:String>
    <system:String x:Key="IconNotExist">
        系统图标文件不存在
    </system:String>
    <system:String x:Key="LongTask">
        正在进行长时间任务，请等待
    </system:String>
    <system:String x:Key="ModuleMgmt">
        模块管理
    </system:String>
    <system:String x:Key="Source">
        来源
    </system:String>
    <system:String x:Key="Start">
        已正常启动
    </system:String>
    <system:String x:Key="Tips">
        提示信息
    </system:String>
    <system:String x:Key="XPathExpError">
        XPath表达式可能有误
    </system:String>
    <system:String x:Key="RemaindSave" xml:space="preserve">
        【{0}】任务可能还没有保存，
        【是】:保存任务并退出,
        【否】：不保存退出
        【取消】:取消退出"
    </system:String>

    <system:String x:Key="key_560">
        子线程数量
    </system:String>
    <system:String x:Key="key_750">
        可填写完整XPath,或只根据id或class名称进行检索，如选择class，值填`name`，就是查找所有class=name的节点
    </system:String>
    <system:String x:Key="key_718">
        正常初始化
    </system:String>
    <system:String x:Key="key_258">
        执行删除操作吗？
    </system:String>
    <system:String x:Key="key_641">
        3.动态请求嗅探
    </system:String>
    <system:String x:Key="key_370">
        跳过
    </system:String>
    <system:String x:Key="key_580">
        标签
    </system:String>
    <system:String x:Key="key_505">
        参考格式
    </system:String>
    <system:String x:Key="key_69">
        启用自增主键写入，会在数据表的额外一列上增加自增键
    </system:String>
    <system:String x:Key="key_89">
        sql=
    </system:String>
    <system:String x:Key="key_0">
        是否保存当前工程的内容？您只有一次机会这样做，
    </system:String>
    <system:String x:Key="key_67">
        高级设置
    </system:String>
    <system:String x:Key="key_85">
        请选择sqlite数据库文件
    </system:String>
    <system:String x:Key="key_739">
        数据库配置
    </system:String>
    <system:String x:Key="key_765">
        结果XPath
    </system:String>
    <system:String x:Key="SplitPageTF">
        分页
    </system:String>
    <system:String x:Key="key_497">
        导入列
    </system:String>
    <system:String x:Key="NullFT_desc">
        检查文本是否为空白符或null，常用
        可以过滤掉所有内容为空，或字符串全部都是空字符的情况
    </system:String>
    <system:String x:Key="DataProcessManagerUI">
        DataProcessManager
    </system:String>
    <system:String x:Key="key_374">
        最大值
    </system:String>
    <system:String x:Key="key_120">
        请求方法
    </system:String>
    <system:String x:Key="key_614">
        阿拉伯语
    </system:String>
    <system:String x:Key="key_292">
        恢复
    </system:String>
    <system:String x:Key="StrExtractTF">
        字符首尾抽取
    </system:String>
    <system:String x:Key="key_201">
        数据清洗
    </system:String>
    <system:String x:Key="JoinDBTF_desc">
        用于完成与数据库的join操作和匹配，目前测试不完善
    </system:String>
    <system:String x:Key="key_350">
        向数据库{0}，表名{1}成功写入{2}条数据
    </system:String>
    <system:String x:Key="key_405">
        1.连接器
    </system:String>
    <system:String x:Key="key_23">
        服务器地址
    </system:String>
    <system:String x:Key="key_677">
        命令
    </system:String>
    <system:String x:Key="key_164">
        可用
    </system:String>
    <system:String x:Key="IFileConnector:IDictionarySerializable">
        文件导入导出基本接口
    </system:String>
    <system:String x:Key="key_91">
        枚举虚拟化
    </system:String>
    <system:String x:Key="key_277">
        级别设置
    </system:String>
    <system:String x:Key="key_777">
        线程数
    </system:String>
    <system:String x:Key="key_395">
        延时时间
    </system:String>
    <system:String x:Key="DataGridViewer_desc">
        IDataViewer
    </system:String>
    <system:String x:Key="key_107">
        过滤
    </system:String>
    <system:String x:Key="FolderGE">
        获取文件夹文件
    </system:String>
    <system:String x:Key="SmartCralerUI">
        SmartCrawler
    </system:String>
    <system:String x:Key="key_523">
        重复次数
    </system:String>
    <system:String x:Key="key_180">
        最大访问次数
    </system:String>
    <system:String x:Key="key_711">
        最大线程数的数值范围为0-30
    </system:String>
    <system:String x:Key="key_167">
        反选
    </system:String>
    <system:String x:Key="MergeRepeatTF">
        重复项合并
    </system:String>
    <system:String x:Key="key_779">
        可将图标拖入右侧数据列的上方空白列表处，为该列添加清洗模块
    </system:String>
    <system:String x:Key="key_96">
        无定义资源
    </system:String>
    <system:String x:Key="key_210">
        数量范围选择
    </system:String>
    <system:String x:Key="FileConnectorXML">
        XML导入导出器
    </system:String>
    <system:String x:Key="key_3">
        系统正忙
    </system:String>
    <system:String x:Key="key_411">
        子任务-选择
    </system:String>
    <system:String x:Key="key_649">
        已经成功复制到剪贴板
    </system:String>
    <system:String x:Key="key_101">
        已经执行成功
    </system:String>
    <system:String x:Key="key_443">
        读取配置
    </system:String>
    <system:String x:Key="key_629">
        刷新网页
    </system:String>
    <system:String x:Key="key_143">
        视图
    </system:String>
    <system:String x:Key="key_128">
        最大禁止数
    </system:String>
    <system:String x:Key="GetIPLocation_desc">
        获取某一ip地址的经纬度坐标
    </system:String>
    <system:String x:Key="key_34">
        执行
    </system:String>
    <system:String x:Key="key_197">
        XPath表达式:
    </system:String>
    <system:String x:Key="ICustomClass">
        一项弱类型的简化接口，用于不指定强功能的插件集合
    </system:String>
    <system:String x:Key="key_301">
        模块
    </system:String>
    <system:String x:Key="key_752">
        子节点数量
    </system:String>
    <system:String x:Key="key_700">
        已加载
    </system:String>
    <system:String x:Key="key_730">
        快速检索
    </system:String>
    <system:String x:Key="NlpTF">
        自然语言处理
    </system:String>
    <system:String x:Key="key_769">
        动态请求嗅探
    </system:String>
    <system:String x:Key="EtlGE">
        子任务-生成
    </system:String>
    <system:String x:Key="key_579">
        通过城市名称进行信息检索
    </system:String>
    <system:String x:Key="key_74">
        MongoDB数据库不在本地，无法启动自动数据库修复
    </system:String>
    <system:String x:Key="EtlEX">
        子任务-执行
    </system:String>
    <system:String x:Key="FileConnectorTable_desc">
        输出制表符文本文件
    </system:String>
    <system:String x:Key="key_368">
        调试时启用
    </system:String>
    <system:String x:Key="key_9">
        数据描述
    </system:String>
    <system:String x:Key="key_108">
        转换
    </system:String>
    <system:String x:Key="key_153">
        插件
    </system:String>
    <system:String x:Key="key_226">
        确定要删除该连接吗？
    </system:String>
    <system:String x:Key="key_334">
        文件{0}不存在
    </system:String>
    <system:String x:Key="key_625">
        属性的数量不能为空
    </system:String>
    <system:String x:Key="JoinDBTF">
        数据库匹配
    </system:String>
    <system:String x:Key="key_438">
        编码
    </system:String>
    <system:String x:Key="key_269">
        反馈问题
    </system:String>
    <system:String x:Key="key_719">
        流入数据量
    </system:String>
    <system:String x:Key="key_285">
        删除任务
    </system:String>
    <system:String x:Key="key_745">
        位置:
    </system:String>
    <system:String x:Key="key_82">
        浏览路径
    </system:String>
    <system:String x:Key="key_304">
        工作线程视图
    </system:String>
    <system:String x:Key="key_162">
        选择器
    </system:String>
    <system:String x:Key="key_627">
        提取数据测试结果
    </system:String>
    <system:String x:Key="key_178">
        生成器
    </system:String>
    <system:String x:Key="key_156">
        开始加载程序集
    </system:String>
    <system:String x:Key="key_767">
        属性管理
    </system:String>
    <system:String x:Key="key_146">
        插件管理器已加载
    </system:String>
    <system:String x:Key="key_616">
        自动检测
    </system:String>
    <system:String x:Key="key_279">
        运行
    </system:String>
    <system:String x:Key="key_204">
        不进行转换
    </system:String>
    <system:String x:Key="key_256">
        当前内存的数据集已经被清除
    </system:String>
    <system:String x:Key="key_756">
        排序策略
    </system:String>
    <system:String x:Key="key_354">
        单位为毫秒，也可使用方括号语法，例如[a]表示从a列中读取延时长度
    </system:String>
    <system:String x:Key="key_152">
        当前类型在插件集合没有被发现，
    </system:String>
    <system:String x:Key="key_148">
        插件类型重复，请检查配置文件
    </system:String>
    <system:String x:Key="DbEX_desc">
        进行数据库操作，包括写入，删除和更新，输入列为表的主键
    </system:String>
    <system:String x:Key="key_132">
        清空数据
    </system:String>
    <system:String x:Key="EtlTF_desc">
        调用所选的子任务作为转换器，有关子任务，请参考相关文档
    </system:String>
    <system:String x:Key="key_83">
        加载
    </system:String>
    <system:String x:Key="key_785">
        输出
    </system:String>
    <system:String x:Key="ReReplaceTF">
        正则替换
    </system:String>
    <system:String x:Key="DbGE_desc">
        从数据库读取内容，需提前在`数据视图`中新建或配置连接
    </system:String>
    <system:String x:Key="key_768">
        当设置该值后，所有属性Path都应该为根节点的子路径，而不能是完整的XPath路径
    </system:String>
    <system:String x:Key="key_124">
        Post参数
    </system:String>
    <system:String x:Key="key_465">
        每行一条
    </system:String>
    <system:String x:Key="key_252">
        导出数据任务
    </system:String>
    <system:String x:Key="key_347" xml:space="preserve">
        必填，若数据库不存在该表，则会根据第一条数据的列自动创建表
        不符合数据库要求的列名会被替换
    </system:String>
    <system:String x:Key="key_687">
        采样量
    </system:String>
    <system:String x:Key="key_345">
        选择数据库
    </system:String>
    <system:String x:Key="key_228">
        文件打开失败
    </system:String>
    <system:String x:Key="key_740">
        快速链接
    </system:String>
    <system:String x:Key="RangeGE_desc" xml:space="preserve">
        生成某范围内的数值
        例如生成从0到100，步进为1的值即为1,2,3..100
    </system:String>
    <system:String x:Key="key_242">
        转为非虚拟数据集
    </system:String>
    <system:String x:Key="key_317">
        保存当前工程
    </system:String>
    <system:String x:Key="key_448">
        筛选模式
    </system:String>
    <system:String x:Key="key_248">
        的数据库连接服务失效
    </system:String>
    <system:String x:Key="key_482">
        Post数据
    </system:String>
    <system:String x:Key="key_594">
        纬度列
    </system:String>
    <system:String x:Key="key_98">
        执行失败
    </system:String>
    <system:String x:Key="AddNewTF_desc" xml:space="preserve">
        为数据表添加新列，值为固定值
        示例场景：为数据的每一行增加要爬取的网页根地址，之后通过`合并多列`得到完整网址
    </system:String>
    <system:String x:Key="key_244">
        保存到数据库
    </system:String>
    <system:String x:Key="TableGE_desc">
        从数据管理中已有的数据表中生成，常用
    </system:String>
    <system:String x:Key="BfsGE">
        请求队列
    </system:String>
    <system:String x:Key="key_264">
        Hawk版本
    </system:String>
    <system:String x:Key="IDataViewer">
        展示数据
    </system:String>
    <system:String x:Key="SaveFileEX_desc"  xml:space="preserve">
        保存对应链接的文件，如图片，视频等
        拖入的列为文件的超链接地址
        `保存位置`:可以使用方括号表达式，将某一列的内容传递过来
        注意:
        > 一些网站必须要求登录以后才能下载内容。而如果你已经配置好能正常访问该网站的`网页采集器`，那么就可以在`共用采集器名`中填写这个采集器的名称，此时本模块会使用那个采集器的header进行抓取。
    </system:String>
    <system:String x:Key="key_431">
        递归到下列
    </system:String>
    <system:String x:Key="key_481">
        错误延时时间
    </system:String>
    <system:String x:Key="key_367" xml:space="preserve">
        将结果取反后返回
        例如筛选器判断为`正确`，则返回错误
    </system:String>
    <system:String x:Key="AutoIndexTF">
        自增键生成
    </system:String>
    <system:String x:Key="key_76">
        修复失败，您是否没有安装MongoDB数据库
    </system:String>
    <system:String x:Key="key_442">
        文件格式
    </system:String>
    <system:String x:Key="RandomGE">
        生成随机数
    </system:String>
    <system:String x:Key="RepeatTF">
        重复当前值
    </system:String>
    <system:String x:Key="key_712">
        {0}已经有任务在执行，为了避免副作用，请在任务管理器中取消该任务后再刷新
    </system:String>
    <system:String x:Key="key_274">
        作者沙漠君的博客
    </system:String>
    <system:String x:Key="key_268">
        这里有使用Hawk的案例与完整教程
    </system:String>
    <system:String x:Key="key_581">
        如医院，美食等
    </system:String>
    <system:String x:Key="key_418">
        设置子任务的调用属性
    </system:String>
    <system:String x:Key="key_518">
        当值小于0时，可同时匹配多个值
    </system:String>
    <system:String x:Key="key_71">
        打开帮助链接
    </system:String>
    <system:String x:Key="key_104">
        排序
    </system:String>
    <system:String x:Key="FileConnectorCSV_desc">
        输出文本型CSV逗号分隔文件
    </system:String>
    <system:String x:Key="key_337">
        分组
    </system:String>
    <system:String x:Key="key_125">
        自动重定向
    </system:String>
    <system:String x:Key="key_573">
        清除中间空格
    </system:String>
    <system:String x:Key="DataProcessManager_desc">
        对算法模块实现管理和组装，但不提供界面
    </system:String>
    <system:String x:Key="key_371">
        获取
    </system:String>
    <system:String x:Key="key_656">
        查询XPath时在内部发生异常:{0}
    </system:String>
    <system:String x:Key="FolderGE_desc" xml:space="preserve">
        获取文件夹下的所有文件，拖入列为文件夹的名称
        可直接对文件名的筛选
    </system:String>
    <system:String x:Key="RenameTF">
        列名修改器
    </system:String>
    <system:String x:Key="key_196">
        XPath表达式错误:
    </system:String>
    <system:String x:Key="key_177">
        从文本生成
    </system:String>
    <system:String x:Key="FileConnectorJson">
        Json导入导出器
    </system:String>
    <system:String x:Key="key_166">
        全选
    </system:String>
    <system:String x:Key="key_652">
        继续搜索
    </system:String>
    <system:String x:Key="key_772">
        设置获取数据表的前n行，忽略之后的内容
    </system:String>
    <system:String x:Key="key_686">
        3.调试
    </system:String>
    <system:String x:Key="key_674">
        超级模式下，为了性能考虑，内置浏览器不展示内容，请查看左侧的文本内容
    </system:String>
    <system:String x:Key="key_758">
        样例
    </system:String>
    <system:String x:Key="key_344">
        选择数据库的操作，如插入，删除，更新等
    </system:String>
    <system:String x:Key="key_628" xml:space="preserve">
        检测到列表的根节点为:{0}，是否设置根节点路径？ 
        根节点会提取所有属性的公共部分，一般能提升抓取效率，抵抗网站改版
        此操作有建议有经验用户使用，小白用户请点【否】
    </system:String>
    <system:String x:Key="key_20">
        数据表大小
    </system:String>
    <system:String x:Key="key_360">
        填写采集器或模块的名称
    </system:String>
    <system:String x:Key="key_314">
        任务描述
    </system:String>
    <system:String x:Key="key_287">
        任务列表2
    </system:String>
    <system:String x:Key="key_240">
        配置
    </system:String>
    <system:String x:Key="key_695">
        调试与探查
    </system:String>
    <system:String x:Key="key_464">
        文本
    </system:String>
    <system:String x:Key="key_192">
        勾选此项后，会智能提取新闻正文，XPath路径可为空
    </system:String>
    <system:String x:Key="key_617">
        意大利语
    </system:String>
    <system:String x:Key="key_181">
        生成器类型
    </system:String>
    <system:String x:Key="key_558">
        子线程名称
    </system:String>
    <system:String x:Key="key_753">
        评估分数
    </system:String>
    <system:String x:Key="key_688">
        只获取数据表的前n行
    </system:String>
    <system:String x:Key="key_537">
        除了直接填写数值，还可通过方括号表达式从其他列传入
    </system:String>
    <system:String x:Key="key_200">
        模块名称
    </system:String>
    <system:String x:Key="ReadFileTextGE_desc" xml:space="preserve">
        获取文件中的全部纯文本内容
        注意与【读取文件数据】区别，后者为一行一条数据，前者则将所有文本（包括换行符）都看为一条数据
    </system:String>
    <system:String x:Key="IDataProcess">
        基本计算任务
    </system:String>
    <system:String x:Key="key_781">
        步骤1：设置主任务调用子任务的模块区间，如[2:10]代表调用子任务从第2个到10个模块，忽略其他模块。
    </system:String>
    <system:String x:Key="DateRangeGE">
        生成区间时间
    </system:String>
    <system:String x:Key="key_88">
        sql执行错误:
    </system:String>
    <system:String x:Key="key_717">
        输入列
    </system:String>
    <system:String x:Key="not_find_key" xml:space="preserve">
        在该网页中找不到关键字 `{0}`,可能是动态请求，
        【是】：【{1}】，并在弹出的浏览器页面中，翻到包含该关键字的位置，必要时进行刷新
        【否】:【不嗅探】
        【取消】:【不再提醒】
    </system:String>
    <system:String x:Key="rightclick_new">
        右键可新建数据源
    </system:String>
    <system:String x:Key="doubleclick_new">
        双击图标以新建任务
    </system:String>
    <system:String x:Key="brower_view">
        浏览器视图
    </system:String>
    <system:String x:Key="remind_10" xml:space="preserve">
        请填写包含在页面中的关键字信息，进而方便Hawk提取所需内容：
        【2.属性提取】->【搜索字符】
    </system:String>
    <system:String x:Key="step2">
        步骤2：设置主任务属性列对应到子任务的属性名，下拉菜单仅参考，可直接编辑文本框
    </system:String>
    <system:String x:Key="task_run" xml:space="preserve">
        {0}已经有任务在执行，由于调整参数，是否要取消当前任务重新执行？
        【取消】:【不再提醒】
    </system:String>
    <system:String x:Key="success_get"  xml:space="preserve">
        已经成功获取嗅探字段！ 真实请求地址:
        {0}，
        已自动配置了网页采集器，请求类型为{1}
        {2}已经刷新了网页采集器的内容
    </system:String>
    <system:String x:Key="fail_remind"  xml:space="preserve">
        作用在列名`{0}`的 模块`{1}` 已经连续5次没有成功获取数据，可能需要重新修改参数 
        【是】：【进入调试模式】 
        【否】：【取消当前任务】 
        【取消】：【不再提示】
    </system:String>
    <system:String x:Key="key_191">
        获取正文
    </system:String>
    <system:String x:Key="key_320">
        到当前列表
    </system:String>
    <system:String x:Key="RegexSplitTF">
        正则分割
    </system:String>
    <system:String x:Key="key_155">
        不需要获取插件接口名称，已经进行缓存,随时可进行修改
    </system:String>
    <system:String x:Key="JsonTF">
        转换为Json
    </system:String>
    <system:String x:Key="key_402" xml:space="preserve">
        可参考C# DateTime Format相关方法，以下是一些例子：
        - yyyy-MM-dd等
        - yyyy-MM
    </system:String>
    <system:String x:Key="key_704">
        串行任务
    </system:String>
    <system:String x:Key="key_662">
        `{0}` 不能被识别为正确的{1}表达式，请检查
    </system:String>
    <system:String x:Key="key_332">
        数据库连接
    </system:String>
    <system:String x:Key="key_154">
        接口
    </system:String>
    <system:String x:Key="key_595">
        代表纬度所在的列
    </system:String>
    <system:String x:Key="key_790">
        当前加载的所有算法模块
    </system:String>
    <system:String x:Key="key_253">
        文件导出成功，是否要打开查看?
    </system:String>
    <system:String x:Key="key_550">
        尾串
    </system:String>
    <system:String x:Key="key_361">
        是否异步
    </system:String>
    <system:String x:Key="key_450">
        是否递归
    </system:String>
    <system:String x:Key="FileConnectorExcel">
        EXCEL导入导出器
    </system:String>
    <system:String x:Key="key_707">
        子任务
    </system:String>
    <system:String x:Key="XPathTF2_desc" xml:space="preserve">
        可将页面中的门类，用笛卡尔交叉的模式组合起来，适合于爬虫无法抓取全部页面，但可以按分类抓取的情况。
        需调用网页采集器，具体参考文档-门类枚举
        //TODO:添加更详细的介绍
        要拖入HTML文本列
    </system:String>
    <system:String x:Key="key_626">
        在列表模式下，属性数量不能少于2个
    </system:String>
    <system:String x:Key="key_592">
        查询地物，如`医院`,`商场等`
    </system:String>
    <system:String x:Key="Time2StrTF_desc">
        将时间转换为特定格式的字符串
    </system:String>
    <system:String x:Key="key_217">
        查询字符串
    </system:String>
    <system:String x:Key="key_495">
        选择所要连接的表
    </system:String>
    <system:String x:Key="key_610">
        荷兰语
    </system:String>
    <system:String x:Key="key_655">
        是否启用自动嗅探
    </system:String>
    <system:String x:Key="key_293">
        取消
    </system:String>
    <system:String x:Key="key_340">
        任务已经出错：
    </system:String>
    <system:String x:Key="key_602">
        中文
    </system:String>
    <system:String x:Key="IColumnProcess">
        ETL模块接口
    </system:String>
    <system:String x:Key="key_633">
        是否确定清除所有属性?
    </system:String>
    <system:String x:Key="EtlTF">
        子任务-转换
    </system:String>
    <system:String x:Key="key_653">
        找不到其他符合条件的XPath节点，搜索器已经返回页面的开头
    </system:String>
    <system:String x:Key="key_399">
        间隔
    </system:String>
    <system:String x:Key="key_390">
        可填入空格分割的多个列名
        对本模块所在列的值相同的所有属性，分别进行按列求和
    </system:String>
    <system:String x:Key="key_8">
        总数据量
    </system:String>
    <system:String x:Key="DbEX">
        写入数据库
    </system:String>
    <system:String x:Key="XPathTF">
        XPath转换器
    </system:String>
    <system:String x:Key="key_295">
        新建或复制网页采集器
    </system:String>
    <system:String x:Key="key_381">
        最小匹配数
    </system:String>
    <system:String x:Key="key_318">
        另存为当前工程
    </system:String>
    <system:String x:Key="key_313">
        存在同名任务，将覆盖该任务
    </system:String>
    <system:String x:Key="XFrmWorkPropertyGrid_desc">
        属性配置选项
    </system:String>
    <system:String x:Key="key_254">
        打开文件失败：
    </system:String>
    <system:String x:Key="key_70">
        安装使用说明
    </system:String>
    <system:String x:Key="key_123"  xml:space="preserve">
        当页面出现乱码时，一般是编码问题，在`网页采集器`->`请求设置`->编码，切换UTF-8或GBK。
        极个别情况才需使用其他编码
    </system:String>
    <system:String x:Key="key_385">
        延迟输出
    </system:String>
    <system:String x:Key="CrawlerTF">
        从爬虫转换
    </system:String>
    <system:String x:Key="key_439">
        请选择要读取的文件
    </system:String>
    <system:String x:Key="key_208">
        作用在{0}的模块 {1} 在执行时出错, 错误信息为{2}
    </system:String>
    <system:String x:Key="key_685">
        删除下游节点
    </system:String>
    <system:String x:Key="key_46">
        已经导入数量:
    </system:String>
    <system:String x:Key="key_437">
        选择文件
    </system:String>
    <system:String x:Key="key_346" xml:space="preserve">
        选择所要连接的数据库服务，如果该项没有下拉菜单，请在系统欢迎页面上新建`数据源`，并点击右键创建新的数据库连接器
    </system:String>
    <system:String x:Key="key_353">
        延时值
    </system:String>
    <system:String x:Key="key_250">
        数据集
    </system:String>
    <system:String x:Key="key_336">
        当前位置
    </system:String>
    <system:String x:Key="RegexFT_desc" xml:space="preserve">
        编写正则表达式来过滤文本
        需要列名，输入正则表达式，和其最小匹配的内容数量，即可过滤内容。
        有关正则表达式，可参考:
        > https://www.jb51.net/tools/zhengze.html
    </system:String>
    <system:String x:Key="key_709" xml:space="preserve">
        在并行模式工作时，线程池所承载的最大线程数
        当有线程运行完毕后，才会添加新的线程
    </system:String>
    <system:String x:Key="EtlEX_desc">
        调用其他任务，作为执行器，一般位于任务的末尾。

        子任务是Hawk中高级但却非常重要的功能，可以实现例如多级跳转，采集详情页等等的功能，非常强大。
        所谓`子任务`，就是能先构造出一个任务，然后被其他任务调用。被调用的任务就是子任务。我们应该能够了解子任务其实就是函数，可以定义输入列和输出列，把整个子任务看成一个模块，从而方便重用。

        使用`子任务-执行`的例子： 先设计构造获取某个页面全部图片的任务， 并创建主任务，在主任务中调用刚才创建的子任务。
    </system:String>
    <system:String x:Key="key_183">
        XPath表达式编写错误：
    </system:String>
    <system:String x:Key="key_231">
        添加到数据集
    </system:String>
    <system:String x:Key="key_151">
        警告信息
    </system:String>
    <system:String x:Key="DataProcessManager_name">
        模块管理
    </system:String>
    <system:String x:Key="key_31">
        连接名称
    </system:String>
    <system:String x:Key="key_623">
        手气不错
    </system:String>
    <system:String x:Key="key_451">
        即是否获取子文件夹的子文件
    </system:String>
    <system:String x:Key="key_690">
        上一步
    </system:String>
    <system:String x:Key="key_133">
        点击按钮:
    </system:String>
    <system:String x:Key="key_90">
        数据库虚拟化
    </system:String>
    <system:String x:Key="key_2">
        系统出现异常
    </system:String>
    <system:String x:Key="key_751">
        其他信息
    </system:String>
    <system:String x:Key="key_501">
        文档列表：[{}],转换为多个数据行构成的列表；单文档：{},将结果的键值对附加到本行；不进行转换：直接将值放入到新列
    </system:String>
    <system:String x:Key="key_275">
        帮助
    </system:String>
    <system:String x:Key="key_4">
        调试信息窗口
    </system:String>
    <system:String x:Key="key_245">
        插入到数据库
    </system:String>
    <system:String x:Key="key_542">
        将原文本每个字符直接分割开
    </system:String>
    <system:String x:Key="key_517">
        匹配编号
    </system:String>
    <system:String x:Key="key_221">
        网页爬虫连接器
    </system:String>
    <system:String x:Key="key_16">
        描述
    </system:String>
    <system:String x:Key="key_783">
        结束
    </system:String>
    <system:String x:Key="key_736">
        新建任务
    </system:String>
    <system:String x:Key="key_130">
        超时数
    </system:String>
    <system:String x:Key="key_552">
        返回的结果里是否包含首串和尾串
    </system:String>
    <system:String x:Key="key_706">
        任务
    </system:String>
    <system:String x:Key="key_283">
        确定保存所有算法模块么？
    </system:String>
    <system:String x:Key="key_485">
        转换选项
    </system:String>
    <system:String x:Key="key_691">
        下一步
    </system:String>
    <system:String x:Key="key_11">
        数据集名称
    </system:String>
    <system:String x:Key="key_299">
        由于任务{0} 已经被删除， 相关任务{1} 也已经被强行取消
    </system:String>
    <system:String x:Key="key_705">
        并行任务
    </system:String>
    <system:String x:Key="key_218">
        根据数据库的不同，可在此处输入JS（MongoDB）和标准SQL
    </system:String>
    <system:String x:Key="key_526">
        替换为
    </system:String>
    <system:String x:Key="key_604">
        日语
    </system:String>
    <system:String x:Key="DelayTF_desc" xml:space="preserve">
        在工作流中插入延时，可休眠固定长度避免爬虫被封禁，单位为ms
        在不同的位置插入延时有不同的行为，例如在模块A之前插入延时，则A模块每次执行前都会延时固定长度。
        除了拖入延时，在`串行模式`下填入延时时间，则会在每个web请求前插入指定的延时，更加方便。
    </system:String>
    <system:String x:Key="key_169">
        删除
    </system:String>
    <system:String x:Key="key_270">
        出现bug或者问题了？欢迎反馈
    </system:String>
    <system:String x:Key="key_36">
        关闭连接
    </system:String>
    <system:String x:Key="key_714">
        检查模块参数是否修改
    </system:String>
    <system:String x:Key="NumberTF">
        提取数字
    </system:String>
    <system:String x:Key="key_804">
        如果软件帮到了你，可以为开发者捐赠
    </system:String>
    <system:String x:Key="key_748">
        根节点
    </system:String>
    <system:String x:Key="key_665">
        使用当前子节点XPath，在文档中找不到任何子节点
    </system:String>
    <system:String x:Key="key_327">
        加载{0}任务
    </system:String>
    <system:String x:Key="HtmlTF_desc"  xml:space="preserve">
        删除HTML标签和转义符号
        当页面包含HTML时，一些字符可能已经被转义了，例如空格成了`nsbp%`
        拖入到对应的列，即可将转义符号恢复为之前的表示
        注意:
        > Hawk的Web访问器比python更加智能，默认对带特殊符号和中文的URL进行编码，所以这个模块用的并不多。
    </system:String>
    <system:String x:Key="key_603">
        英语
    </system:String>
    <system:String x:Key="key_382">
        只有正则表达式匹配该文本的结果数量大于等于该值时，才会保留，默认为1
    </system:String>
    <system:String x:Key="defaultCrawler">
        默认采集器
    </system:String>
    <system:String x:Key="key_643">
        停止
    </system:String>
    <system:String x:Key="key_21">
        参数设置
    </system:String>
    <system:String x:Key="key_593">
        如公园，车站等
    </system:String>
    <system:String x:Key="SmartCrawler_desc">
        从单个网页中采集和嗅探所需数据
    </system:String>
    <system:String x:Key="SmartCrawler_desc_detail" xml:space="preserve">
    网页采集器模拟了浏览器的设计，填入网址，点击刷新，即可获取对应地址的html源码。
        左侧的区域，显示了html源码和浏览器视图，可通过tab页切换。右侧配置区域，可对关键字进行搜索，并对面前所有的属性进行管理
        网页采集器不能单独工作，而是沟通网页采集器和数据清洗的桥梁。本质上说，网页采集器是针对获取网页而特别定制的`数据清洗模块`。
        {{crawler_dynamic_sniff}}
        {{crawler_super_mode}}

    </system:String>
    <system:String x:Key="crawler_url_desc" xml:space="preserve">
        以`http://`或`https://`开头的网页地址，Hawk也能支持类似`C://a.html`的本地文件，点击回车后即可刷新
    </system:String>
    <system:String x:Key="crawler_dynamic_sniff" xml:space="preserve">
        该模式能处理动态页面，即动态瀑布流和ajax的页面，通常按需返回html和json.

        ## 动态嗅探
        ### 什么是动态页面？
        老式网站在刷新时会返回页面的全部内容，但若只更新部分，即可大大节约带宽。该方式叫ajax，服务端传递xml或者json到浏览器，浏览器的js代码执行，并将数据渲染到页面上。
        因此，获取数据的真实url，不一定显示在浏览器地址栏，而是隐藏在js调用中。本质上，javascript发起了新的隐藏http请求来获取数据，只要能模拟之，就能像真实浏览器一样获取所要数据。参考： 
        > https://baike.baidu.com/item/ajax/8425?fr=aladdin

        ### Hawk如何抓取动态页面
        通过浏览器和抓包，可以获取这些隐藏请求，但需要对HTTP请求的原理比较熟悉，不适合于初学者。
        Hawk简化了流程，采用自动嗅探的方式来进行。Hawk成为后端代理，会拦截和分析所有系统级Http请求，并将包含关键字的请求筛选出来 （基于fiddler）
        
        当搜索字符时，若没有在当前页面中找到该关键字，Hawk会有提示，“是否启动动态嗅探？”此时Hawk会弹出浏览器并打开所在网页。您可将页面拖到包含关键字的位置，Hawk会自动记录和过滤包含关键字的真实请求， 检索完毕后，Hawk会自动回弹。

        ### 如果无法自动嗅探?
        由于Hawk有拦截功能，会被浏览器认为不安全，有以下两种方案： 
        可以修改浏览器安全设置。    TODO:  增加浏览器的安全设置
        {{crawler_set_header}}
    
        ### 注意事项
        1. 有时直接将url拷贝到Hawk，并使用手气不错时，也能获取到数据。这是因为很多网站对第一页和其他页分别作了不同的处理。第一页内容会跟着整体frame返回回来。但之后页面内容就通过ajax单独返回了。
        有时针对第一页做了大量的XPath开发，却最后发现无法在其他页面使用，多半就是上面提到的问题（一脸懵逼）。因此经验上，建议翻到其他页面上再做请求。
    </system:String>
      <system:String x:Key="crawler_super_mode" xml:space="preserve">
       超级模式能将网页中所有的javascript, json, xml都转换为HTML DOM树，从而实现属性提取和手气不错。
       ## 超级模式 
       为了能让动态网页也能使用`添加属性`和`手气不错`，Hawk在嗅探后默认会开启`超级模式`。 超级模式能将网页中所有的javascript, json, xml都转换为HTML DOM树，从而实现属性提取和手气不错。
       超级模式极大的简化了动态请求的处理，但它依然可能有以下问题
       - 性能较差，大量的字符解析，js模式树解析
       - 兼容性一般：不是所有的文本都能转成树结构，因此必要时需要使用手动模式处理。
     </system:String>
      <system:String x:Key="crawler_xpath_root" xml:space="preserve">
          ## 列表根路径
          列表根路径是所有属性的XPath公共部分，能简化XPath编写，提升兼容性。只能在{{script_mode_list}}模式下工作。
          你可以通过Hawk自动分析根路径，或手动设置。
          ### 自动规约列表路径
          以例子来说明，使用手气不错后，嗅探器会找到列表节点的父节点，以及挂载在父节点上的多个子节点，从而形成一个树状结构
 - 父节点(/html/div[2]/div[3]/div[4])
   - 子节点div[1]
   - 子节点div[2]
   ...

每个节点要抽取下面的属性:
   - 属性1(/a[1])
   - 属性2(/a[2]/@href)
   - ..

为了能获取父节点下所有的div子节点，因此列表根路径就是`/html/div[2]/div[3]/div[4]/div`。 注意：父节点Path路径末尾是不带序号的，这样才能获取多个子节点。可以这么理解，列表根路径就是不带结尾数字的父节点路径。

有时候，父节点的xpath是不稳定的，举个例子，北京上海的二手房页面，上海会在列表上面增加一个广告banner，从而真正的父节点就会发生变化，比如向后偏移了`div[1]变成了div[2]`。为了应对这种变化，通常的做法是手工修改【列表根路径】
        ### 手动设置根路径
        继续举例子，父节点的id为`house_list`，且在网页中全局唯一，你就可以使用另外一种父节点表示法`//*[@id='house_list']/li`（写法可以参考其他XPath教程），而子节点表达式不变。这样会让程序变得更加鲁棒。
       </system:String>
    <system:String x:Key="xpath_desc" xml:space="preserve">
        ### XPath
        关于XPath语法，可参考教程：
        > http://www.w3school.com.cn/xpath/xpath_syntax.asp
        XPath可以非常灵活，例如
        - bookstore	选取 bookstore 元素的所有子节点。
        - /bookstore	选取根元素 bookstore。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！
        - bookstore/book	选取属于 bookstore 的子元素的所有 book 元素。
        - //book	选取所有 book 子元素，而不管它们在文档中的位置。
        - bookstore//book	选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。
        - //@lang	选取名为 lang 的所有属性。
        - //@src 可匹配所有src标签
        - //title[@lang] 选取所有拥有名为 lang 的属性的 title 元素
        还可以通过`|`对多个表达式进行混合，Hawk支持了完整的XPath语法，因此不论是`网页采集器`以及数据清洗的`XPath`转换器，都能极其灵活地实现各种需求。
    </system:String>
   <system:String x:Key="css_desc" xml:space="preserve">
        ### CSSSelector
        多数情况下，使用XPath就能解决问题，但是CSSSelector更简洁，且鲁棒性更强。关于它的介绍，可参考
> http://www.w3school.com.cn/cssref/css_selectors.asp
当然，大部分情况不需要那么复杂，只要记住以下几点：
- `.name` 获取所有id为name的元素
- `#name` 获取所有class为name的元素
- `p` 获取所有p元素
- `ul > li` 获取所有父节点是ul的li元素
   </system:String>
     <system:String x:Key="crawler_share_cookie" xml:space="preserve">
     设置共享请求参数的采集器名称
     为了抓取一个网站的不同数据，我们需要多个网页采集器。但是访问网站需要登录和cookie，难不成每个采集器都要设置对应的请求参数吗？
采集器的属性对话框中，可以设置`共享源`,也就是要共享的网页采集器的名称。例如设置为`链家采集器`，那么本采集器的请求参数，都会在执行时，动态地从链家采集器中获得。这样就极大地简化了配置过程。
   </system:String>
    <system:String x:Key="key_519">
        若编号为小于0且匹配出多个新列，多个列名可用空格分割，若该列不需要添加，可用_表示，如'_ 匹配1 _'
    </system:String>
    <system:String x:Key="key_605">
        西班牙语
    </system:String>
    <system:String x:Key="key_176">
        代理列表
    </system:String>
    <system:String x:Key="SQLiteDatabase_desc" xml:space="preserve">
        提供SQLite交互的数据库服务
        SQLite是一种简单文件数据库，使用方便，并可由其他程序读取，推荐使用
    </system:String>
    <system:String x:Key="key_149">
        已成功初始化
    </system:String>
    <system:String x:Key="key_634">
        2.请求参数
    </system:String>
    <system:String x:Key="key_18">
        名称
    </system:String>
    <system:String x:Key="FileManager">
        文件管理
    </system:String>
    <system:String x:Key="key_516">
        当要输出多个结果时选 {{script_mode_list}}，否则选One或None,参考“网页采集器”
    </system:String>
    <system:String x:Key="key_262">
        关于
    </system:String>
    <system:String x:Key="key_805">
        版本： 3.0
    </system:String>
    <system:String x:Key="key_529">
        响应头
    </system:String>
    <system:String x:Key="ReadFileTextGE">
        读取文件文本
    </system:String>
    <system:String x:Key="key_646" xml:space="preserve"> 
        该模式能够强力解析网页内容，将其内部的json,javascript都统一转换为HTML DOM树
        但是消耗资源，且会修改原始Html内容，因此请按需使用
    </system:String>
    <system:String x:Key="key_53">
        列分割符
    </system:String>
    <system:String x:Key="key_466">
        排序方式
    </system:String>
    <system:String x:Key="key_241">
        转换表类型
    </system:String>
    <system:String x:Key="key_728">
        HorizontalAlignment=
    </system:String>
    <system:String x:Key="BaiduLocation_desc" xml:space="preserve">
        通过百度API获取当前地标的经纬度坐标，需要拖入代表地名的列
        在Hawk 3之后的版本，需要在百度地图API中注册账户，并将token填入配置中，参考:
        > http://lbsyun.baidu.com/index.php?title=webapi
    </system:String>
    <system:String x:Key="key_290">
        任务列表命令
    </system:String>
    <system:String x:Key="key_296">
        保存任务
    </system:String>
    <system:String x:Key="key_205">
        文档列表
    </system:String>
    <system:String x:Key="key_415">
        属性映射
    </system:String>
    <system:String x:Key="RepeatFT_desc">
        以拖入的列为唯一主键，按行进行去重，仅保留重复出现的第一项
    </system:String>
    <system:String x:Key="key_511">
        执行脚本
    </system:String>
    <system:String x:Key="key_272">
        你的支持是作者更新Hawk的动力
    </system:String>
    <system:String x:Key="key_25">
        用户名
    </system:String>
    <system:String x:Key="key_475">
        列名不能以数字开头，否则将导致无法正确显示该列
    </system:String>
    <system:String x:Key="BaiduLocation">
        搜索位置
    </system:String>
    <system:String x:Key="key_1">
        Hawk由于内部异常而崩溃
    </system:String>
    <system:String x:Key="HtmlTF">
        HTML字符转义
    </system:String>
    <system:String x:Key="key_189">
        当要获取符合XPath语法的多个结果时选 {{script_mode_list}}，只获取一条选One,其行为可参考“网页采集器”
    </system:String>
    <system:String x:Key="PythonTF_desc"  xml:space="preserve">
        执行特定的python代码或脚本，最后一行需要为值类型，作为该列的返回值
        例如，有两列a和b, 要将它们按字符串相加:
        a+b
        若希望按数值类型相加， 则需要提前将其转换
        float(a)+float(b)
        也可以提前定义函数:
        def add(x,y):
            return float(x)+float(y)
        add(a,b)
        也可以使用lambda:
        f= lambda a,b: a+b
        f(a,b)
        
        ### 注意：
        1. 你可以在文本框中定义函数，但不建议太过复杂
        2. 很难引入第三方库，这受限于C#使用的ironpython(一个C#和Python交互的模块)的功能, Hawk3中引入了调用第三方库的功能，通过编写库路径，从而能够在脚本中import库，但功能支持并不好。
        3. 不论操作如何，脚本的最后一行需要是个可求值的元素，传递给对应的列，比如
            - `return a` #这是错误的
            - `a+b` 正确，可求值
            - `lambda x:x+1`  你确定要返回一个函数或lambda?肯定也是不对的     
        4. Hawk并不预定义每个列具体的类型，因此需要在Python代码中对其进行类型和是否为空的判断。
    </system:String>
    <system:String x:Key="key_325">
        脚本已经成功执行
    </system:String>
    <system:String x:Key="key_94">
        曾打开的文件
    </system:String>
    <system:String x:Key="key_757">
        选中
    </system:String>
    <system:String x:Key="key_73">
        插入数据失败
    </system:String>
    <system:String x:Key="SplitPageTF_desc" xml:space="preserve">
        根据总页数和每页数量进行分页操作，拖入列为总页数。 相比于使用Python转换器，可极大地简化操作
        早期版本的Hawk中，若希望对网页进行分页，需要拖入多个模块才能实现，非常繁琐。
        本模块在输入数量数，每页数量和起始值之后，即可自动创建步进整数。
        例如总数量270, 每页数量为20，起始值为1，则生成的列为1，2，3..14
    </system:String>
    <system:String x:Key="key_689">
        弹出样例
    </system:String>
    <system:String x:Key="key_188">
        工作模式
    </system:String>
    <system:String x:Key="key_339">
        任务已经强行被终止
    </system:String>
    <system:String x:Key="key_615">
        文言文
    </system:String>
    <system:String x:Key="key_578">
        所属地市
    </system:String>
    <system:String x:Key="key_251">
        数据源已经存在，不进行覆盖，没有保存
    </system:String>
    <system:String x:Key="key_708">
        确实要删除{0}吗?
    </system:String>
    <system:String x:Key="DictTF">
        矩阵转置
    </system:String>
    <system:String x:Key="key_419">
        子任务范围表达式错误，请检查:
    </system:String>
    <system:String x:Key="key_213">
        执行查询
    </system:String>
    <system:String x:Key="key_6">
        默认来源
    </system:String>
    <system:String x:Key="key_636">
        设置Cookie和其他访问选项
    </system:String>
    <system:String x:Key="FileManager_desc">
        提供与历史文件交互的数据库服务
    </system:String>
    <system:String x:Key="key_794">
        已加载任务
    </system:String>
    <system:String x:Key="key_701">
        当前位于工作流中的的所有工作模块
    </system:String>
    <system:String x:Key="key_724">
        访问
    </system:String>
    <system:String x:Key="TransTF_desc">
        从当前语言翻译为目标语言
    </system:String>
    <system:String x:Key="XPathTF_desc" xml:space="preserve">
        通过XPath或CSS选取html中的子节点文档
        当输入的单元格内容为html文档，而又想提取其部分数据，用网页采集器又`杀鸡用牛刀`，则可以考虑使用它。
        {{xpath_desc}}

        {{css_desc}}
    </system:String>
    <system:String x:Key="key_32">
        自动连接
    </system:String>
    <system:String x:Key="key_13">
        该数据的类型
    </system:String>
    <system:String x:Key="key_410">
        图形化配置
    </system:String>
    <system:String x:Key="key_632">
        清空属性
    </system:String>
    <system:String x:Key="XFrmWorkPropertyGrid">
        属性配置器
    </system:String>
    <system:String x:Key="key_789">
        子任务属性
    </system:String>
    <system:String x:Key="key_472">
        起始索引
    </system:String>
    <system:String x:Key="key_329">
        保存路径
    </system:String>
    <system:String x:Key="key_300">
        打开欢迎页面
    </system:String>
    <system:String x:Key="key_380">
        表达式
    </system:String>
    <system:String x:Key="key_608">
        粤语
    </system:String>
    <system:String x:Key="key_607">
        俄罗斯语
    </system:String>
    <system:String x:Key="key_493">
        字符串匹配，如like,contains等，符合sql标准语法
    </system:String>
    <system:String x:Key="key_398">
        按类似yyyy-MM-dd HH:mm:ss:ffff格式进行填写
    </system:String>
    <system:String x:Key="key_222">
        数据导入
    </system:String>
    <system:String x:Key="key_561">
        每个子线程将要获取的数量，用于显示进度条，可不填
    </system:String>
    <system:String x:Key="key_586">
        目标位置
    </system:String>
    <system:String x:Key="key_40">
        不支持此功能
    </system:String>
    <system:String x:Key="key_209">
        位于{0}列的{1}模块在初始化时出现异常：{2},请检查任务参数
    </system:String>
    <system:String x:Key="EtlGE_desc">
        调用其他任务作为生成器，使用类似于“生成区间数”
    </system:String>
    <system:String x:Key="key_343">
        操作类型
    </system:String>
    <system:String x:Key="TransTF">
        语言翻译转换
    </system:String>
    <system:String x:Key="key_172">
        确认结果
    </system:String>
    <system:String x:Key="key_699">
        2.清洗流程
    </system:String>
    <system:String x:Key="key_801">
        如果你有任何问题和反馈，欢迎联系我：
    </system:String>
    <system:String x:Key="key_618">
        希腊语
    </system:String>
    <system:String x:Key="key_630">
        复制到剪切板
    </system:String>
    <system:String x:Key="key_759">
        请键入URL:
    </system:String>
    <system:String x:Key="key_119">
        端口
    </system:String>
    <system:String x:Key="key_713">
        已经取消
    </system:String>
    <system:String x:Key="key_349">
        创建名字为{0}的表失败
    </system:String>
    <system:String x:Key="key_642">
        开始
    </system:String>
    <system:String x:Key="key_237">
        另存为
    </system:String>
    <system:String x:Key="key_792">
        ItemsSource=
    </system:String>
    <system:String x:Key="key_715">
        位置
    </system:String>
    <system:String x:Key="key_731">
        ToolTip=
    </system:String>
    <system:String x:Key="key_60">
        编码方式
    </system:String>
    <system:String x:Key="key_246">
        数据库管理
    </system:String>
    <system:String x:Key="key_741">
        数据处理革命
    </system:String>
    <system:String x:Key="key_775">
        快速检索:
    </system:String>
    <system:String x:Key="key_570">
        参数设置可能有误
    </system:String>
    <system:String x:Key="key_255">
        确定删除内存数据么？
    </system:String>
    <system:String x:Key="key_645">
        超级模式
    </system:String>
    <system:String x:Key="key_147">
        开始对插件字典中的插件进行初始化
    </system:String>
    <system:String x:Key="key_116">
        Header
    </system:String>
    <system:String x:Key="key_39">
        文件编码
    </system:String>
    <system:String x:Key="key_17">
        虚拟值
    </system:String>
    <system:String x:Key="key_298">
        移除
    </system:String>
    <system:String x:Key="RandomGE_desc">
        生成某范围内和指定数量的随机数
    </system:String>
    <system:String x:Key="key_110">
        常用
    </system:String>
    <system:String x:Key="FileConnectorJson_desc">
        输出文本型JSON文件
    </system:String>
    <system:String x:Key="key_14">
        权重
    </system:String>
    <system:String x:Key="key_38">
        后缀名
    </system:String>
    <system:String x:Key="key_198">
        获取的节点数量为0
    </system:String>
    <system:String x:Key="key_115">
        1.请求设置
    </system:String>
    <system:String x:Key="ResponseTF">
        获取请求响应
    </system:String>
    <system:String x:Key="key_214">
        查询出现异常
    </system:String>
    <system:String x:Key="key_449">
        符合windows的文件通配符筛选规范
    </system:String>
    <system:String x:Key="key_755">
        左右切换选择所需的数据，左方可修改列名，
    </system:String>
    <system:String x:Key="key_263">
        关于作者
    </system:String>
    <system:String x:Key="key_737">
        双击图标以新建任务
    </system:String>
    <system:String x:Key="FreeDocument_desc">
        可存储键值对形式的自由文档
    </system:String>
    <system:String x:Key="SplitTF">
        字符串分割
    </system:String>
    <system:String x:Key="key_330">
        版本
    </system:String>
    <system:String x:Key="RangeFT_desc">
        从数值列中筛选出从最小值到最大值范围的文档
        可以填写最大值和最小值，只有本列的值处在该范围内的文档可被留下。若该单元格的内容不是数字，则会被忽略。
    </system:String>
    <system:String x:Key="key_357">
        保存位置
    </system:String>
    <system:String x:Key="key_743">
        欢迎使用Hawk3
    </system:String>
    <system:String x:Key="key_774">
        调试详情
    </system:String>
    <system:String x:Key="key_492">
        匹配方式
    </system:String>
    <system:String x:Key="key_666">
        当前XPath所在节点不是父节点的后代，请检查对应的XPath，是否依然要添加?
    </system:String>
    <system:String x:Key="key_45">
        请填写Excel的表头信息
    </system:String>
    <system:String x:Key="key_457">
        除了填写数字，还可以用方括号表达式，如[a]表示从a列获取值作为本参数的真实值
    </system:String>
    <system:String x:Key="key_609">
        德语
    </system:String>
    <system:String x:Key="key_498">
        join成功后倒入哪些列
    </system:String>
    <system:String x:Key="key_309">
        项目另存为
    </system:String>
    <system:String x:Key="key_648">
        填写拥有正确cookie的采集器名称，为空时不起作用，该功能还会获取代理IP等属性，避免重复设置网页采集器
    </system:String>
    <system:String x:Key="key_388">
        填入空格分割的列名，对本模块所在列的值相同的所有属性分别进行纵向合并数组
    </system:String>
    <system:String x:Key="key_541">
        按字符直接分割
    </system:String>
    <system:String x:Key="key_312">
        将新建任务
    </system:String>
    <system:String x:Key="key_407">
        2.操作表名
    </system:String>
    <system:String x:Key="GetRoute">
        获取路径信息
    </system:String>
    <system:String x:Key="key_387">
        合并到集合的属性
    </system:String>
    <system:String x:Key="property">
        属性
    </system:String>
    <system:String x:Key="key_681">
        拷贝模块
    </system:String>
    <system:String x:Key="key_265">
        项目主页
    </system:String>
    <system:String x:Key="xpath2_desc">
        要拖入HTML文本列,可将页面中的门类，用Cross模式组合起来，适合于爬虫无法抓取全部页面，但可以按分类抓取的情况。需调用网页采集器，具体参考文档-XPathTF2
    </system:String>
    <system:String x:Key="key_303">
        加载默认工程
    </system:String>
    <system:String x:Key="key_417">
        子任务面板
    </system:String>
    <system:String x:Key="key_660">
        没有检查到任何可选的列表页面
    </system:String>
    <system:String x:Key="key_19">
        可空
    </system:String>
    <system:String x:Key="key_348">
        数据库连接器不能为空
    </system:String>
    <system:String x:Key="key_414">
        设定调用子任务的模块范围，例如2:30表示被调用任务的第2个到第30个子模块将会启用，其他模块忽略，2:-1表示从第2个到倒数第二个启用，符合python的slice语法，为空则默认全部调用
    </system:String>
    <system:String x:Key="key_606">
        泰语
    </system:String>
    <system:String x:Key="key_111">
        批量插入错误
    </system:String>
    <system:String x:Key="key_675">
        解析html文档
    </system:String>
    <system:String x:Key="key_315">
        任务 {0} 已经成功保存
    </system:String>
    <system:String x:Key="key_100">
        该操作
    </system:String>
    <system:String x:Key="key_230">
        可编辑列表
    </system:String>
    <system:String x:Key="key_333">
        任务列表
    </system:String>
    <system:String x:Key="key_624">
        提取测试
    </system:String>
    <system:String x:Key="DeleteTF">
        删除该列
    </system:String>
    <system:String x:Key="key_12">
        类型
    </system:String>
    <system:String x:Key="key_673">
        ,通常原因是网站对请求合法性做了检查, 建议填写关键字对网页内容进行自动嗅探
    </system:String>
    <system:String x:Key="key_215">
        当前表
    </system:String>
    <system:String x:Key="key_512">
        Python库路径
    </system:String>
    <system:String x:Key="AddNewTF">
        添加新列
    </system:String>
    <system:String x:Key="CrawlerTF_desc">
        使用网页采集器获取网页数据，拖入的列需要为超链接

    </system:String>
      <system:String x:Key="transformer_type">
    转换器有三种子类型：
    - ColumnUDF: 单列->单列： 只对一个列有效，如`{{NumberTF}`,
    - UDF:单文档->单文档：如删除该列，它仅涉及文档内部的修改，可能会影响多个列
    - UDAF:单文档->多文档：典型的如`从爬虫转换`，每一行url都可能生成20个甚至更多的文档，它的行为cross(交叉)模式下的生成器。

    ColumnUDF是UDF的特例， UDF是UDAF的特例（只产生一种）
    绝大多数转换器都是UDF类型。但同一个转换器在不同的配置下，可能会有多种行为，例如`从爬虫转换`，如果选择的网页采集器为One(单文档)模式，则该转换器为UDF模式，若为List模式，则为UDAF模式。

  </system:String>

    <system:String x:Key="key_185">
        提取模式为{{}}且选择器为CssSelecor时，必须设定根节点路径
    </system:String>
    <system:String x:Key="key_117">
        2.代理设置
    </system:String>
    <system:String x:Key="key_678">
        1.执行
    </system:String>
    <system:String x:Key="key_696">
        调试分析面板
    </system:String>
    <system:String x:Key="NearbySearch_desc">
        获取当前经纬度某一半径范围内的所有地物，需要拖入的为代表经度的列
    </system:String>
    <system:String x:Key="GetRoute_desc">
        从当前地名，运动到对应坐标所需的时间
    </system:String>
    <system:String x:Key="DebugManagerUI">
        DebugManager
    </system:String>
    <system:String x:Key="NumRangeFT_desc" xml:space="preserve">
        选择一定数量的行，如跳过前100行，再选取50条
        不需要列名，它可以跳过并选择部分文档，类似于sql语句中的skip和limit关键字。
        > 注意，当skip数量过大，而目标数据是延迟执行时，skip会需要相当长的时间，而任务进度条没有任何反应，因此尽量避免这种设计
    </system:String>
    <system:String x:Key="key_326">
        不能重复加载该任务
    </system:String>
    <system:String x:Key="key_179">
        代理策略
    </system:String>
    <system:String x:Key="key_27">
        数据库类型
    </system:String>
    <system:String x:Key="key_375">
        最小值
    </system:String>
    <system:String x:Key="key_746">
        选择
    </system:String>
    <system:String x:Key="key_647">
        共享源
    </system:String>
    <system:String x:Key="key_394">
        BFS起始位置
    </system:String>
    <system:String x:Key="RegexTF">
        正则转换器
    </system:String>
    <system:String x:Key="key_335">
        遍历状态
    </system:String>
    <system:String x:Key="key_29">
        数据库表名不能为空
    </system:String>
    <system:String x:Key="key_338">
        任务【{0}】已经成功完成
    </system:String>
    <system:String x:Key="key_234">
        查看属性
    </system:String>
    <system:String x:Key="key_764">
        搜索字符
    </system:String>
    <system:String x:Key="key_522">
        重复模式
    </system:String>
    <system:String x:Key="key_694">
        跳到最后
    </system:String>
    <system:String x:Key="key_175">
        尝试转换为json出错：
    </system:String>
    <system:String x:Key="key_622">
        搜索
    </system:String>
    <system:String x:Key="key_799">
        百分比
    </system:String>
    <system:String x:Key="key_671">
        尝试自动重定向
    </system:String>
    <system:String x:Key="key_389">
        求和属性
    </system:String>
    <system:String x:Key="key_294">
        新建或复制数据清洗
    </system:String>
    <system:String x:Key="key_54">
        包含头信息
    </system:String>
    <system:String x:Key="key_323">
        加载{0}工程时未发现对应的脚本文件{1}
    </system:String>
    <system:String x:Key="key_738">
        VerticalAlignment=
    </system:String>
    <system:String x:Key="key_720">
        流出数据量
    </system:String>
    <system:String x:Key="PythonTF">
        Python转换器
    </system:String>
    <system:String x:Key="JsonTF_desc" xml:space="preserve">
        从字符串转换为json（数组或字典类型）
        当输入字符串是Json时，可以通过Json转换器将文本转换为Json。其工作模式和python转换器一样，此处不赘述。
        
        json转换器的转换结果，实际上是一个动态类型的python对象。例如如下json:
```
{
  'key':[{}{}{}]
  'value':
        {
          'key1':value
          'key2':value
        }
}
```
拖入json转换器到该列，如果工作模式是`不进行转换`，则你可以在转换结果列，拖入`Python转换器`,脚本内容填写`data[key]`,工作模式选择`转换为列表`，则key中的数组自动会被提取出来。

注意事项:
1. python和json转换器配合使用，能够解决一大类ajax网页的问题。更详细的内容，可参考
2. 网页的json格式并不标准，此时需要通过其他工具，对字符串进行预处理，方可转换为json。
3. 如果json非常复杂，是不建议直接用Hawk做数据清洗的，正确的做法是将json保存成文本，之后用其他工具或手工编写代码后处理。
    </system:String>
    <system:String x:Key="key_75">
        数据库连接失败，请检查数据库配置，或手动设定MongoDB数据库的安装路径以方便自动修复
    </system:String>
    <system:String x:Key="key_650">
        正在查询XPath
    </system:String>
    <system:String x:Key="key_667">
        已经存在同名的属性，是否依然添加?
    </system:String>
    <system:String x:Key="ToListTF">
        启动并行
    </system:String>
    <system:String x:Key="key_289">
        取消任务
    </system:String>
    <system:String x:Key="key_103">
        错误信息
    </system:String>
    <system:String x:Key="key_28">
        数据库名称
    </system:String>
    <system:String x:Key="key_400">
        按类似1'h '3'm '5's'格式进行填写
    </system:String>
    <system:String x:Key="key_422">
        生成模式
    </system:String>
    <system:String x:Key="key_81">
        SQLLite连接器异常
    </system:String>
    <system:String x:Key="key_321">
        已经成功覆盖任务
    </system:String>
    <system:String x:Key="key_324">
        编译错误：{0}，位置在{1}行,从{2}到{3}
    </system:String>
    <system:String x:Key="DelayTF">
        延时
    </system:String>
    <system:String x:Key="key_171">
        下一个
    </system:String>
    <system:String x:Key="not_find_module">
        没有找到名称为'{0}'的{1}，请检查“{2}”是否填写错误
    </system:String>
    <system:String x:Key="key_613">
        葡萄牙语
    </system:String>
    <system:String x:Key="key_359">
        爬虫选择
    </system:String>
    <system:String x:Key="key_227">
        查看
    </system:String>
    <system:String x:Key="TrimTF">
        清除空白符
    </system:String>
    <system:String x:Key="key_232">
        添加虚拟数据集
    </system:String>
    <system:String x:Key="FileConnectorCSV">
        CSV导入导出器
    </system:String>
    <system:String x:Key="key_697">
        调试分析
    </system:String>
    <system:String x:Key="key_99">
        提示信息
    </system:String>
    <system:String x:Key="key_297">
        显示并配置
    </system:String>
    <system:String x:Key="key_462">
        选择所要连接的数据表
    </system:String>
    <system:String x:Key="ToListTF_desc" xml:space="preserve">
        设置任务并行方式和参数
        该模块在执行时，会切分本模块前后的数据流，以前侧的数据为种子，后侧的任务为mapper执行
        注意:
        1. 该转换器在调试和串行执行模式不起任何作用，仅仅作为一个标志
        2. 它能够在并行模式下，给执行引擎一个并行分叉的标志。
        3. 还能设置为每个子线程分配多少个种子文档，并设置子线程的名称
    </system:String>
    <system:String x:Key="NullFT">
        空对象过滤器
    </system:String>
    <system:String x:Key="key_278">
        系统设置与状态统计
    </system:String>
    <system:String x:Key="key_93">
        数据表列表
    </system:String>
    <system:String x:Key="key_202">
        网页采集器
    </system:String>
    <system:String x:Key="key_638">
        2.属性提取
    </system:String>
    <system:String x:Key="key_506">
        为了方便用户，下拉菜单中提供了已有网页采集器配置的url，可修改后使用
    </system:String>
    <system:String x:Key="key_461">
        数据表
    </system:String>
    <system:String x:Key="key_771">
        是否激活
    </system:String>
    <system:String x:Key="key_310">
        最近打开的文件
    </system:String>
    <system:String x:Key="key_494">
        连接器
    </system:String>
    <system:String x:Key="key_469">
        生成值
    </system:String>
    <system:String x:Key="key_432">
        当要输出多个结果时选{{script_mode_list}}，否则选One,参考“网页采集器”
    </system:String>
    <system:String x:Key="key_35">
        连接数据库
    </system:String>
    <system:String x:Key="key_131">
        操作
    </system:String>
    <system:String x:Key="key_562">
        分组并行数量
    </system:String>
    <system:String x:Key="key_577">
        北京
    </system:String>
    <system:String x:Key="key_243">
        本集合数据量较大，转换可能会占用较高的内存和导致程序崩溃，确定继续吗?
    </system:String>
    <system:String x:Key="key_680">
        清空所有工具
    </system:String>
    <system:String x:Key="GetIPLocation">
        获取IP的坐标
    </system:String>
    <system:String x:Key="key_412">
        输入或选择调用的子任务的名称
    </system:String>
    <system:String x:Key="key_773">
        自动刷新
    </system:String>
    <system:String x:Key="key_68">
        自增主键名称
    </system:String>
    <system:String x:Key="key_276">
        调试
    </system:String>
    <system:String x:Key="key_161">
        目标内容
    </system:String>
    <system:String x:Key="key_612">
        法语
    </system:String>
    <system:String x:Key="key_798">
        工作线程
    </system:String>
    <system:String x:Key="key_366">
        求反
    </system:String>
    <system:String x:Key="key_670">
        HTML抽取数据失败，url:{0}, 异常为{1}
    </system:String>
    <system:String x:Key="Time2StrTF">
        时间转字符串
    </system:String>
    <system:String x:Key="key_163">
        路径
    </system:String>
    <system:String x:Key="key_538">
        每页数量
    </system:String>
    <system:String x:Key="key_247">
        增加新连接
    </system:String>
    <system:String x:Key="key_796">
        ItemTemplate=
    </system:String>
    <system:String x:Key="ReadFileGe">
        读取文件数据
    </system:String>
    <system:String x:Key="key_559">
        对每个子线程起的名称
    </system:String>
    <system:String x:Key="AddNew_desc">
        为数据集AddNewTF，值为某固定值
    </system:String>
    <system:String x:Key="MergeTF">
        合并多列
    </system:String>
    <system:String x:Key="MergeTF_format" >
        形如'http:\\{0}:{1},{2}...'
        输入列的序号为0，
        之后的1,2分别代表【其他项】的第0和第1个值
    </system:String>
    <system:String x:Key="MergeTF_desc" xml:space="preserve">
        该模块可以将多个列合并成一个列
        常见的如将page合并到url中，也可以通过文件名，合并出要保存的文件的位置，是使用次数最多的模块。
        它的操作非常灵活，例如格式为： `format= {0}+{1}+{2}` ， 其他列为`B C`，则代表将输入列，B列和C列的内容直接拼接。
        - `{0}`：输入列,
        - `{1}`：`其他列`中的第0项，`{1}`代表第1项
        - `[a]`：A列中的内容
        - `{config}` : 工程全局配置中键为config的值
        总结来说： 方括号代表从本行的其他列，大括号可从全局配置中读取内容
        若全局配置或数据中不包含对应的内容，则该列自动为空
    </system:String>

    <system:String x:Key="ResponseTF_desc">
        使用网页采集器获取网页数据，得到响应字段的值并添加到对应的属性中
    </system:String>
    <system:String x:Key="key_105">
        顾问
    </system:String>
    <system:String x:Key="RegexSplitTF_desc">
        使用正则表达式分割字符串
    </system:String>
    <system:String x:Key="key_225">
        删除连接
    </system:String>
    <system:String x:Key="DebugManager_desc">
        输出调试信息
    </system:String>
    <system:String x:Key="FileExistFT">
        路径是否存在
    </system:String>
    <system:String x:Key="key_159">
        启动缓存
    </system:String>
    <system:String x:Key="key_211">
        1.基本选项
    </system:String>
    <system:String x:Key="key_784">
        输入
    </system:String>
    <system:String x:Key="key_288">
        开始任务
    </system:String>
    <system:String x:Key="XPathTF2">
        门类枚举
    </system:String>
    <system:String x:Key="key_47">
        总共
    </system:String>
    <system:String x:Key="key_795">
        当前加载的所有数据，可在此进行管理
    </system:String>
    <system:String x:Key="DictTF_desc">
        将列数据转换为行数据，拖入的列为key
    </system:String>
    <system:String x:Key="DbGE">
        从数据库生成
    </system:String>
    <system:String x:Key="key_568">
        启用
    </system:String>
    <system:String x:Key="key_224">
        配置连接
    </system:String>
    <system:String x:Key="key_259">
        强制刷新连接失败
    </system:String>
    <system:String x:Key="key_236">
        不存在任何数据
    </system:String>
    <system:String x:Key="IDataBaseConnector">
        数据库连接器接口
    </system:String>
    <system:String x:Key="FileConnectorXML_desc">
        输出和输入XML文件
    </system:String>
    <system:String x:Key="StrExtractTF_desc" xml:space="preserve">
        提取字符串中，从首串到尾串中间的文本内容
        当文本为`CABD`时，需要获取B，而B非常长，写正则表达式提取有很大困难时，可以使用本模块。
        此时，首串填写A，尾串填写D，则Hawk就能将B提取出来。如果勾选`包含首尾字符`，则输出`ABD`，否则只有B。
        注意，建议A和D在文本中是唯一的，否则抽取出来的B可能并不是你想要的。
        该工具特别适合在抽取网页的某一特定内容时使用.
    </system:String>
    <system:String x:Key="key_679">
        删除节点
    </system:String>
    <system:String x:Key="key_233">
        删除表
    </system:String>
    <system:String x:Key="key_544" xml:space="preserve">
        若想获取分割后的第0个元素，则填入0，获取倒数第一个元素，则填入-1 
        可输入多个匹配编号，中间以空格分割，
        【输出列】也需要与之一对应
    </system:String>
    <system:String x:Key="key_118">
        代理配置
    </system:String>
    <system:String x:Key="key_182">
        当前代理索引
    </system:String>
    <system:String x:Key="key_174">
        超级模式解析失败
    </system:String>
    <system:String x:Key="key_271">
        捐赠
    </system:String>
    <system:String x:Key="key_546">
        多个分隔符用空格分割，换行符用\\t，制表符用\\t
    </system:String>
    <system:String x:Key="RegexFT">
        正则筛选器
    </system:String>
    <system:String x:Key="key_692">
        插入工作模块，名称:
    </system:String>
    <system:String x:Key="ICustomView">
        可实现自助替换界面的接口
    </system:String>
    <system:String x:Key="key_513">
        若需要引用第三方Python库，则可指定库的路径，一行一条
    </system:String>
    <system:String x:Key="key_239">
        新建数据集
    </system:String>
    <system:String x:Key="key_669">
        HTML抽取数据失败，url:{0}
    </system:String>
    <system:String x:Key="key_664">
        检查子节点XPath正确性
    </system:String>
    <system:String x:Key="key_747">
        获取策略
    </system:String>
    <system:String x:Key="key_302">
        添加
    </system:String>
    <system:String x:Key="key_657">
        手气不错面板
    </system:String>
    <system:String x:Key="key_22">
        表名
    </system:String>
    <system:String x:Key="key_72">
        插入失败
    </system:String>
    <system:String x:Key="key_307">
        加载项目
    </system:String>
    <system:String x:Key="key_193">
        抓取目标
    </system:String>
    <system:String x:Key="FreeDocument">
        自由文档
    </system:String>
    <system:String x:Key="FileConnectorExcel_desc">
        输出标准EXCEL文件，效率较低
    </system:String>
    <system:String x:Key="SplitTF_desc">
        通过字符分割字符串
    </system:String>
    <system:String x:Key="WriteFileTextTF_desc">
        写入文件中的文本，由于在并行模式下同时写入文件可能会导致问题，因此尽量使用串行模式
    </system:String>
    <system:String x:Key="key_413">
        调用范围
    </system:String>
    <system:String x:Key="NumberTF_desc" xml:space="preserve">
        提取当前列中出现的数值
        它是正则转换器的特例，它能够提取浮点或整数，也能包含正负数
    </system:String>
    <system:String x:Key="key_503">
        写入多个列名，中间使用空格分割，若合并输入列，则可以为空
    </system:String>
    <system:String x:Key="DateRangeGE_desc">
        生成某范围内的日期和时间
    </system:String>
    <system:String x:Key="key_639">
        自动嗅探
    </system:String>
    <system:String x:Key="key_502">
        其他项
    </system:String>
    <system:String x:Key="key_698">
        调试模块属性
    </system:String>
    <system:String x:Key="key_565">
        是否将每个子线程插入到任务队列中，从而显示进度
    </system:String>
    <system:String x:Key="key_165">
        样例1
    </system:String>
    <system:String x:Key="key_702">
        确定启动执行?
    </system:String>
    <system:String x:Key="key_409">
        2.调用选项
    </system:String>
    <system:String x:Key="key_173">
        退出
    </system:String>
    <system:String x:Key="key_331">
        当前工程文件的路径不存在，生成新工程
    </system:String>
    <system:String x:Key="key_416">
        源属性:目标属性列 多个映射中间用空格分割，例如A:B C:D, 表示主任务中的A,B属性列会以C,D的名称传递到子任务中
    </system:String>
    <system:String x:Key="key_766">
        新增属性
    </system:String>
    <system:String x:Key="key_729">
        保存的任务
    </system:String>
    <system:String x:Key="key_433">
        输出列
    </system:String>
    <system:String x:Key="key_621">
        属性0
    </system:String>
    <system:String x:Key="key_114">
        HTTP错误，URL:{0},类型:{1}
    </system:String>
    <system:String x:Key="RepeatTF_desc">
        对当前行进行重复性生成
    </system:String>
    <system:String x:Key="key_722">
        因输入为空跳过
    </system:String>
    <system:String x:Key="key_587">
        源城市
    </system:String>
    <system:String x:Key="MongoDBConnector_desc">
        提供MongoDB交互的数据库服务
    </system:String>
    <system:String x:Key="key_311">
        是否确定保存任务?
    </system:String>
    <system:String x:Key="key_651">
        属性{0}
    </system:String>
    <system:String x:Key="key_693">
        回退到开头
    </system:String>
    <system:String x:Key="key_319">
        已经成功添加
    </system:String>
    <system:String x:Key="key_549">
        首串
    </system:String>
    <system:String x:Key="key_257">
        确定对数据表
    </system:String>
    <system:String x:Key="key_249">
        的数据连接服务成功！
    </system:String>
    <system:String x:Key="key_121">
        超时时间
    </system:String>
    <system:String x:Key="key_267">
        使用文档
    </system:String>
    <system:String x:Key="key_127">
        禁止数
    </system:String>
    <system:String x:Key="key_lang">
        语言
    </system:String>
    <system:String x:Key="NlpTF_desc">
        通过语言云获取的自然语言处理功能，包括分词，词性标注，主题提取等
    </system:String>
    <system:String x:Key="key_760">
        源码视图
    </system:String>
    <system:String x:Key="key_787">
        步骤2：设置主任务属性列对应到子任务的属性名，下拉菜单仅参考，可直接编辑文本框
    </system:String>
    <system:String x:Key="key_533">
        倒序
    </system:String>
    <system:String x:Key="RenameTF_desc">
        对列名进行修改,常用
        拖入的列是要修改的列，填写`输出列`后，原始列被删除，内容转移到新列上
        除了手工拖入模块，也可直接在数据清洗列上的文本框中直接修改列名，按回撤提交，可达到同样效果。
    </system:String>
    <system:String x:Key="key_684">
        调试到该步
    </system:String>
    <system:String x:Key="key_611">
        韩语
    </system:String>
    <system:String x:Key="key_199">
        1.基本信息
    </system:String>
    <system:String x:Key="key_454">
        数量
    </system:String>
    <system:String x:Key="key_637">
        提取标签
    </system:String>
    <system:String x:Key="key_793">
        ItemTemplate=
    </system:String>
    <system:String x:Key="key_145">
        ,插件配置文件有错误，已经重建
    </system:String>
    <system:String x:Key="key_788">
        主任务属性
    </system:String>
    <system:String x:Key="key_84">
        新建
    </system:String>
    <system:String x:Key="key_763">
        属性提取
    </system:String>
    <system:String x:Key="key_426">
        勾选后，本子任务会添加到任务管理器中
    </system:String>
    <system:String x:Key="key_106">
        生成
    </system:String>
    <system:String x:Key="key_386">
        不勾选此选项使用枚举式迭代，需保证在本模块之后没有其他操作，否则请勾选该选项
    </system:String>
    <system:String x:Key="key_24">
        1.连接管理
    </system:String>
    <system:String x:Key="MongoDBConnector">
        MongoDB
    </system:String>
    <system:String x:Key="key_619">
        应用中心账号
    </system:String>
    <system:String x:Key="WriteFileTextTF">
        写入文件文本
    </system:String>
    <system:String x:Key="key_144">
        布局文件已经成功保存为
    </system:String>
    <system:String x:Key="key_150">
        在运行时卸载插件可能造成程序崩溃,确定继续？
    </system:String>
    <system:String x:Key="ReReplaceTF_desc">
        通过正则表达式替换数值
    </system:String>
    <system:String x:Key="key_286">
        执行任务脚本
    </system:String>
    <system:String x:Key="key_640">
        保存请求
    </system:String>
    <system:String x:Key="RepeatFT">
        删除重复项
    </system:String>
    <system:String x:Key="key_7">
        列特性
    </system:String>
    <system:String x:Key="key_273">
        博客
    </system:String>
    <system:String x:Key="key_141">
        布局
    </system:String>
    <system:String x:Key="key_102">
        执行失败,错误信息  {0}
    </system:String>
    <system:String x:Key="key_682">
        上移
    </system:String>
    <system:String x:Key="key_238">
        新建或拷贝
    </system:String>
    <system:String x:Key="key_654">
        在该网页中找不到关键字 {0},可能是动态请求，可以启用【{1}】,并将浏览器页面翻到包含该关键字的位置
    </system:String>
    <system:String x:Key="key_490">
        查询多数据
    </system:String>
    <system:String x:Key="key_122">
        请求编码
    </system:String>
    <system:String x:Key="key_644">
        参数配置
    </system:String>
    <system:String x:Key="key_280">
        清空任务列表
    </system:String>
    <system:String x:Key="key_762">
        任务名称
    </system:String>
    <system:String x:Key="key_491">
        启用该项时，会查询多个满足条件的项，同时将同一列保存为数组
    </system:String>
    <system:String x:Key="key_543">
        空格分割
    </system:String>
    <system:String x:Key="key_672">
        网站提示:
    </system:String>
    <system:String x:Key="key_786">
        Height=
    </system:String>
    <system:String x:Key="MergeRepeatTF_desc">
        对重复的数据行，进行合并操作
    </system:String>
    <system:String x:Key="RangeFT">
        数值范围过滤器
    </system:String>
    <system:String x:Key="key_659">
        网页结构计算中
    </system:String>
    <system:String x:Key="key_281">
        确定清空所有算法模块么？
    </system:String>
    <system:String x:Key="key_129">
        解析错误数
    </system:String>
    <system:String x:Key="key_112">
        字典序列化失败
    </system:String>
    <system:String x:Key="key_170">
        上一个
    </system:String>
    <system:String x:Key="key_168">
        复制
    </system:String>
    <system:String x:Key="key_97">
        执行成功
    </system:String>
    <system:String x:Key="key_92">
        打开新文件
    </system:String>
    <system:String x:Key="TableEX">
        写入数据表
    </system:String>
    <system:String x:Key="key_113">
        HTTP错误，类型:
    </system:String>
    <system:String x:Key="TableEX_desc">
        将数据保存至软件的数据管理器中，之后可方便进行其他处理，拖入到任意一列皆可，常用
    </system:String>
    <system:String x:Key="key_551">
        包含首尾串
    </system:String>
    <system:String x:Key="key_721">
        错误数
    </system:String>
    <system:String x:Key="key_631">
        配置属性
    </system:String>
    <system:String x:Key="TrimTF_desc">
        清除字符串前后和中间的空白符
        默认能去掉文本前后的空白字符，也可以通过勾选内部选项，清除文本中间的空白符
        > 使用`正则替换`也能实现类似的要求，只是本模块会更简单。
    </system:String>
    <system:String x:Key="key_803">
        沙漠之鹰
    </system:String>
    <system:String x:Key="key_87">
        例如d:\\test\\mydb.sqlite
    </system:String>
    <system:String x:Key="key_723">
        本页面展示了所有模块的执行次数，流入流出数据数，一般上游的流出等于下游流入，若有红色框选模块，则提示该模块配置可能有问题
    </system:String>
    <system:String x:Key="key_658">
        属性配置
    </system:String>
    <system:String x:Key="key_566">
        本模块要处理的列的名称
    </system:String>
    <system:String x:Key="key_55">
        属性
    </system:String>
    <system:String x:Key="key_229">
        没有在表中的发现可用的数据
    </system:String>
    <system:String x:Key="key_316">
        当前工程中没有包含任何任务，请在任务管理页中，将要保存的任务插入到当前工程中
    </system:String>
    <system:String x:Key="FileConnectorTable">
        文本导入导出器
    </system:String>
    <system:String x:Key="RegexTF_desc" xml:space="preserve">
        通过正则表达式提取内容, 可匹配一个和多个内容
        设置匹配编号为正数n时，它可将第n个匹配结果转换到新列上。如果不填写新列名，则内容直接覆盖原始列。
        输入负数n时，则会返回倒数第n个内容。如果没有发现匹配，则返回空
    </system:String>
    <system:String x:Key="key_223">
        数据管理 
    </system:String>
    
    <system:String x:Key="key_589">
        运动方案
    </system:String>
    <system:String x:Key="key_10">
        虚拟化数据集
    </system:String>
    <system:String x:Key="key_668">
        成功添加属性
    </system:String>
    <system:String x:Key="key_266">
        访问Hawk的开源项目地址
    </system:String>
    <system:String x:Key="key_401">
        生成时间格式
    </system:String>
    <system:String x:Key="MySQLConnector_desc">
        IDataBaseConnector
    </system:String>
    <system:String x:Key="FileExistFT_desc">
        判断某一个文件是否已经在指定路径上
    </system:String>
    <system:String x:Key="key_282">
        保存全部任务
    </system:String>
    <system:String x:Key="MySQLConnector">
        MySQL数据库
    </system:String>
    <system:String x:Key="key_683">
        下移
    </system:String>
    <system:String x:Key="key_308">
        保存项目
    </system:String>
    <system:String x:Key="SaveFileEX">
        保存超链接文件
    </system:String>
    <system:String x:Key="key_190">
        高级选项
    </system:String>
    <system:String x:Key="UrlTF">
        URL字符转义
    </system:String>
    <system:String x:Key="key_574">
        空白符替换为空格
    </system:String>
    <system:String x:Key="DeleteTF_desc" xml:space="preserve">
        删除所在列的内容
        删除之后，在该列的内容和所有工具就不再可见。要想修改可以在数据清洗界面左侧的模块列表里选择，修改和删除。
    </system:String>
    <system:String x:Key="SQLiteDatabase">
        SQLite数据库
    </system:String>
    <system:String x:Key="key_569">
        结果要输出到的列的名称
    </system:String>
    <system:String x:Key="key_95">
        不存在定义
    </system:String>
    <system:String x:Key="key_588">
        目标城市
    </system:String>
    <system:String x:Key="key_534">
        勾选此项后，选择从后数的第n项
    </system:String>
    <system:String x:Key="DataManager_desc">
        查看和分析数据
    </system:String>
    <system:String x:Key="key_126">
        总请求数
    </system:String>
    <system:String x:Key="key_661">
        启动嗅探服务
    </system:String>
    <system:String x:Key="RangeGE">
        生成区间数
    </system:String>
    <system:String x:Key="NearbySearch">
        检索附近
    </system:String>
    <system:String x:Key="key_322">
        加载工程文件，位置为{0}
    </system:String>
    <system:String x:Key="key_802">
        d:LayoutOverrides=
    </system:String>
    <system:String x:Key="key_545">
        分割字符
    </system:String>
    <system:String x:Key="key_555">
        转换格式
    </system:String>
    <system:String x:Key="key_305">
        文件
    </system:String>
    <system:String x:Key="key_26">
        密码
    </system:String>
    <system:String x:Key="key_284">
        加载本任务
    </system:String>
    <system:String x:Key="key_596">
        搜索半径
    </system:String>
    <system:String x:Key="key_306">
        新建项目
    </system:String>
    <system:String x:Key="key_635">
        Http请求详情
    </system:String>
    <system:String x:Key="DataManager">
        数据管理
    </system:String>
    <system:String x:Key="key_663">
        使用当前父节点{0} {1}，在文档中找不到任何父节点
    </system:String>
    <system:String x:Key="key_15">
        主键
    </system:String>
    <system:String x:Key="IConfigFile">
        配置文件接口
    </system:String>
    <system:String x:Key="key_710">
        最大线程数
    </system:String>
    <system:String x:Key="key_504">
        格式
    </system:String>
    <system:String x:Key="key_782">
        起始
    </system:String>
    <system:String x:Key="key_480">
        最大重复次数
    </system:String>
    <system:String x:Key="key_434">
        从原任务中传递到子任务的列，多个列用空格分割
    </system:String>
    <system:String x:Key="key_597">
        所有结果
    </system:String>
    <system:String x:Key="key_50">
        文件不是合法的Json文件
    </system:String>
    <system:String x:Key="key_216">
        当前连接
    </system:String>
    <system:String x:Key="UrlTF_desc" >
        对超链接url生成URL编码后的字符串，用以进行远程访问
    </system:String>
    <system:String x:Key="IXPlugin">
        XFrmWork基本插件接口
    </system:String>
    <system:String x:Key="AutoIndexTF_desc">
        自动生成一个从起始索引开始的自增新列
    </system:String>
    <system:String x:Key="key_406">
        选择所要连接的数据库服务
    </system:String>
    <system:String x:Key="key_425">
        添加到任务
    </system:String>
    <system:String x:Key="key_530">
        要获取的响应头的名称，多个之间用空格分割，不区分大小写
    </system:String>
    <system:String x:Key="key_800">
        感谢使用 HAWK
    </system:String>
    <system:String x:Key="key_458">
        如需生成数组1,3,5,7,9，则间隔为2
    </system:String>
    <system:String x:Key="key_5">
        来源
    </system:String>
    <system:String x:Key="key_780">
        可将图标拖入右侧数据列的上方空白列表处，为该列添加模块
    </system:String>
    <system:String x:Key="key_184">
        路径解析有误，返回空节点:
    </system:String>
    <system:String x:Key="key_496">
        表主键
    </system:String>
    <system:String x:Key="SmartETLTool_desc">
        对数据筛选转换和合并，并导出到数据库中
    </system:String>
      <system:String x:Key="SmartETLTool_desc_detail" xml:space="preserve">
        数据清洗是一种任务，包括几十个子模块， 这些子模块包含四类：生成， 转换， 过滤和执行。 
        ![丰富的模块](https://images2018.cnblogs.com/blog/287060/201805/287060-20180506160120254-60486829.png)
        数据清洗可以通过组合多个不同的子模块，生成多样的功能，通过拖拽构造出一个工作流，它能够产生一个有限或无限的文档序列。比如下面：
        ![image_1auq4oooc1m8m9tc02sjv1j4o9.png-71.6kB](http://static.zybuluo.com/buptzym/gzr3u0z80478s31u9v1zdfw5/image_1auq4oooc1m8m9tc02sjv1j4o9.png)
        拖入的模块顺序是非常重要的，一个常见问题是顺序不对，导致生成的数据不符合预期。数据清洗可通过 {{CrawlerTF}} 来调用网页采集器，也可以通过`子任务`来调用其他数据清洗，是组合各种模块和任务的工厂。
    </system:String>
      <system:String x:Key="SmartETLTool_debug" xml:space="preserve">
        ### 调试模式
        在编辑任务的过程中，处于**调试模式**，它具备如下特点：
        - 所有执行器都不工作，避免副作用
        - 点击下方中间的刷新按钮，或修改配置，展示的数据会自动刷新
        - 只能运行在串行模式上
        - 所见即所得，只显示一定数量的数据（通过采样量修改）
        - 可以禁用或启用某些模块，观察效果
        - 会加入web请求和读取文件的缓存， 来提升预览速度（可能会导致一些问题）
        - 输入列和输出列会用不同的颜色进行表示

        在调试时，{{CrawlerTF}}模块可能会请求web数据，为了提升性能，该模块对请求做了缓存。保证数据只需获取一次，如果想强制刷新数据，将{{CrawlerTF}}模块禁用，再启用，原始缓存数据就会被擦除。
     </system:String>
         <system:String x:Key="serial_mode_desc" xml:space="preserve">
        ### {{serial_mode}}
        只有点击**执行**时，才会切换到执行模式。执行时，可工作在{{serial_mode}}/{{parallel_mode}}
        在{{serial_mode}}下， 所有任务串行执行，速度慢，但对网站压力小，不容易被封锁。为了进一步降低执行速度，可以设置延时时间，此时每次网络请求前，都会延时一定时间。
        注意:
        1. 当执行器包含类似"向文件中追加内容"的操作时，强烈建议使用串行模式，因为Hawk没有加入多线程锁，有可能会导致冲突。
        2. 建议完成爬虫设计后，先进行{{serial_mode}}，初步观察是否正确，之后再设置并行模式大量抓取。
     </system:String>
           <system:String x:Key="parallel_mode_desc" xml:space="preserve">
        ### {{parallel_mode}}
       极大地加快了抓取速度，但很容易被封锁。 

     </system:String>
      <system:String x:Key="taskmanager_desc" xml:space="preserve">
        ## 线程管理
        不论是调试还是执行模式，系统都会在任务管理视图中增加一个或多个线程。
        你可以勾选，或取消勾选部分或全部线程，暂停或取消它们。当网站限制抓取时，可以暂停所有线程，等恢复后再次执行。

        注意:
        1. 当工作流有误时（比如该列所有数据都空，却在该列添加了【空对象过滤器】，那么所有数据都会被过滤）可能不会产生任何数据输出。此时进度条并不会向前推进，产生卡死的假象。此时可强行将其删除
        2. 线程删除的流程是：先安全将其取消，如果线程无响应，则会直接将其杀死

      </system:String>

    <system:String x:Key="SmartETLTool_step" xml:space="preserve">
        ### 单步调试
        Hawk模仿了播放器和调试器，在调试模式下有`步`的概念，例如所在位置是6/20， 则说明总共有20个模块，只生效前面6个模块。 可以通过左右单击，或直接回退到开头、末尾来进行调试。

        左侧显示了当前所有的模块，顺序和它们的输入输出列，双击上面的模块可对其进行配置，右键可删除，上下移动这些模块。
        ![上下拖拽，右键配置每一步的参数](https://images2018.cnblogs.com/blog/287060/201805/287060-20180506155928987-1522342347.png)

        有时为了在单步调试过程中查看模块的属性，可勾选界面右下角的`调试详情`，此时可直接显示当前模块所在的属性。本质上，单步调试只是提取了工作流的一部分进行操作。
        你可以在单步调试中，拖入新的模块。模块会自动插入在工作流中间。
        ![模块数量](https://images2018.cnblogs.com/blog/287060/201805/287060-20180506160222760-1330008382.png)
    </system:String>
    <system:String x:Key="key_564">
        显示独立任务
    </system:String>
    <system:String x:Key="LayoutManager">
        布局管理器
    </system:String>
    <system:String x:Key="key_291">
        暂停
    </system:String>
    <system:String x:Key="key_33">
        数据库删除失败:
    </system:String>
    <system:String x:Key="key_30">
        连接状态
    </system:String>
    <system:String x:Key="key_563">
        将多个种子合并为一个任务执行，这对于小型种子任务可有效提升效率
    </system:String>
    <system:String x:Key="ReadFileGe_desc">
        从文件中读取数据内容，为了保证正确读取，需配置文件格式和读取属性
除了一般的数据库导入导出，Hawk还支持从文件导入，支持的文件类型包括：
 - Excel
 - CSV(逗号分割文本文件)
 - TXT (制表符分割文本文件)
 - Json
 - xml
    </system:String>
    <system:String x:Key="key_203">
        您没有填写对应参数:{0}
    </system:String>
    <system:String x:Key="key_725">
        双击可加载任务，右键可对任务进行删除等操作
    </system:String>
    <system:String x:Key="TextGE_desc">
        每行一条数据，常用
    </system:String>
    <system:String x:Key="key_703">
        没有在本任务中发现任何执行器。
    </system:String>
    <system:String x:Key="key_86">
        数据库路径
    </system:String>
    <system:String x:Key="key_37">
        创建新库
    </system:String>
    <system:String x:Key="key_567">
        介绍
    </system:String>
    <system:String x:Key="key_109">
        未知
    </system:String>
    <system:String x:Key="key_408">
        3.数量
    </system:String>
    <system:String x:Key="key_328">
        脚本路径
    </system:String>
    <system:String x:Key="key_160">
        属性名称
    </system:String>
    <system:String x:Key="click_refresh">
        点击“刷新“可刷新结果
    </system:String>
    <system:String x:Key="click_commit">
        点击“确认结果”即可提交
    </system:String>
    <system:String x:Key="key_142">
        刷新
    </system:String>
    <system:String x:Key="TableGE">
        从数据表生成
    </system:String>
    <system:String x:Key="key_358" xml:space="preserve">
        路径或文件名，例如D:\\file.txt, 可通过'[]'引用其他列，
        若为目录名，必须显式以/结束，文件名将会通过url自动解析
    </system:String>
    <system:String x:Key="key_235">
        浏览方式
    </system:String>
    <system:String x:Key="key_206">
        单文档
    </system:String>
    <system:String x:Key="SupplierTF">
        重试补数据
    </system:String>
    <system:String x:Key="SupplierTF_desc">
      尝试对已有错误日志重跑补数据，错误日志需包含错误所在的任务名和模块名
    </system:String>
    <system:String x:Key="xpath_detector">
            XPath检索
      </system:String>
    <system:String x:Key="xpath_detector_desc">
          可通过搜索快速定位所需文本的XPath
    </system:String>
     <system:String x:Key="is_generate_error_collection">
            生成错误集合
    </system:String>
    <system:String x:Key="is_generate_error_collection_desc">
         用于记录任务中产生的错误，进而回补错误丢失的数据集
    </system:String>
    <system:String x:Key="is_display_desc">
           显示模块描述
    </system:String>
    <system:String x:Key="serial_mode">
        串行模式 
    </system:String>
    <system:String x:Key="parallel_mode">
        并行模式
    </system:String>
    <system:String x:Key="merge_append">
        按行纵向合并
    </system:String>
    <system:String x:Key="merge_merge">
        按列横向合并
    </system:String>
    <system:String x:Key="merge_cross">
        笛卡尔交叉
    </system:String>
    <system:String x:Key="merge_mix">
        交错交叉
    </system:String>
    <system:String x:Key="merge_outputonly">
        直接输出
    </system:String>
    <system:String x:Key="proxy_setting_desc" xml:space="preserve">
        一行一条，参考python proxy代理的设置方法,例如:
        包含用户名密码：http://username:password@121.193.143.249:80/ 
        不包含:http://121.193.143.249:80/
    </system:String>
    <system:String x:Key="proxyge">
        添加代理
    </system:String>
    <system:String x:Key="proxyge_desc">
        
    </system:String>
    <system:String x:Key="checkupgrade">
        检查更新
    </system:String>
    <system:String x:Key="no_desc">
        没有描述
    </system:String>
    <system:String x:Key="auto_save_time">
        自动保存间隔
    </system:String>
     <system:String x:Key="auto_save_time_desc">
        单位为秒，自动保存工程和数据，若不大于0则不会保存
    </system:String>

    <system:String x:Key="script_mode_list">
        多文档
    </system:String>
    <system:String x:Key="script_mode_one">
        单文档
    </system:String>
    <system:String x:Key="script_mode_no">
        不进行转换
    </system:String>
    <system:String x:Key="SortByColumn">
        按列数排序
    </system:String>
    <system:String x:Key="SortByRow">
        按行数排序,
    </system:String>
    <system:String x:Key="SortByScore">
        按分数排序,
    </system:String>
    <system:String x:Key="SortByArea">
        按面积排序
    </system:String>

    <system:String x:Key="default">
        默认值
    </system:String>
    <system:String x:Key="options">
        可选项
    </system:String>
    <system:String x:Key="exe_inner">
        使用原执行器
    </system:String>
    <system:String x:Key="string_option">
        string选项
    </system:String>
    <system:String x:Key="edit_string_option">
        可编辑选项
    </system:String>
</ResourceDictionary>