<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:system="clr-namespace:System;assembly=mscorlib">
<system:String x:Key="Closing">
 Are you sure you want to leave Hawk?
 </system:String>
<system:String x:Key="ConfigNull">
 Do not contain any information about configuration files, please check.
 </system:String>
<system:String x:Key="ControlLoad">
 Control loading
 </system:String>
<system:String x:Key="Closing2" xml:space="preserve">
 [{0}] the task may not have been saved yet.
Save tasks and exit.
[no]: do not save exit.
[Cancel]: quit directly  
 </system:String>
<system:String x:Key="DataMgmt">
 data management
 </system:String>
<system:String x:Key="SysState">
 System status view
 </system:String>
<system:String x:Key="DebugView">
 Debug information window
 </system:String>
<system:String x:Key="Error">
 fail
 </system:String>
<system:String x:Key="IconNotExist">
 System icon file does not exist.
 </system:String>
<system:String x:Key="LongTask">
 Waiting for a long time. Please wait.
 </system:String>
<system:String x:Key="ModuleMgmt">
 Welcome page
 </system:String>
<system:String x:Key="Source">
 source
 </system:String>
<system:String x:Key="Start">
 Normal startup
 </system:String>
<system:String x:Key="Tips">
 Hint information
 </system:String>
<system:String x:Key="XPathExpError">
 XPath expression may be wrong.
 </system:String>
<system:String x:Key="RemaindSave" xml:space="preserve">
 [{0}] the task may not have been saved yet.
Save tasks and exit.
No: do not save exit
[Cancel]: cancel exit "  
 </system:String>
<system:String x:Key="key_560">
 Zi Xiancheng number
 </system:String>
<system:String x:Key="key_750">
 Complete XPath can be filled in, or retrieved only by ID or class name, such as selecting class and filling in `name'with the value, which is to find all the nodes with class = name
 </system:String>
<system:String x:Key="key_718">
 Normal initialization
 </system:String>
<system:String x:Key="key_258">
 Do you perform delete operations?
 </system:String>
<system:String x:Key="key_641">
 3. dynamic request sniffer
 </system:String>
<system:String x:Key="key_370">
 skip
 </system:String>
<system:String x:Key="key_580">
 Label
 </system:String>
<system:String x:Key="key_505">
 Reference format
 </system:String>
<system:String x:Key="key_69">
 Enabling self increment key writes will increase the self increasing key on the extra column of the data table.
 </system:String>
<system:String x:Key="key_89">
 Sql=
 </system:String>
<system:String x:Key="key_0">
 Do you want to save the contents of the current project? You only have one chance to do so.
 </system:String>
<system:String x:Key="key_67">
 advanced setting
 </system:String>
<system:String x:Key="key_85">
 Please select SQLite database file.
 </system:String>
<system:String x:Key="key_739">
 Database configuration
 </system:String>
<system:String x:Key="key_765">
 Result XPath
 </system:String>
<system:String x:Key="SplitPageTF">
 paging
 </system:String>
<system:String x:Key="key_497">
 Import column
 </system:String>
<system:String x:Key="NullFT_desc" xml:space="preserve">
 Check whether the text is blank or null, commonly used.
You can filter out all the contents are empty, or all strings are empty characters.  
 </system:String>
<system:String x:Key="DataProcessManagerUI">
 DataProcessManager
 </system:String>
<system:String x:Key="key_374">
 Maximum value
 </system:String>
<system:String x:Key="key_120">
 Request method
 </system:String>
<system:String x:Key="key_614">
 Arabic
 </system:String>
<system:String x:Key="key_292">
 recovery
 </system:String>
<system:String x:Key="StrExtractTF">
 Character header and tail extraction
 </system:String>
<system:String x:Key="smartetl_name">
 Data cleaning
 </system:String>
<system:String x:Key="JoinDBTF_desc">
 It is used to complete the join operation and matching with the database.
 </system:String>
<system:String x:Key="key_350">
 Write {2} entries to database {0} and table name {1} successfully.
 </system:String>
<system:String x:Key="key_405">
 1. connector
 </system:String>
<system:String x:Key="key_23">
 server address
 </system:String>
<system:String x:Key="key_677">
 command
 </system:String>
<system:String x:Key="key_164">
 available
 </system:String>
<system:String x:Key="IFileConnector:IDictionarySerializable">
 File import and export basic interface
 </system:String>
<system:String x:Key="key_91">
 Enumeration virtualization
 </system:String>
<system:String x:Key="key_277">
 Level setting
 </system:String>
<system:String x:Key="key_777">
 Thread number
 </system:String>
<system:String x:Key="key_395">
 Delay Time
 </system:String>
<system:String x:Key="DataGridViewer_desc">
 IDataViewer
 </system:String>
<system:String x:Key="key_107">
 filter
 </system:String>
<system:String x:Key="FolderGE">
 Get folder files
 </system:String>
<system:String x:Key="SmartCralerUI">
 SmartCrawler
 </system:String>
<system:String x:Key="key_523">
 Repetitions
 </system:String>
<system:String x:Key="key_180">
 Maximum number of visits
 </system:String>
<system:String x:Key="key_711">
 The maximum thread count range is 0-30.
 </system:String>
<system:String x:Key="key_167">
 Reverse selection
 </system:String>
<system:String x:Key="MergeRepeatTF">
 Duplicate item combination
 </system:String>
<system:String x:Key="key_779">
 You can drag the icon into the upper blank list of the right data column to add the cleaning module to the column.
 </system:String>
<system:String x:Key="key_96">
 Undefined resources
 </system:String>
<system:String x:Key="key_210">
 Quantity range selection
 </system:String>
<system:String x:Key="FileConnectorXML">
 XML import and export device
 </system:String>
<system:String x:Key="key_3">
 The system is busy
 </system:String>
<system:String x:Key="key_411">
 Sub task selection
 </system:String>
<system:String x:Key="key_649">
 The clipboard has been successfully copied to the clipboard.
 </system:String>
<system:String x:Key="key_101">
 Successful implementation
 </system:String>
<system:String x:Key="key_443">
 Read configuration
 </system:String>
<system:String x:Key="key_629">
 Refresh the web page
 </system:String>
<system:String x:Key="key_143">
 view
 </system:String>
<system:String x:Key="key_128">
 Maximum forbidden number
 </system:String>
<system:String x:Key="GetIPLocation_desc">
 Get the latitude and longitude coordinates of a IP address.
 </system:String>
<system:String x:Key="key_34">
 implement
 </system:String>
<system:String x:Key="key_197">
 XPath expression:
 </system:String>
<system:String x:Key="ICustomClass">
 A weak type of simplified interface for the collection of plug-ins that do not specify strong functions.
 </system:String>
<system:String x:Key="key_301">
 Modular
 </system:String>
<system:String x:Key="key_752">
 Number of child nodes
 </system:String>
<system:String x:Key="key_700">
 Have been loaded
 </system:String>
<system:String x:Key="key_730">
 Fast retrieval
 </system:String>
<system:String x:Key="NlpTF">
 natural language processing
 </system:String>
<system:String x:Key="key_769">
 Dynamic request sniffer
 </system:String>
<system:String x:Key="EtlGE">
 Subtask generation
 </system:String>
<system:String x:Key="key_579">
 Information retrieval through city names
 </system:String>
<system:String x:Key="key_74">
 MongoDB database is not local, unable to start automatic database repair.
 </system:String>
<system:String x:Key="EtlEX">
 Sub task execution
 </system:String>
<system:String x:Key="FileConnectorTable_desc">
 Export tab text file
 </system:String>
<system:String x:Key="key_368">
 Commissioning enabled
 </system:String>
<system:String x:Key="key_9">
 data description
 </system:String>
<system:String x:Key="key_108">
 Transformation
 </system:String>
<system:String x:Key="key_153">
 Plug-in unit
 </system:String>
<system:String x:Key="key_226">
 Are you sure you want to delete this connection?
 </system:String>
<system:String x:Key="key_334">
 File {0} does not exist
 </system:String>
<system:String x:Key="key_625">
 The number of attributes can not be empty.
 </system:String>
<system:String x:Key="JoinDBTF">
 Database matching
 </system:String>
<system:String x:Key="key_438">
 Code
 </system:String>
<system:String x:Key="key_269">
 Feedback problem
 </system:String>
<system:String x:Key="key_719">
 Inflow data
 </system:String>
<system:String x:Key="key_285">
 Delete task
 </system:String>
<system:String x:Key="key_745">
 Position:
 </system:String>
<system:String x:Key="key_82">
 Browse path
 </system:String>
<system:String x:Key="key_304">
 Worker thread view
 </system:String>
<system:String x:Key="key_162">
 selector
 </system:String>
<system:String x:Key="key_627">
 Extract data and test results
 </system:String>
<system:String x:Key="key_178">
 generator
 </system:String>
<system:String x:Key="key_156">
 Start loading assemblies
 </system:String>
<system:String x:Key="key_767">
 Attribute management
 </system:String>
<system:String x:Key="key_146">
 The plug-in manager has been loaded.
 </system:String>
<system:String x:Key="key_616">
 automatic detection
 </system:String>
<system:String x:Key="key_279">
 Function
 </system:String>
<system:String x:Key="key_204">
 {{script_mode_none}}
 </system:String>
<system:String x:Key="key_256">
 The current memory data set has been cleared.
 </system:String>
<system:String x:Key="key_756">
 Sorting strategy
 </system:String>
<system:String x:Key="key_354">
 The unit is milliseconds, and the square brackets syntax can also be used, such as [a], to read the delay length from the a column.
 </system:String>
<system:String x:Key="key_152">
 The current type is not found in the plug-in collection.
 </system:String>
<system:String x:Key="key_148">
 Duplicate plug-in type, please check configuration file.
 </system:String>
<system:String x:Key="DbEX_desc">
 Database operations, including writing, deleting and updating, and the input column is the primary key of the table.
 </system:String>
<system:String x:Key="key_132">
 wipe data
 </system:String>
<system:String x:Key="EtlTF_desc">
 Call the selected subtasks as the converter, refer to the relevant documents for subtasks.
 </system:String>
<system:String x:Key="key_83">
 Load
 </system:String>
<system:String x:Key="key_785">
 output
 </system:String>
<system:String x:Key="ReReplaceTF">
 Regular replacement
 </system:String>
<system:String x:Key="DbGE_desc">
 To read the contents from the database, you need to create or configure the connection in advance in the data view.
 </system:String>
<system:String x:Key="key_768">
 When this value is set, all attribute Path should be a child path of the root node, not a full XPath path.
 </system:String>
<system:String x:Key="key_124">
 Post parameters
 </system:String>
<system:String x:Key="key_465">
 One line per line
 </system:String>
<system:String x:Key="key_252">
 Export data task
 </system:String>
<system:String x:Key="key_347" xml:space="preserve">
 If a database does not exist, it will automatically create tables based on columns of the first data.
Column names that do not conform to database requirements will be replaced.  
 </system:String>
<system:String x:Key="key_687">
 Sampling amount
 </system:String>
<system:String x:Key="key_345">
 Select database
 </system:String>
<system:String x:Key="key_228">
 Failed to open file
 </system:String>
<system:String x:Key="key_740">
 Fast link
 </system:String>
<system:String x:Key="RangeGE_desc" xml:space="preserve">
 Generating numerical values in a range
For example, the value generated from 0 to 100 and the step 1 is 1,2,3..100.  
 </system:String>
<system:String x:Key="key_242">
 Conversion to non virtual data set
 </system:String>
<system:String x:Key="key_317">
 Save current project
 </system:String>
<system:String x:Key="key_448">
 Screening model
 </system:String>
<system:String x:Key="key_248">
 Database connection service failure
 </system:String>
<system:String x:Key="key_482">
 Post data
 </system:String>
<system:String x:Key="key_594">
 Latitudinal column
 </system:String>
<system:String x:Key="key_98">
 Failure to execute
 </system:String>
<system:String x:Key="AddNewTF_desc" xml:space="preserve">
 For data table {{AddNewTF}}, the value is fixed value.
Example scenario: Add the root address of the page to crawl for each row of data, and then get the full URL by `{{MergeTF}'.  
 </system:String>
<system:String x:Key="key_244">
 Save to database
 </system:String>
<system:String x:Key="TableGE_desc">
 Generated from data tables in data management, commonly used
 </system:String>
<system:String x:Key="BfsGE">
 Request queue
 </system:String>
<system:String x:Key="key_264">
 Hawk version
 </system:String>
<system:String x:Key="IDataViewer">
 Display data
 </system:String>
<system:String x:Key="SaveFileEX_desc" xml:space="preserve">
 Save files corresponding to links, such as pictures, videos, etc.
Dragged columns are hyperlink addresses for files.
Save position: you can use the square brackets expression to deliver the contents of a column.
Be careful:
Some websites must log in before they can download the content. If you've configured the `{{smartcrawler_name}} to access the site properly, you can fill in the name of the collector in the `Common Collector Name', which is captured by the module using the collector's header.  
 </system:String>
<system:String x:Key="key_431">
 Recursion to the following
 </system:String>
<system:String x:Key="key_481">
 Error delay time
 </system:String>
<system:String x:Key="key_367" xml:space="preserve">
 Reverse the result and return it.
For example, if the filter is judged to be ` correct ', the error is returned.  
 </system:String>
<system:String x:Key="AutoIndexTF">
 Self increasing key generation
 </system:String>
<system:String x:Key="key_76">
 Repair failed. Did you install MongoDB database?
 </system:String>
<system:String x:Key="key_442">
 file format
 </system:String>
<system:String x:Key="RandomGE">
 Generating random numbers
 </system:String>
<system:String x:Key="RepeatTF">
 Duplicate current value
 </system:String>
<system:String x:Key="key_712">
 {0} already has a task executed. To avoid side effects, cancel the task in the task manager and refresh it
 </system:String>
<system:String x:Key="keep_old_datas">
 Do you want to retain the original project dataset and tasks when loading the new project?
 </system:String>
<system:String x:Key="key_274">
 Author Sha Mojun's blog
 </system:String>
<system:String x:Key="key_268">
 Here is a case of using Hawk and a complete tutorial.
 </system:String>
<system:String x:Key="key_581">
 Such as hospitals, food, etc.
 </system:String>
<system:String x:Key="key_418">
 Setting the calling properties of subtasks
 </system:String>
<system:String x:Key="key_518">
 When the duty is less than 0, multiple values can be matched at the same time.
 </system:String>
<system:String x:Key="key_71">
 Open help link
 </system:String>
<system:String x:Key="key_104">
 sort
 </system:String>
<system:String x:Key="FileConnectorCSV_desc" xml:space="preserve">
 Output text CSV comma separated file
The default columns are divided by \t, one data per row.
The speed of reading and writing CSV files is the fastest in all files. It is worth noting that the data line itself should not contain splitters, otherwise it will cause parsing failure.  
 </system:String>
<system:String x:Key="key_337">
 Grouping
 </system:String>
<system:String x:Key="key_125">
 redirect automatically
 </system:String>
<system:String x:Key="key_573">
 Clear intermediate space
 </system:String>
<system:String x:Key="cliptoboard">
 Content has been copied to the clipboard.
 </system:String>
<system:String x:Key="DataProcessManager_desc">
 Manage and assemble the algorithm modules, but do not provide interface.
 </system:String>
<system:String x:Key="key_371">
 Obtain
 </system:String>
<system:String x:Key="key_656">
 An exception occurred internally when querying XPath: {0}
 </system:String>
<system:String x:Key="FolderGE_desc" xml:space="preserve">
 Get all the files under the folder and drag them into the folder name.
You can directly filter the filenames.  
 </system:String>
<system:String x:Key="RenameTF">
 Column name modifier
 </system:String>
<system:String x:Key="key_196">
 XPath expression error:
 </system:String>
<system:String x:Key="key_177">
 Text generation
 </system:String>
<system:String x:Key="FileConnectorJson">
 Json import and export device
 </system:String>
<system:String x:Key="key_166">
 Total selection
 </system:String>
<system:String x:Key="key_652">
 Continue to search
 </system:String>
<system:String x:Key="key_772">
 Sets the previous n row to get the data table, ignoring the following contents
 </system:String>
<system:String x:Key="key_686">
 3. debug
 </system:String>
<system:String x:Key="key_674">
 In super mode, for performance reasons, the built-in browser does not display the content. Check the text on the left
 </system:String>
<system:String x:Key="key_758">
 Sample
 </system:String>
<system:String x:Key="key_344">
 Select database operations, such as insert, delete, update, etc.
 </system:String>
<system:String x:Key="key_628" xml:space="preserve">
 The root node of the list is detected: {0}. Does the root node path be set?
The root node extracts all the common parts of the attribute, which generally improves the efficiency of grabbing and resists the revision of the website.
This operation is recommended by experienced users.  
 </system:String>
<system:String x:Key="key_20">
 Data table size
 </system:String>
<system:String x:Key="key_360">
 Fill in the name of the collector or module.
 </system:String>
<system:String x:Key="key_314">
 Task description
 </system:String>
<system:String x:Key="key_287">
 Task list 2
 </system:String>
<system:String x:Key="key_240">
 To configure
 </system:String>
<system:String x:Key="key_695">
 Debugging and exploration
 </system:String>
<system:String x:Key="key_464">
 text
 </system:String>
<system:String x:Key="key_192">
 After selecting this item, it will extract the news text intelligently, and the XPath path can be empty.
 </system:String>
<system:String x:Key="key_617">
 Italian
 </system:String>
<system:String x:Key="key_181">
 Generator type
 </system:String>
<system:String x:Key="key_558">
 Zi Xiancheng's name
 </system:String>
<system:String x:Key="key_753">
 Evaluation score
 </system:String>
<system:String x:Key="key_688">
 Only the first n row of the data table is obtained.
 </system:String>
<system:String x:Key="key_537">
 In addition to directly filling in numeric values, it can also be imported from other columns by square brackets.
 </system:String>
<system:String x:Key="key_200">
 Module name
 </system:String>
<system:String x:Key="ReadFileTextGE_desc" xml:space="preserve">
 Get all plain text content in the file
Note the difference from Reading File Data, which treats all text (including newline characters) as one data line by line  
 </system:String>
<system:String x:Key="IDataProcess">
 Basic computing tasks
 </system:String>
<system:String x:Key="key_781">
 Step 1: Set the module interval for the main task invocation subtask, such as [2:10] representing the second to ten modules that invoke the subtask, ignoring other modules.
 </system:String>
<system:String x:Key="DateRangeGE">
 Generation interval time
 </system:String>
<system:String x:Key="key_88">
 SQL execution error:
 </system:String>
<system:String x:Key="key_717">
 Input column
 </system:String>
<system:String x:Key="not_find_key" xml:space="preserve">
 The keyword `{0}` is not found in the web page. It may be a dynamic request.
[Yes]: [1} and in the pop-up browser page, flip to the location that contains the keyword and refresh it if necessary
- no, no sniffing.
- cancel.  
 </system:String>
<system:String x:Key="rightclick_new">
 Right click to create new data source
 </system:String>
<system:String x:Key="doubleclick_new">
 Double click the icon to create a new task.
 </system:String>
<system:String x:Key="brower_view">
 Browser view
 </system:String>
<system:String x:Key="remind_10" xml:space="preserve">
 Please fill in the keyword information contained in the page to facilitate Hawk to extract the required content:
[2. attribute extraction] - > {{search_keyword}}  
 </system:String>
<system:String x:Key="step2">
 Step 2: Set the main task property column to the sub-task property name, drop-down menu for reference only, you can directly edit the text box
 </system:String>
<system:String x:Key="task_run" xml:space="preserve">
 {0} already has tasks in execution. Is it necessary to cancel the current tasks due to tuning parameters?
- cancel.  
 </system:String>
<system:String x:Key="success_get" xml:space="preserve">
 The sniffer field has been successfully acquired. True request address:
{0},
{{smartcrawler_name}} has been configured automatically, and the request type is {1}.
{2} has refreshed the content of {{smartcrawler_name}}.  
 </system:String>
<system:String x:Key="fail_remind" xml:space="preserve">
 The module `{1}'that operates on the column name `{0}' has failed to retrieve data five times in a row and may need to modify parameters
[is]: [enter debug mode]
- [no]: [cancel the current task]
- [cancelled]  
 </system:String>
<system:String x:Key="key_191">
 Get the text
 </system:String>
<system:String x:Key="key_320">
 To the current list
 </system:String>
<system:String x:Key="RegexSplitTF">
 Regular segmentation
 </system:String>
<system:String x:Key="key_155">
 No need to get the plug-in interface name, it has been cached and can be modified at any time.
 </system:String>
<system:String x:Key="JsonTF">
 Convert to Json
 </system:String>
<system:String x:Key="key_402" xml:space="preserve">
 Refer to C# DateTime Format related methods. Here are some examples:
- yyyy-MM-dd, etc.
- yyyy-MM  
 </system:String>
<system:String x:Key="key_704">
 Serial task
 </system:String>
<system:String x:Key="key_662">
 `{0}` cannot be recognized as the correct {1} expression. Please check.
 </system:String>
<system:String x:Key="key_332">
 Database connection
 </system:String>
<system:String x:Key="key_154">
 Interface
 </system:String>
<system:String x:Key="key_595">
 The column representing latitude
 </system:String>
<system:String x:Key="key_790">
 All algorithm modules currently loaded
 </system:String>
<system:String x:Key="key_253">
 The file is exported successfully. Do you want to open it?
 </system:String>
<system:String x:Key="key_550">
 Tail string
 </system:String>
<system:String x:Key="key_361">
 Whether or not asynchronous
 </system:String>
<system:String x:Key="key_450">
 Whether or not recursion
 </system:String>
<system:String x:Key="FileConnectorExcel">
 EXCEL import and export device
 </system:String>
<system:String x:Key="key_707">
 Subtask
 </system:String>
<system:String x:Key="XPathTF2_desc" xml:space="preserve">
 The categories in the page can be combined with Cartesian crossover mode, suitable for crawlers can not crawl all pages, but can be crawled by classification.
You need to call {{smartcrawler_name}}, specific reference documents - class enumeration.
//TODO: add more detailed introduction
Drag into HTML text column  
 </system:String>
<system:String x:Key="key_626">
 In list mode, the number of attributes can not be less than 2.
 </system:String>
<system:String x:Key="key_592">
 Inquire about objects, such as ` hospitals', 'shopping malls' and so on.
 </system:String>
<system:String x:Key="Time2StrTF_desc">
 Converting time to specific format strings
 </system:String>
<system:String x:Key="key_217">
 Query string
 </system:String>
<system:String x:Key="key_495">
 Select the tables you want to connect to.
 </system:String>
<system:String x:Key="key_610">
 Dutch
 </system:String>
<system:String x:Key="key_655">
 Whether to enable automatic sniffing
 </system:String>
<system:String x:Key="key_293">
 cancel
 </system:String>
<system:String x:Key="key_340">
 The task has gone wrong.
 </system:String>
<system:String x:Key="key_602">
 Chinese
 </system:String>
<system:String x:Key="IColumnProcess">
 ETL module interface
 </system:String>
<system:String x:Key="key_633">
 Are you sure you want to clear all the attributes?
 </system:String>
<system:String x:Key="EtlTF">
 Subtask conversion
 </system:String>
<system:String x:Key="key_653">
 No other eligible XPath nodes could be found. The searcher has returned to the beginning of the page.
 </system:String>
<system:String x:Key="key_399">
 interval
 </system:String>
<system:String x:Key="key_390">
 You can fill in multiple column names separated by space.
For all attributes with the same value in the module, column by column is used.
 </system:String>
<system:String x:Key="key_8">
 Total amount of data
 </system:String>
<system:String x:Key="DbEX">
 Write to database
 </system:String>
<system:String x:Key="XPathTF">
 XPath converter
 </system:String>
<system:String x:Key="key_295">
 Create or copy {{smartcrawler_name}}
 </system:String>
<system:String x:Key="key_381">
 Minimum matching number
 </system:String>
<system:String x:Key="key_318">
 Save as current project
 </system:String>
<system:String x:Key="key_313">
 A task with the same name will override the task.
 </system:String>
<system:String x:Key="XFrmWorkPropertyGrid_desc">
 Attribute configuration options
 </system:String>
<system:String x:Key="key_254">
 Failed to open file:
 </system:String>
<system:String x:Key="key_70">
 Installation instructions
 </system:String>
<system:String x:Key="key_123" xml:space="preserve">
 When scrambling occurs on a page, it's usually a coding problem. Switch UTF-8 or GBK between `{{smartcrawler_name}'- > `{request_config}}'-> and `{request_config}''. Only a few cases need to use other codes.  
 </system:String>
<system:String x:Key="key_385">
 Delay output
 </system:String>
<system:String x:Key="CrawlerTF">
 Conversion from crawler
 </system:String>
<system:String x:Key="key_439">
 Please select the file you want to read.
 </system:String>
<system:String x:Key="key_208">
 The module {1}, which acts on {0}, is in error when executing, and the error message is {2}.
 </system:String>
<system:String x:Key="key_685">
 Delete downstream node
 </system:String>
<system:String x:Key="key_46">
 Quantity has been imported:
 </system:String>
<system:String x:Key="key_437">
 Select the file
 </system:String>
<system:String x:Key="key_346" xml:space="preserve">
 Select the database service you want to connect to. If this item does not have a drop-down menu, create a new `data source'on the System Welcome page and right-click to create a new database connector  
 </system:String>
<system:String x:Key="key_353">
 Delay value
 </system:String>
<system:String x:Key="key_250">
 data set
 </system:String>
<system:String x:Key="key_336">
 current location
 </system:String>
<system:String x:Key="RegexFT_desc" xml:space="preserve">
 Writing regular expressions to filter text
You need to list names, enter regular expressions, and match the minimum number of contents, so you can filter content.
For regular expressions, you can refer to [here] (https://www.jb51.net/tools/zhengze.html).  
 </system:String>
<system:String x:Key="key_709" xml:space="preserve">
 When {{parallel_mode}} works, the maximum number of threads carried by the thread pool
When a thread is running, new threads will be added.  
 </system:String>
<system:String x:Key="EtlEX_desc" xml:space="preserve">
 Calling other tasks as executor is usually at the end of the task.
Sub-task is a high-level but very important function of Hawk. It can realize such functions as multi-level jumping, gathering details page and so on. It is very powerful.
The so-called sub task is to construct a task first and then to be invoked by other tasks. The task being called is the sub task. We should be able to understand that a subtask is a function that defines input and output columns and treats the entire subtask as a module for easy reuse.
An example of using {{{EtlEX}} is to design and construct a task to get all the pictures on a page, create a primary task, and invoke the sub-task just created in the main task.  
 </system:String>
<system:String x:Key="key_183">
 XPath expression error:
 </system:String>
<system:String x:Key="key_231">
 Add to dataset
 </system:String>
<system:String x:Key="key_151">
 Warning information
 </system:String>
<system:String x:Key="DataProcessManager_name">
 Welcome page
 </system:String>
<system:String x:Key="parse_yaml_config">
 Parsing yaml configuration files
 </system:String>
<system:String x:Key="key_31">
 Connection name
 </system:String>
<system:String x:Key="feellucky">
 Good hands
 </system:String>
<system:String x:Key="key_451">
 That is to get subfiles of subfolders.
 </system:String>
<system:String x:Key="key_690">
 The last step
 </system:String>
<system:String x:Key="key_133">
 Click the button:
 </system:String>
<system:String x:Key="key_90">
 Database virtualization
 </system:String>
<system:String x:Key="key_2">
 Abnormal system
 </system:String>
<system:String x:Key="key_751">
 Other information
 </system:String>
<system:String x:Key="key_275">
 Help
 </system:String>
<system:String x:Key="key_4">
 Debug information window
 </system:String>
<system:String x:Key="key_245">
 Insert to database
 </system:String>
<system:String x:Key="key_542">
 Divide every character in the original text directly.
 </system:String>
<system:String x:Key="key_517">
 Matching number
 </system:String>
<system:String x:Key="key_221">
 Web crawler connector
 </system:String>
<system:String x:Key="key_16">
 describe
 </system:String>
<system:String x:Key="key_783">
 End
 </system:String>
<system:String x:Key="key_736">
 New task
 </system:String>
<system:String x:Key="key_130">
 Timeout number
 </system:String>
<system:String x:Key="key_552">
 Does the result of the return contain the first string and the tail string?
 </system:String>
<system:String x:Key="key_706">
 task
 </system:String>
<system:String x:Key="key_283">
 Are all the algorithm modules saved?
 </system:String>
<system:String x:Key="key_485">
 Conversion options
 </system:String>
<system:String x:Key="key_691">
 Next step
 </system:String>
<system:String x:Key="key_11">
 Data set name
 </system:String>
<system:String x:Key="key_299">
 Because the task {0} has been deleted, the related task {1} has been forcibly cancelled.
 </system:String>
<system:String x:Key="key_705">
 Parallel task
 </system:String>
<system:String x:Key="key_218">
 Depending on the database, you can enter JS (MongoDB) and standard SQL here.
 </system:String>
<system:String x:Key="key_526">
 Replace
 </system:String>
<system:String x:Key="key_604">
 Japanese
 </system:String>
<system:String x:Key="DelayTF_desc" xml:space="preserve">
 Insert delay in workflow, can sleep fixed length to avoid reptiles being banned, the unit is Ms.
There are different behaviors for insertion delays at different locations. For example, insertion delays prior to module A will delay a fixed length before each execution of module A.
In addition to drag-in delays, filling in the delay time under `{{serial_mode}''makes it easier to insert the specified delay before each web request.  
 </system:String>
<system:String x:Key="key_169">
 delete
 </system:String>
<system:String x:Key="key_270">
 Bug or problem? Welcome feedback
 </system:String>
<system:String x:Key="key_36">
 Close connection
 </system:String>
<system:String x:Key="key_714">
 Check whether module parameters are modified.
 </system:String>
<system:String x:Key="NumberTF">
 Digits
 </system:String>
<system:String x:Key="key_804">
 If the software helps you, you can donate for the developer.
 </system:String>
<system:String x:Key="key_748">
 root node
 </system:String>
<system:String x:Key="key_665">
 Using the current child node XPath, no child nodes can be found in the document.
 </system:String>
<system:String x:Key="key_327">
 Load {0} task
 </system:String>
<system:String x:Key="HtmlTF_desc" xml:space="preserve">
 Delete HTML tags and escape symbols.
When the page contains HTML, some characters may have been escaped, for example, the space is `nsbp%`. Drag into the corresponding column to restore the escape symbol to the previous expression.
Be careful:
- Hawk's Web accessor is smarter than python, and by default encodes URLs with special symbols and Chinese, so this module doesn't use much.  
 </system:String>
<system:String x:Key="key_603">
 English?
 </system:String>
<system:String x:Key="key_382">
 Only regular expressions match the result of the text to more than or equal to that value. The default is 1.
 </system:String>
<system:String x:Key="defaultCrawler">
 Default collector
 </system:String>
<system:String x:Key="key_643">
 Stop it
 </system:String>
<system:String x:Key="key_21">
 Parameter setting
 </system:String>
<system:String x:Key="key_593">
 Such as parks, stations, etc.
 </system:String>
<system:String x:Key="DisplayPopupMenu">
 Is pop-up information displayed?
 </system:String>
<system:String x:Key="SmartCrawler_desc">
 Collecting and sniffing required data from a single web page
 </system:String>
<system:String x:Key="SmartCrawler_desc_detail" xml:space="preserve">
 {{smartcrawler_name} simulates the design of the browser, fills in the URL, and clicks refresh to get the HTML source code for the corresponding address.
The area on the left shows the HTML source code and browser view, which can be toggle through the tab page.
The right configuration area can search keywords and manage all the properties before it.
- TODO: lower side area
{{smartcrawler_name}} does not work alone, but communicates {{smartcrawler_name} and {{smartetl_name}} bridges. Essentially, {{smartcrawler_name} is a `{{smartcrawler_name} module specially tailored for getting Web pages'.
Introduction of main configuration
{{crawler_xpath_root}}
Mode of work
{{smartcrawler_script_mode}}
Crawling web data
{{CrawlerTF_desc}}
{{crawler_feellucky}}
{{SmartCrawler_manual_mode}}
Dynamic sniffing
What is dynamic page?
{{ajax_intro}}
{{crawler_dynamic_sniff}}
{{crawler_super_mode}}
The principle of super mode
{{crawler_feellucky_how}}
{{crawler_share_cookie}}
Appendix: XPath and CSS writing
{{xpath_desc}}
{{css_desc}}  
 </system:String>
<system:String x:Key="SmartCrawler_manual_mode" xml:space="preserve">
 Manual mode
When {{feellucky}} doesn't work or doesn't meet expectations, you need to manually give a few keywords, let Hawk search for the keywords, and get the location (XPath) in the page.
Fill in {{search_keyword} to get XPath successfully, write the attribute name, and click {{}} to add an attribute. Similarly, add 30535 again and set the property name as "unit price" to add another attribute.
In the `{search_keyword}} `text box, enter the keyword you want to get. Since the keyword may appear many times in the page, you can click `continue searching', switch between multiple results, and the HTML source on the left highlights the search results.
1. Please note that the search keywords in the page location, whether it meets expectations, otherwise there may be problems crawling data. Especially in the {{script_mode_list}} mode.
2. If you need to crawl multiple chunks of data from this page, you can create multiple `{{smartcrawler_name}'to configure them separately.
3. if you find any errors, you can click on * * edit set * to delete, modify and sort attributes.
4. Similarly, you can add all the feature fields you want to grab, or click {{feellucky} directly, and the system will infer other properties based on the current properties.  
 </system:String>
<system:String x:Key="crawler_url_desc" xml:space="preserve">
 Hawk can also support local files like C://a.html that start with HTTP or HTTPS and can be refreshed by clicking Enter  
 </system:String>
<system:String x:Key="ajax_intro" xml:space="preserve">
 Dynamic waterfall flow and Ajax pages, usually returning HTML and json. on demand.
Old-fashioned websites will return the full content of the page when refreshed, but if only part of the update, you can greatly save bandwidth. It's called ajax, and the server passes XML or JSON to the browser, the browser's JS code executes, and renders the data to the page. Therefore, the real URL to get the data is not necessarily displayed in the browser address bar, but hidden in the JS call. Essentially, JavaScript launches a new hidden HTTP request to get data, which can be emulated to get the data you want like a real browser. Reference [Baidu encyclopedia] (https://baike.baidu.com/item/ajax/8425? Fr=aladdin)  
 </system:String>
<system:String x:Key="crawler_dynamic_sniff" xml:space="preserve">
 Hawk automatically gets dynamic requests.
These hidden requests can be obtained through browsers and packet grabbing, but the principles of HTTP requests need to be familiar with, not suitable for beginners.
Hawk simplifies the process and uses automatic sniffing. Hawk acts as a back-end proxy that intercepts and analyzes all system-level Http requests and filters out requests containing keywords (based on fiddler)
When {{search_keyword}} is not found in the current page, Hawk prompts, "Do you want to start dynamic sniffing?" At this point, Hawk will pop up the browser and open the web page. You can drag the page to the location that contains the keyword, and Hawk automatically logs and filters the real requests that contain the keyword, and after retrieving, Hawk automatically rebounds.
If you can't sniff automatically?
Because Hawk has interception function, it will be considered unsafe by the browser. There are two ways:
You can modify browser security settings. TODO: increases browser security settings
{{crawler_set_header}}
Points for attention
1. sometimes copy URL directly to Hawk and use {{feellucky}} to get data. This is because many websites deal differently with the first page and the other pages. The first page will return with the whole frame. But then the page content is returned by Ajax alone.
Sometimes a lot of XPath development has been done for the first page, but eventually found that it can not be used in other pages, mostly the problem mentioned above. Therefore, on experience, it is recommended to turn to other pages for further requests.  
 </system:String>
<system:String x:Key="crawler_feellucky" xml:space="preserve">
 {{feellucky}}
This is the most praised function of Hawk. This function has been greatly enhanced in the new Hawk3.
{{feellucky}} under {{script_mode_list}}
Typically, when you enter the URL and load the page, click {{feellucky}} and Hawk automatically grabs the list data by priority.
[{feellucky} configuration] (https://images2018.cnblogs.com/blog/287060/201805/287060-20180506160854095-924772830.png)
The left and right toggle selects the data set you want, then fine-tuning the result in the following property bar.
By adding an attribute, {{feellucky}} can proceed more accurately. You can select the unique region by adding two attributes.
{{feellucky}} in {{script_mode_one}} mode
Hawk3's new features, when the page contains dozens of attributes, add one by one can become particularly cumbersome, which is particularly common in a commodity property page.
To solve this problem, add the keyword to `{search_keyword}', instead of adding it to the property list, simply click {{feellucky}}.  
 </system:String>
<system:String x:Key="crawler_feellucky_how" xml:space="preserve">
 The function of {{smartcrawler_name}} is to get data from web pages. Typically, the target may be a list (such as a shopping cart list) or a fixed field in a page (such as the price and introduction of a JD item, which has only one item on the page). Therefore, you need to set the read mode. Traditional collector needs to write regular expressions, but the method is too complicated.
If you recognize that HTML is a tree, you can simply find the node that hosts the data and then use XPath to describe it.
[{feellucky} principle] (http://static.zybuluo.com/buptzym/y0l0aorvdas5ydsg8xcz9jx2/image_1b0keius51711j6l911tsg109 fg.png)
Writing XPaths manually is also complex, so software can automatically retrieve XPaths by keywords, providing keywords, and the software will recursively search the tree for leaf nodes that contain the data. Therefore, keywords are best to be unique in the page.
As shown in the figure above, you can find the parent node by providing the keywords "Beijing" and "42" and get the list elements div [0] and div [1]. By comparing div [0] and div [1], we can automatically find the same child node (name, mount) and different nodes (Beijing: Shanghai, 37:42). The same nodes are saved as attribute names, and different nodes are attribute values. However, you can't provide ` Beijing 'and `37`. At this point, the common node is `div[0]`, which is not a list.
Without providing keywords, the software can also compute the most likely list parent node (such as parent) through the characteristics of the HTML document, but guesses can go wrong when the page is particularly complex.  
 </system:String>
<system:String x:Key="crawler_super_mode" xml:space="preserve">
 Supermode converts all of the javascript, json, XML in a Web page into an HTML DOM tree for attribute extraction and {{feellucky}}.
Super model
To enable dynamic Web pages to also use `add properties'and `{{feellucky}', Hawk defaults to `super mode' after sniffing. Supermode converts all of the javascript, json, XML in a Web page into an HTML DOM tree for attribute extraction and {{feellucky}}.
The super mode greatly simplifies the processing of dynamic requests, but it may still have the following problems:
Poor performance, large number of character parsing, JS schema tree parsing.
- General compatibility: Not all text can be converted into tree structures, so manual mode processing is required if necessary.  
 </system:String>
<system:String x:Key="crawler_xpath_root" xml:space="preserve">
 List of root paths
The list root path is the XPath common part of all attributes, which simplifies XPath compilation and improves compatibility. Can only work in {{script_mode_list}} mode.
You can automatically analyze root paths or manually set up through Hawk.
Automatic list path
As an example, after using {{{feellucky}}, the sniffer finds the parent node of the list node and multiple child nodes mounted on the parent node to form a tree structure
- parent node (/html/div[2]/div[3]/div[4])
- child node div[1]
- child node div[2]
...
Each node should extract the following properties:
- attribute 1 (/a[1])
- attribute 2 (/a[2]/@href)
-..
To get all the div children under the parent node, the list root path is `html / div [2] / div [3] / div [4] / div'. Note: the parent node Path has no serial number at the end of the path so that multiple child nodes can be obtained. It can be understood that the list root path is the parent node path without ending numbers.
Sometimes, the XPath of the parent node is unstable. For example, in the second-hand housing page in Beijing and Shanghai, Shanghai adds an advertisement banner to the list, so that the real parent node changes, such as shifting `div [1] backwards to div `2'. To cope with this change, the usual way is to manually modify [list root path].
Manually set the root path to continue the example child, with the parent's ID `house_list', which is globally unique in the Web page, and you can use another parent's notation `/*[@id='house_list']/li'(which you can refer to in other XPath tutorials), while the child's expression remains unchanged. This will make the program more robust.  
 </system:String>
<system:String x:Key="xpath_desc" xml:space="preserve">
 XPath
For XPath syntax, you can refer to http://www.w3school.com.cn/xpath/xpath_syntax.asp.
XPath can be very flexible, for example:
- Bookstore selects all the child nodes of the bookstore element.
- /bookstore selects the root element bookstore. Note: If the path starts with a forward slash, the path always represents the absolute path to an element!
- bookstore/book selects all the book elements belonging to the child elements of bookstore.
- //book selects all book child elements, regardless of their location in the document.
- bookstore // book selects all the book elements that belong to the descendants of the bookstore element, regardless of where they are located under the bookstore.
- //@lang selects all attributes named Lang.
- //@src can match all SRC tags.
- //title[@lang] selects all the title elements with the attribute named Lang.
Multiple expressions can also be mixed by `|', and Hawk supports a complete XPath syntax, so the `XPath'converter for `{{smartcrawler_name}' and {{smartetl_name}} can be extremely flexible to implement requirements.  
 </system:String>
<system:String x:Key="crawler_set_header" xml:space="preserve">
 //TODO  
 </system:String>
<system:String x:Key="css_desc" xml:space="preserve">
 CSSSelector
In most cases, using XPath can solve the problem, but CSSSelector is more concise and more robust. For its introduction, [reference course] (http://www.w3school.com.cn/cssref/css_selectors.asp)
Of course, most situations do not need to be complicated.
- `.name` gets all ID name elements.
- `#name` gets all class name elements.
- `p` gets all P elements.
`ul > li` to get all the parent nodes is the Li element of UL.  
 </system:String>
<system:String x:Key="crawler_share_cookie" xml:space="preserve">
 The name of the collector that sets the shared request parameters.
In order to grab different data from a website, we need multiple {{smartcrawler_name}}. However, to access the site requires login and cookies, it is difficult not every collector to set the corresponding request parameters?
In the property dialog box of the collector, you can set the name of `shared source', which is {{smartcrawler_name}} to be shared. For example, if set to `Chain Collector', the request parameters of this collector will be dynamically obtained from Chain Collector at execution time. This greatly simplifies the configuration process.  
 </system:String>
<system:String x:Key="key_519">
 If the number is less than 0 and multiple new columns are matched, multiple column names can be separated by spaces, and if the column does not need to be added, they can be represented by, such as'_matching 1_'.
 </system:String>
<system:String x:Key="key_605">
 Spanish
 </system:String>
<system:String x:Key="key_176">
 Proxy list
 </system:String>
<system:String x:Key="SQLiteDatabase_desc" xml:space="preserve">
 SQLite is a simple file database. It is easy to use and can be read by other programs.
Using SQLite is very simple, after the new SQLite connector:
- click load to load the existing database.
- click on 'new' to create a new SQLite DB file. After specifying the path, click Connect.
- SQLite only supports English for the header.  
 </system:String>
<system:String x:Key="key_149">
 Initialized successfully
 </system:String>
<system:String x:Key="key_634">
 2. request parameter
 </system:String>
<system:String x:Key="key_18">
 Name
 </system:String>
<system:String x:Key="FileManager">
 file management
 </system:String>
<system:String x:Key="key_262">
 about
 </system:String>
<system:String x:Key="key_805">
 Version: 3
 </system:String>
<system:String x:Key="key_529">
 Response head
 </system:String>
<system:String x:Key="ReadFileTextGE">
 Read file text
 </system:String>
<system:String x:Key="key_53">
 Column Division
 </system:String>
<system:String x:Key="key_466">
 sort order
 </system:String>
<system:String x:Key="key_241">
 Conversion table type
 </system:String>
<system:String x:Key="BaiduLocation_desc" xml:space="preserve">
 To get the latitude and longitude coordinates of the current landmarks by Baidu API, we need to drag them into the columns representing the geographical names.
In the version after Hawk 3, you need to register an account in the Baidu Map API and fill in the token configuration for reference:
> http://lbsyun.baidu.com/index.php? Title=webapi  
 </system:String>
<system:String x:Key="key_290">
 Task list command
 </system:String>
<system:String x:Key="key_296">
 Save task
 </system:String>
<system:String x:Key="key_205">
 Document list
 </system:String>
<system:String x:Key="key_415">
 Attribute mapping
 </system:String>
<system:String x:Key="RepeatFT_desc">
 The column that is dragged is the unique primary key, which is repeated by line. Only the first item repeated is kept.
 </system:String>
<system:String x:Key="key_511">
 Execution script
 </system:String>
<system:String x:Key="key_272">
 Your support is the power of the author to update Hawk.
 </system:String>
<system:String x:Key="key_25">
 User name
 </system:String>
<system:String x:Key="key_475">
 Column names cannot start with numbers, otherwise they will fail to display the column correctly.
 </system:String>
<system:String x:Key="BaiduLocation">
 Search location
 </system:String>
<system:String x:Key="key_1">
 Hawk collapse due to internal anomalies
 </system:String>
<system:String x:Key="HtmlTF">
 HTML character escape
 </system:String>
<system:String x:Key="PythonTF_desc" xml:space="preserve">
 To execute a specific Python code or script, the last line needs to be a value type, which is the return value of the column.
For example, there are two columns of a and B, to be added by string.
`a+b`
If you want to add values by numeric type, you need to convert them in advance.
`float (a) +float (b) '
Functions can also be defined in advance.
` ` ` ` ` ` ` ` ` '.
Def add (x, y):
Return float (x) +float (y)
Add (a, b)
` ` ` ` ` ` ` ` ` '.
Attention:
1. you can define functions in the text box, but it is not recommended to be too complicated.
2. It's hard to introduce third-party libraries, which are limited by the ironpython (a C# and Python interactive module) functionality that C# uses. Hawk3 introduces the ability to call third-party libraries, which allows you to import libraries in scripts by writing library paths, but the functionality is not well supported.
3. Regardless of the operation, the last line of the script needs to be an evaluable element passed to the corresponding column, such as
- `return a`, this is wrong.
- `a+b` is correct, and can be evaluated.
- `lambda x:x+1`, are you sure you want to return a function or lambda? That's definitely not true.
4. Hawk does not predefine the specific type of each column, so you need to type it in Python code and decide if it is empty.  
 </system:String>
<system:String x:Key="key_325">
 The script has been successfully executed.
 </system:String>
<system:String x:Key="key_94">
 Previously opened file
 </system:String>
<system:String x:Key="key_757">
 Select
 </system:String>
<system:String x:Key="key_73">
 Insert data failed
 </system:String>
<system:String x:Key="SplitPageTF_desc" xml:space="preserve">
 Paging operation is based on the total number of pages and the number of pages per page, and the total number of pages is dragged into the column. Compared with the use of Python converter, operation can be greatly simplified. Be careful:
- Early versions of Hawk, if you want to page, you need to drag into multiple modules to achieve, very tedious.
This module automatically creates step integers after the number of inputs, the number of pages per page and the starting value.
For example, the total number is 270, the number of pages per page is 20, the starting value is 1, the generated column is 1, 2, 3..14  
 </system:String>
<system:String x:Key="key_689">
 Ejection sample
 </system:String>
<system:String x:Key="key_188">
 Working mode
 </system:String>
<system:String x:Key="key_339">
 The task has been forcibly terminated.
 </system:String>
<system:String x:Key="key_615">
 Classical Chinese
 </system:String>
<system:String x:Key="key_578">
 Local city
 </system:String>
<system:String x:Key="key_251">
 The data source already exists, does not cover, and does not save.
 </system:String>
<system:String x:Key="key_708">
 Are you sure you want to delete {0}?
 </system:String>
<system:String x:Key="DictTF">
 Matrix transposed
 </system:String>
<system:String x:Key="key_419">
 The sub task scope expression is wrong. Please check:
 </system:String>
<system:String x:Key="key_213">
 Execute the query
 </system:String>
<system:String x:Key="key_6">
 Default source
 </system:String>
<system:String x:Key="key_636">
 Setting up Cookie and other access options
 </system:String>
<system:String x:Key="FileManager_desc" xml:space="preserve">
 Providing data services interacting with local files
This connector models the data table into a database and provides the same operation as the database. The following types of files are supported:  
 </system:String>
<system:String x:Key="key_794">
 Loaded task
 </system:String>
<system:String x:Key="create_collection_error">
 Failed to create data table. Please check related parameters.
 </system:String>
<system:String x:Key="key_701">
 All work modules currently in the workflow
 </system:String>
<system:String x:Key="key_724">
 Visit
 </system:String>
<system:String x:Key="TransTF_desc">
 Translating from the current language into the target language (calling Baidu API)
 </system:String>
<system:String x:Key="XPathTF_desc" xml:space="preserve">
 Select the child node document in HTML by XPath or CSS.
When the input cell content is an HTML document and you want to extract some of its data, use {{smartcrawler_name} and `chicken knife', you can consider using it.
{{xpath_desc}}
{{css_desc}}  
 </system:String>
<system:String x:Key="key_32">
 Automatic connection
 </system:String>
<system:String x:Key="key_13">
 The type of data
 </system:String>
<system:String x:Key="key_410">
 Graphical configuration
 </system:String>
<system:String x:Key="key_632">
 Emptying property
 </system:String>
<system:String x:Key="XFrmWorkPropertyGrid">
 Property Configurator
 </system:String>
<system:String x:Key="key_789">
 Subtask attribute
 </system:String>
<system:String x:Key="key_472">
 Start index
 </system:String>
<system:String x:Key="key_329">
 Save path
 </system:String>
<system:String x:Key="key_300">
 Open welcome page
 </system:String>
<system:String x:Key="key_380">
 Expression
 </system:String>
<system:String x:Key="key_608">
 Cantonese
 </system:String>
<system:String x:Key="key_607">
 Russian
 </system:String>
<system:String x:Key="key_493">
 String matching, such as like, contains, etc., is in line with SQL standard syntax.
 </system:String>
<system:String x:Key="key_398">
 Fill in the form of yyyy-MM-dd HH:mm:ss:ffff format.
 </system:String>
<system:String x:Key="key_222">
 Data import
 </system:String>
<system:String x:Key="key_561">
 The number of threads that each child will acquire is used to display progress bars, but not to fill in.
 </system:String>
<system:String x:Key="key_586">
 Target location
 </system:String>
<system:String x:Key="key_40">
 This function is not supported.
 </system:String>
<system:String x:Key="key_209">
 The {1} module in the {0} column has an exception at initialization: {2}, please check the task parameters.
 </system:String>
<system:String x:Key="EtlGE_desc">
 Calling other tasks as generators is similar to generating interval numbers.
 </system:String>
<system:String x:Key="key_343">
 Operation type
 </system:String>
<system:String x:Key="TransTF">
 Translation of language
 </system:String>
<system:String x:Key="key_172">
 Confirmation result
 </system:String>
<system:String x:Key="key_699">
 2. cleaning process
 </system:String>
<system:String x:Key="key_801">
 If you have any questions and feedback, please contact me:
 </system:String>
<system:String x:Key="key_618">
 Greek language
 </system:String>
<system:String x:Key="key_630">
 Copy to clipboard
 </system:String>
<system:String x:Key="key_759">
 Please type URL:.
 </system:String>
<system:String x:Key="key_119">
 port
 </system:String>
<system:String x:Key="key_713">
 Have been cancelled
 </system:String>
<system:String x:Key="key_349">
 Failed to create a table named {0}.
 </system:String>
<system:String x:Key="key_642">
 start
 </system:String>
<system:String x:Key="key_237">
 Save as
 </system:String>
<system:String x:Key="key_715">
 position
 </system:String>
<system:String x:Key="key_60">
 Encoding method
 </system:String>
<system:String x:Key="key_246">
 Database management
 </system:String>
<system:String x:Key="key_741">
 Data processing revolution
 </system:String>
<system:String x:Key="key_775">
 Quick search:
 </system:String>
<system:String x:Key="key_570">
 Parameter settings may be incorrect.
 </system:String>
<system:String x:Key="key_255">
 Are you sure you want to delete memory data?
 </system:String>
<system:String x:Key="key_645">
 Supermodel
 </system:String>
<system:String x:Key="key_147">
 Initialize plug-ins in plug-in dictionaries.
 </system:String>
<system:String x:Key="key_116">
 Header
 </system:String>
<system:String x:Key="key_39">
 File encoding
 </system:String>
<system:String x:Key="key_17">
 Virtual value
 </system:String>
<system:String x:Key="key_298">
 remove
 </system:String>
<system:String x:Key="RandomGE_desc">
 Generating random numbers in a range and specified number.
 </system:String>
<system:String x:Key="key_110">
 Commonly used
 </system:String>
<system:String x:Key="FileConnectorJson_desc">
 Output text type JSON file
 </system:String>
<system:String x:Key="key_14">
 weight
 </system:String>
<system:String x:Key="key_38">
 Suffix name
 </system:String>
<system:String x:Key="key_198">
 The number of nodes obtained is 0.
 </system:String>
<system:String x:Key="request_config">
 Request configuration
 </system:String>
<system:String x:Key="ResponseTF">
 Get request response
 </system:String>
<system:String x:Key="key_214">
 Query abnormal
 </system:String>
<system:String x:Key="key_449">
 File compatibility filter criteria that conform to windows
 </system:String>
<system:String x:Key="key_755">
 Left and right toggle to select the required data, and the left side can modify column names.
 </system:String>
<system:String x:Key="key_263">
 About the author
 </system:String>
<system:String x:Key="key_737">
 Double click the icon to create a new task.
 </system:String>
<system:String x:Key="FreeDocument_desc">
 A free document that stores key value pairs.
 </system:String>
<system:String x:Key="SplitTF">
 String segmentation
 </system:String>
<system:String x:Key="key_330">
 Edition
 </system:String>
<system:String x:Key="RangeFT_desc" xml:space="preserve">
 From the numeric column, the document from the minimum to the maximum value is selected.
The maximum and minimum values can be filled, and only the documents whose values are within this scope can be left behind. If the cell's content is not numeric, it will be ignored.  
 </system:String>
<system:String x:Key="key_357">
 Save position
 </system:String>
<system:String x:Key="key_743">
 Welcome to Hawk3
 </system:String>
<system:String x:Key="key_774">
 Debug details
 </system:String>
<system:String x:Key="key_492">
 Matching method
 </system:String>
<system:String x:Key="key_666">
 The current XPath node is not the descendant of the parent node. Please check the corresponding XPath. Do you still want to add it?
 </system:String>
<system:String x:Key="key_45">
 Please fill in the header information of Excel.
 </system:String>
<system:String x:Key="key_457">
 In addition to filling in numbers, you can also use square bracket expressions, such as [a] to indicate that the value obtained from column A is the true value of this parameter
 </system:String>
<system:String x:Key="key_609">
 German
 </system:String>
<system:String x:Key="key_498">
 Which columns do join successfully pour into?
 </system:String>
<system:String x:Key="key_309">
 Save the project as
 </system:String>
<system:String x:Key="key_648">
 Filling in the name of the collector with the correct cookie doesn't work for space-time, and it also gets properties such as proxy IP, avoiding setting {{smartcrawler_name} repeatedly
 </system:String>
<system:String x:Key="key_388">
 Fill in the space-separated column name and vertically merge arrays of all attributes with the same value of the column in which the module resides
 </system:String>
<system:String x:Key="key_541">
 Direct segmentation by character
 </system:String>
<system:String x:Key="key_312">
 New task
 </system:String>
<system:String x:Key="key_407">
 2. operation table name
 </system:String>
<system:String x:Key="GetRoute">
 Get path information
 </system:String>
<system:String x:Key="key_387">
 Merge to collection properties
 </system:String>
<system:String x:Key="property">
 attribute
 </system:String>
<system:String x:Key="key_681">
 Copy module
 </system:String>
<system:String x:Key="cut_tools">
 Shear module
 </system:String>
<system:String x:Key="paste_tools">
 Paste module
 </system:String>
<system:String x:Key="key_265">
 Project Home
 </system:String>
<system:String x:Key="xpath2_desc">
 To drag into the HTML text column, you can combine the categories in the page in Cross mode, suitable for crawlers who can't grab all the pages, but can grab them by category. Need to call {{smartcrawler_name}}, specific reference document -XPathTF2
 </system:String>
<system:String x:Key="key_303">
 Load default project
 </system:String>
<system:String x:Key="key_417">
 Sub task panel
 </system:String>
<system:String x:Key="key_660">
 No optional list pages were checked.
 </system:String>
<system:String x:Key="key_19">
 Vacant
 </system:String>
<system:String x:Key="key_348">
 The database connector can not be empty.
 </system:String>
<system:String x:Key="key_414">
 Set the scope of the module that calls the subtasks, for example, 2:30 indicates that the second to 30th subtasks of the task to be called will be enabled, other modules ignore, 2:-1 indicates enabled from the 2nd to the penultimate, complies with python's slice syntax, and defaults to all calls for null
 </system:String>
<system:String x:Key="key_606">
 Thai
 </system:String>
<system:String x:Key="key_111">
 Batch insert error
 </system:String>
<system:String x:Key="key_675">
 Parsing HTML documents
 </system:String>
<system:String x:Key="key_315">
 The task {0} has been successfully saved.
 </system:String>
<system:String x:Key="key_100">
 The operation
 </system:String>
<system:String x:Key="key_230">
 Editable list
 </system:String>
<system:String x:Key="key_333">
 task list
 </system:String>
<system:String x:Key="key_624">
 Extraction test
 </system:String>
<system:String x:Key="DeleteTF">
 Delete the column
 </system:String>
<system:String x:Key="key_12">
 type
 </system:String>
<system:String x:Key="key_673">
 Usually, the reason is that websites check the validity of requests and suggest filling in keywords for automatic sniffing of web content
 </system:String>
<system:String x:Key="key_215">
 Current table
 </system:String>
<system:String x:Key="key_512">
 Python library path
 </system:String>
<system:String x:Key="AddNewTF">
 Add a new column
 </system:String>
<system:String x:Key="CrawlerTF_desc" xml:space="preserve">
 {{smartcrawler_name}} needs to be used in conjunction with {{{smartcrawler_name}} to get web page data using {{{smartcrawler_name}}, and the dragged columns need to be hyperlinks
{{CrawlerTF_method_get}}
{{CrawlerTF_method_post}}  
 </system:String>
<system:String x:Key="CrawlerTF_method_get" xml:space="preserve">
 General get request
Typically, all configuration is accomplished by dragging the crawler transformation into the corresponding URL column and selecting the name of the crawler to be invoked from the drop-down menu:
[{request_config}] (http://static.zybuluo.com/buptzym/hgwpmxsjz0gun5epqt2087wh/image_1avc2t94d3l51sofkah8m1lrrm.png)
This module is a bridge between {{smartcrawler_name}} and {{smartetl_name}}. Essentially, {{smartcrawler_name} is a `{{smartcrawler_name} module specially tailored for getting Web pages'.
You need to fill in the crawler selection and tell which collector it will call. Be careful:
- Early versions of Hawk defaulted to the first {{{smartcrawler_name} in the `algorithm module', but this proved problematic and was later disabled.  
 </system:String>
<system:String x:Key="CrawlerTF_method_post" xml:space="preserve">
 Implementation of post request
There are two main types of requests in web requests: Post and get. Using POST can support more data transmission. More details, you can refer to the HTTP protocol related documents, the Internet is full of sweat, here is not much to say.
When post requests, Hawk needs to pass two parameters to the server: URL and post. Generally speaking, URL is stable when post requests are executed, and post values are dynamically changed.
First, configure the invocation {{smartcrawler_name} to `post` mode (open {{{smartcrawler_name}), request details, mode - > drop-down menu).
After that, you need to drag from the crawler transformation to the URL column to be invoked. If there is no URL column, you can create the URL column to be accessed by adding new columns.
After that, we want to pass the post data to {{smartcrawler_name}}. You can always generate data columns that want Post by merging multiple columns' splicing or various means. Then you can fill in the `post column''in `convert from crawler', and the `post column' is the name of the column that contains the post data. Be careful:
- Hawk uses square brackets syntax to quote values from other columns as the current parameters.  
 </system:String>
<system:String x:Key="transformer_desc" xml:space="preserve">
 Converter is the most commonly used type, of course, its use is also the most complex.
{{transformer_type}}
{{transformer_inoutput}}  
 </system:String>
<system:String x:Key="filter_desc" xml:space="preserve">
 Filters can filter out non conforming documents in the stream, that is, horizontal filtering.
- you can choose 'reverse', leaving only documents that do not meet the requirements at this time. That is to say, reverse the original result.
How to filter columns? At present, Hawk does not provide this function, and can be implemented by dragging multiple columns to delete the column.
Hawk3 filters also support several different behaviors, namely {{filter_mode}}, namely:
- {{filter_mode_by_item}}
- {{filter_mode_pass_when_success}}
- {{filter_mode_pass_when_fail}}  
 </system:String>
<system:String x:Key="executor_desc" xml:space="preserve">
 The executor is the tool responsible for transferring the result of Hawk to the external environment.
You can write to tables, databases, even perform a specific action, or generate files, and so on.
In debug mode, the executor does not work. This is to avoid side effects. Otherwise, every time the data is refreshed, it will be written to the database, which is obviously unacceptable.
The actuator will take effect only in the running mode.  
 </system:String>
<system:String x:Key="generator_desc" xml:space="preserve">
 As the name implies, the generator is a component that generates a list of documents through certain parameters. Generators are usually located at the beginning of a task and can read data from text, files, and databases. Or generate vertical numbers and time from one interval.
It has many similarities with converters, but they are obviously different.
The converter must have input, and the generator does not need it. The generator usually needs output columns to save the output data.
- The output of the generator can be spliced horizontally / longitudinally / crosswise with the original data, which is much more flexible than the converter
The parameters of the builder support square brackets syntax, but the converter has only partial support.
When the generator generates data, how does it combine with the original data? There are four modes:
- {{merge_append}}
- {{merge_cross}}
- {{merge_mix}}
- {{merge_merge}}
[Four modes of the generator] (https://images2018.cnblogs.com/blog/287060/201805/287060-201805061537169-568274026.png)  
 </system:String>
<system:String x:Key="subtask_desc" xml:space="preserve">
 None  
 </system:String>
<system:String x:Key="transformer_inoutput" xml:space="preserve">
 Input column: to input the column of this module, (Hawk1 era is also called the original column name).
Output column: it refers to the column of module output. In the UDF mode, if the new column name is empty, the new column name is equal to the original column name and is directly modified on the original column.
The necessary explanation of UDAF
When you use a crawler in the {{script_mode_list} pattern, or when you do a single turn, multiple documents are generated, but the original data (such as the URL) is lost. This is because Hawk discarded these columns.
After a lot of practice, if you don't do this, each new data will follow the original old data, if 1 to 20, then the old data will be generated 20 times, which is unnecessary. Sometimes you have to drag in a large number of 'remove the column' to process.
Of course, sometimes the conversion needs to contain part of the original data column, can be converted in the `new column name', fill in the `carp jumping gantry ` column name, split by space.
- In Hawk3, it is also supported to enter `*'in the new column name, when all the original columns are added to the new document.
- Note that the new column of UDAF may overwrite the data of the original column, so check the column names more to avoid unexpected overwriting  
 </system:String>
<system:String x:Key="transformer_type" xml:space="preserve">
 The converter has three seed types:
ColumnUDF: {{script_mode_one}}: it is valid only for one column, such as `{{NumberTF}}`.
- UDF: {{script_mode_one}: For example {{{DeleteTF}}, it only involves changes within the document and may affect multiple columns
- UDAF: {{script_mode_list}: Typically in {{script_mode_list} mode {{{Crawler TF}}, each line URL can generate 20 or more documents, and it acts as a generator in cross (cross) mode.
ColumnUDF is a special case of UDF, and UDF is a special case of UDAF.
Most converters are UDF types. However, the same converter may behave in a variety of configurations, such as `{Crawler TF}', if the {{smartcrawler_name} mode is selected as {script_mode_one} (single document) mode, then the converter is UDF mode and {script_mode_list} mode is UDAF mode.  
 </system:String>
<system:String x:Key="core_concept" xml:space="preserve">
 The key concept of Hawk
- Task: The system provides only two tasks: {smartcrawler_name} and {{smartetl_name} that can be created, saved, and loaded.
- Module: A task can contain multiple modules, such as `Generate from text', `{Crawler TF}', and so on in {{smartetl_name}}.
Engineering: multiple tasks form a project, which can be saved and loaded in XML mode.
- Tables: Tables stored in memory, fast, but limited in capacity, used for storing small data
- database (connector):Hawk connects different databases through connectors, such as MongoDB, SQLite, and so on.
- Column: {{smartetl_name} column, refer to the column in Excel, in {{{smartcrawler_name}, an attribute corresponds to a column
- Document: A line in {{{smartetl_name}} that is a dictionary of key-value pairs, such as `key1: value, key2: value2'.
Cell: a cell in the document, just like Excel.
- Stream: A sequence of multiple documents, possibly finite or infinite, was used extensively in earlier versions of Hawk.
- Thread: A task starts with one (serial) or more (parallel) threads that can be paused and deleted in {{key_798}}.  
 </system:String>
<system:String x:Key="connector_helper" xml:space="preserve">
 Database connector
It can add connectors from different data sources and load and manage data.
- click the right button in the blank to add a new connector.
- on the data table of the connector, double-click to view the sample.
Right click to load data into memory.
[Connector configuration] (http://static.zybuluo.com/buptzym/cympkkptyzq6r370ositd2dh/QQ%E6%88%AA%E5%9B%BE20160501105629.jpg)
The connectors currently supported include:
- MongoDB
- SQLite
- file read and write
- MySql (incomplete test)
MongoDB
{{MongoDBConnector_desc}}
SQLite
{{SQLiteDatabase_desc}}
Document reading and writing
CSV document
{{FileConnectorCSV_desc}}
XML document
{{FileConnectorXML_desc}}
EXCEL document
{{FileConnectorExcel_desc}}  
 </system:String>
<system:String x:Key="datacollection_helper" xml:space="preserve">
 When you load data sets, you can view and edit them in this view:
1. click the right button to delete the data set, modify the name and so on.
2. drag the data set to the icon below, if you drag it to the recycle bin, you can delete the module.
3. double click the dataset to view the contents of the module. Drag and drop data sets onto the {{smartetl_name}} icon to make {{smartetl_name}} directly to this dataset.
[Dataset View] (http://static.zybuluo.com/buptzym/kfz2k0xfbjtun5ah6hlxoph/QQ%E6%88%AA%E5%9B%BE20160501105734.jpg)  
 </system:String>
<system:String x:Key="key_185">
 The root node path must be set when the extraction mode is CssSelecor.
 </system:String>
<system:String x:Key="key_117">
 2. agent settings
 </system:String>
<system:String x:Key="key_678">
 1. implementation
 </system:String>
<system:String x:Key="key_696">
 Debug analysis panel
 </system:String>
<system:String x:Key="NearbySearch_desc">
 To get all the objects in the radius of a latitude and longitude, we need to drag in a column representing longitude.
 </system:String>
<system:String x:Key="GetRoute_desc">
 The time needed to move from the current place name to the corresponding coordinates.
 </system:String>
<system:String x:Key="DebugManagerUI">
 DebugManager
 </system:String>
<system:String x:Key="NumRangeFT_desc" xml:space="preserve">
 Select a certain number of rows, such as skip the first 100 lines, and select 50.
Without column names, it can skip and select parts of the document, similar to the skip and limit keywords in SQL statements.
Be careful:
- Skips take a long time when the number of skips is too large and the target data is delayed, and the task progress bar doesn't respond, so avoid this design as much as possible  
 </system:String>
<system:String x:Key="key_326">
 This task cannot be repeated.
 </system:String>
<system:String x:Key="key_179">
 Proxy strategy
 </system:String>
<system:String x:Key="key_27">
 Database type
 </system:String>
<system:String x:Key="key_375">
 minimum value
 </system:String>
<system:String x:Key="key_746">
 Choice
 </system:String>
<system:String x:Key="key_647">
 Shared source
 </system:String>
<system:String x:Key="key_394">
 BFS start position
 </system:String>
<system:String x:Key="RegexTF">
 Regular converter
 </system:String>
<system:String x:Key="key_335">
 Ergodic state
 </system:String>
<system:String x:Key="key_29">
 The name of the database table can not be empty.
 </system:String>
<system:String x:Key="key_338">
 Task [{0}] has been successfully completed.
 </system:String>
<system:String x:Key="key_234">
 View properties
 </system:String>
<system:String x:Key="search_keyword">
 Search character
 </system:String>
<system:String x:Key="repeat_mode">
 Duplication pattern
 </system:String>
<system:String x:Key="jump_last">
 Jump to the end
 </system:String>
<system:String x:Key="key_175">
 Trying to convert to JSON error:
 </system:String>
<system:String x:Key="search">
 search
 </system:String>
<system:String x:Key="percent">
 Percentage
 </system:String>
<system:String x:Key="key_671">
 Try auto redirection
 </system:String>
<system:String x:Key="key_389">
 Summation attribute
 </system:String>
<system:String x:Key="key_294">
 Create or copy {{smartetl_name}}
 </system:String>
<system:String x:Key="key_54">
 Contains header information
 </system:String>
<system:String x:Key="key_323">
 No corresponding script file {1} was found when loading {0} project.
 </system:String>
<system:String x:Key="key_720">
 Outflow data
 </system:String>
<system:String x:Key="PythonTF">
 Python converter
 </system:String>
<system:String x:Key="JsonTF_desc" xml:space="preserve">
 Convert from string to JSON (array or dictionary type)
When the input string is Json, you can convert the text to Json through the Json converter. Its working mode is the same as {{PythonTF}}.
The transformation result of the JSON converter is actually a dynamic type of Python object. For example, the following json:
` ` ` ` ` ` ` ` ` '.
{
'key': [[
'value':
{
'key1': value
'key2': value
}
}
` ` ` ` ` ` ` ` ` '.
Drag the JSON converter into this column, and if the mode of operation is `{script_mode_none}', you can drag the `Python converter', fill in the `data [key]'script, and select the mode of work to convert to a list in the conversion result column, and the arrays in the key are automatically extracted.
Matters needing attention:
1. the combination of Python and JSON converter can solve the problem of a large class of Ajax web pages. For more details, you can refer to it.
2. The JSON format of web pages is not standard. At this point, the string needs to be pre-processed by other tools before it can be converted to json.
3. If JSON is very complex, it is not recommended to do {smartetl_name} directly with Hawk. The correct way is to save JSON as text, and then use other tools or hand-written code after processing.  
 </system:String>
<system:String x:Key="mongo_connect_error">
 Database connection failed, check database configuration, or manually set the installation path of the MongoDB database for automatic repair
 </system:String>
<system:String x:Key="key_650">
 Inquiring XPath
 </system:String>
<system:String x:Key="add_column_sure">
 A property with the same name already exists. Do you still want to add it?
 </system:String>
<system:String x:Key="ToListTF">
 Start parallel
 </system:String>
<system:String x:Key="cancel_task">
 Cancel the task
 </system:String>
<system:String x:Key="error_message">
 error message
 </system:String>
<system:String x:Key="db_name">
 Database name
 </system:String>
<system:String x:Key="key_400">
 Fill in the form of 1'h'3'm'5's'format.
 </system:String>
<system:String x:Key="gene_mode">
 Generation mode
 </system:String>
<system:String x:Key="key_81">
 SQLLite connector exception
 </system:String>
<system:String x:Key="cover_task_succ">
 The task has been successfully covered.
 </system:String>
<system:String x:Key="key_324">
 Compile error: {0}, located in {1} row, from {2} to {3}
 </system:String>
<system:String x:Key="DelayTF">
 delayed
 </system:String>
<system:String x:Key="next">
 Next
 </system:String>
<system:String x:Key="not_find_module">
 The {1} named'{0}'was not found. Please check if "{2}" has filled in the error.
 </system:String>
<system:String x:Key="key_613">
 Portuguese
 </system:String>
<system:String x:Key="key_359">
 Reptilian selection
 </system:String>
<system:String x:Key="view">
 See
 </system:String>
<system:String x:Key="TrimTF">
 Clear blanks
 </system:String>
<system:String x:Key="key_232">
 Add virtual data set
 </system:String>
<system:String x:Key="FileConnectorCSV">
 CSV import and export device
 </system:String>
<system:String x:Key="debugview">
 Debug analysis
 </system:String>
<system:String x:Key="key_99">
 Hint information
 </system:String>
<system:String x:Key="key_297">
 Display and configure
 </system:String>
<system:String x:Key="key_462">
 Select the data table you want to connect to.
 </system:String>
<system:String x:Key="ToListTF_desc" xml:space="preserve">
 Task parallelism and parameters can be set.
When the module is executed, the data flow before and after the module is split, the data on the front side is seed, and the task on the back side is mapper.
Subthread names and number of subthreads support direct write values, or use square bracket expressions to get the contents of other columns.
For example, if you are sure that each subtask will get 100 pieces of data, you can fill in `100'in `Number of Subthreads', and then when the task gets 50 elements, the progress bar is exactly 50%. If you have a column named Cell Names, you can fill in `[Cell Names] in the `Subthread Names'column, and Hawk will use the contents of the Cell Names column as the name of the subtask.
Be careful:
1. the converter does not play any role in debugging and serial execution mode, just as a sign.
2., it can give a parallel forked flag to the execution engine under {{parallel_mode}}.  
 </system:String>
<system:String x:Key="NullFT">
 Empty object filter
 </system:String>
<system:String x:Key="sysconfig">
 System setup
 </system:String>
<system:String x:Key="project_set">
 Engineering setting
 </system:String>
<system:String x:Key="param_group">
 Parameter set
 </system:String>
<system:String x:Key="using_param_name">
 Current parameter group name
 </system:String>
<system:String x:Key="table_list">
 List of data tables
 </system:String>
<system:String x:Key="smartcrawler_name">
 Webpage collector
 </system:String>
<system:String x:Key="key_638">
 2. attribute extraction
 </system:String>
<system:String x:Key="key_506">
 For user convenience, the drop-down menu provides URLs that are already configured with {{smartcrawler_name} and can be modified to use
 </system:String>
<system:String x:Key="table">
 Data sheet
 </system:String>
<system:String x:Key="key_771">
 Is it activated
 </system:String>
<system:String x:Key="recent_file">
 Recently opened file
 </system:String>
<system:String x:Key="connector">
 Connector
 </system:String>
<system:String x:Key="gene_value">
 Generated value
 </system:String>
<system:String x:Key="smartcrawler_script_mode" xml:space="preserve">
 {{script_mode_list}}: multiple documents will be exported, usually in the list page of the web page.
{{script_mode_one}}: output a single document, usually used in the details page of the web page.
- {{script_mode_none}}: output the web page source code directly and place it in the Content column.
Be careful:
- When the {script_mode_list} or {{script_mode_one} mode is in the {script_mode_one} mode and the number of attributes is zero, the behavior is also consistent with {{script_mode_none}}  
 </system:String>
<system:String x:Key="etl_script_mode" xml:space="preserve">
 - {{script_mode_list}}: {{script_mode_list_desc}}
- {{script_mode_one}}: {{script_mode_one_desc}}
- {{script_mode_none}}: {{script_mode_none_desc}}  
 </system:String>
<system:String x:Key="connect_db">
 Connect database
 </system:String>
<system:String x:Key="key_131">
 operation
 </system:String>
<system:String x:Key="key_562">
 Group parallel number
 </system:String>
<system:String x:Key="key_577">
 Beijing
 </system:String>
<system:String x:Key="key_243">
 This collection has a large amount of data. Conversion may take up more memory and cause the program to crash. Are you sure to continue?
 </system:String>
<system:String x:Key="clear_tool">
 Empty all tools
 </system:String>
<system:String x:Key="GetIPLocation">
 Get the coordinates of IP
 </system:String>
<system:String x:Key="key_412">
 Enter or select the name of the subtask to be invoked.
 </system:String>
<system:String x:Key="key_773">
 auto refresh
 </system:String>
<system:String x:Key="key_68">
 Self added primary key name
 </system:String>
<system:String x:Key="debug">
 debugging
 </system:String>
<system:String x:Key="target_value">
 Target content
 </system:String>
<system:String x:Key="key_612">
 French
 </system:String>
<system:String x:Key="key_798">
 Working thread
 </system:String>
<system:String x:Key="key_366">
 Seek inverse
 </system:String>
<system:String x:Key="key_670">
 HTML failed to extract data, url:{0}, exception {1}
 </system:String>
<system:String x:Key="Time2StrTF">
 Time to string
 </system:String>
<system:String x:Key="key_163">
 Route
 </system:String>
<system:String x:Key="key_538">
 Transactions per page
 </system:String>
<system:String x:Key="key_247">
 Add new connections
 </system:String>
<system:String x:Key="ReadFileGe">
 Read file data
 </system:String>
<system:String x:Key="key_559">
 Name for each child thread
 </system:String>
<system:String x:Key="AddNew_desc">
 Adds a new column to a dataset with a fixed value.
 </system:String>
<system:String x:Key="MergeTF">
 Merge multi column
 </system:String>
<system:String x:Key="MergeTF_format">
 It is like'http:\\{0}: {1}, {2}...
- the serial number of the input column is 0.
The 1,2 after that represents the zeroth and first values of other items, respectively.
 </system:String>
<system:String x:Key="MergeTF_desc" xml:space="preserve">
 This module can merge multiple columns into one column.
Common such as page merge into the url, you can also merge the file name to save the location of the file, is the most frequently used module.
It operates very flexibly, for example, in the format: `format = 0} + {1} + {2} `, and the other columns `B C', which represents the direct splicing of input columns, B columns, and C columns.
- `{0}`: input column,
- zeroth of `{1}`:`'s other columns, and `{1}` stands for first items.
- Contents in `[a]`:A column
- `{config}`: the value of the key in the global configuration of the project is config.
In conclusion, square brackets represent other columns from the line, and braces can read the contents from the global configuration.
If there is no corresponding content in the global configuration or data, the column is automatically empty.  
 </system:String>
<system:String x:Key="ResponseTF_desc">
 Get Web page data using {{smartcrawler_name}}, get the value of the response field, and add it to the corresponding property
 </system:String>
<system:String x:Key="key_105">
 adviser
 </system:String>
<system:String x:Key="RegexSplitTF_desc">
 Using regular expressions to segment strings
 </system:String>
<system:String x:Key="key_225">
 Delete connection
 </system:String>
<system:String x:Key="DebugManager_desc">
 Output debug information
 </system:String>
<system:String x:Key="FileExistFT">
 Path exists
 </system:String>
<system:String x:Key="key_159">
 Start caching
 </system:String>
<system:String x:Key="key_211">
 1. basic options
 </system:String>
<system:String x:Key="key_784">
 input
 </system:String>
<system:String x:Key="key_288">
 Start the task
 </system:String>
<system:String x:Key="configset">
 Parameter setting
 </system:String>
<system:String x:Key="XPathTF2">
 Class enumeration
 </system:String>
<system:String x:Key="key_47">
 In total
 </system:String>
<system:String x:Key="key_795">
 All data currently loaded can be managed here.
 </system:String>
<system:String x:Key="DictTF_desc">
 The column data is converted to row data, and the column drawn is key.
 </system:String>
<system:String x:Key="DbGE">
 Generation from database
 </system:String>
<system:String x:Key="key_568">
 Enable
 </system:String>
<system:String x:Key="key_224">
 configure connections
 </system:String>
<system:String x:Key="key_259">
 Mandatory refresh connection failed
 </system:String>
<system:String x:Key="key_236">
 No data exists.
 </system:String>
<system:String x:Key="IDataBaseConnector">
 Database connector interface
 </system:String>
<system:String x:Key="FileConnectorXML_desc">
 Output and input XML files
 </system:String>
<system:String x:Key="StrExtractTF_desc" xml:space="preserve">
 Extract the text content from the first string to the tail string in the string.
When the text is `CABD', you need to get B, and B is very long, it is very difficult to write regular expression extraction, you can use this module. At this point, the first string is filled with A and the tail string is filled with D, and Hawk can extract B. If you choose to include 'first and last character', output `ABD`, otherwise, only B. Be careful:
- A and D are the only ones in the text, otherwise the extracted B may not be what you want.
- this tool is especially suitable for extracting specific content on a web page.  
 </system:String>
<system:String x:Key="key_679">
 Delete node
 </system:String>
<system:String x:Key="key_233">
 Delete table
 </system:String>
<system:String x:Key="key_544" xml:space="preserve">
 - if you want to get the zeroth elements after segmentation, fill in 0 and get the countdown first element, then fill in -1.
- multiple matching numbers can be entered, separated by spaces in the middle.
- the output column also needs one correspondence.  
 </system:String>
<system:String x:Key="key_118">
 Proxy configuration
 </system:String>
<system:String x:Key="key_182">
 Current proxy index
 </system:String>
<system:String x:Key="key_174">
 Super mode parsing failed
 </system:String>
<system:String x:Key="key_271">
 donation
 </system:String>
<system:String x:Key="key_546">
 Multiple separators are separated by spaces, line breaks with \\t, tabs using \\t.
 </system:String>
<system:String x:Key="RegexFT">
 Regular filter
 </system:String>
<system:String x:Key="key_692">
 Insert work module, name:
 </system:String>
<system:String x:Key="ICustomView">
 The interface of self-help replacement interface can be realized.
 </system:String>
<system:String x:Key="key_513">
 If you need to refer to the third party Python library, you can specify the path of the library, one line, one line.
 </system:String>
<system:String x:Key="key_239">
 New dataset
 </system:String>
<system:String x:Key="key_669">
 HTML failed to extract data, url:{0}
 </system:String>
<system:String x:Key="check_if_rename" xml:space="preserve">
 The name "{1}" of this {0} has been changed to {2}.
{{smartcrawler_name}}: {3}
{{smartetl_name}}: {4}
Do you want to rename the referenced name at the same time?  
 </system:String>
<system:String x:Key="key_664">
 Check the correctness of child node XPath
 </system:String>
<system:String x:Key="key_747">
 Acquisition strategy
 </system:String>
<system:String x:Key="key_302">
 Add to
 </system:String>
<system:String x:Key="key_657">
 {{feellucky}} panel
 </system:String>
<system:String x:Key="key_22">
 Table name
 </system:String>
<system:String x:Key="key_72">
 Insert failure
 </system:String>
<system:String x:Key="key_307">
 Load project
 </system:String>
<system:String x:Key="key_193">
 Capture the target
 </system:String>
<system:String x:Key="FreeDocument">
 Free document
 </system:String>
<system:String x:Key="FileConnectorExcel_desc">
 Output standard EXCEL file with low efficiency
 </system:String>
<system:String x:Key="SplitTF_desc">
 String by character segmentation
 </system:String>
<system:String x:Key="WriteFileTextTF_desc">
 Text written to a file, because writing to the file at the same time under {{parallel_mode} can cause problems, try to use {{{serial_mode}}}
 </system:String>
<system:String x:Key="key_413">
 Call range
 </system:String>
<system:String x:Key="NumberTF_desc" xml:space="preserve">
 Extract values from the current column
It is a special example of canonical converter. It can extract floating-point or integer and contain positive and negative numbers.  
 </system:String>
<system:String x:Key="key_503">
 Write multiple column names, use spaces in the middle to segment them, and merge the input columns.
 </system:String>
<system:String x:Key="DateRangeGE_desc">
 Generating dates and times within a range
 </system:String>
<system:String x:Key="key_639">
 Automatic sniffing
 </system:String>
<system:String x:Key="key_502">
 Other items
 </system:String>
<system:String x:Key="key_698">
 Debug module properties
 </system:String>
<system:String x:Key="key_565">
 Whether each child thread is inserted into the task queue to display progress
 </system:String>
<system:String x:Key="key_165">
 Sample 1
 </system:String>
<system:String x:Key="key_702">
 Confirm startup execution?
 </system:String>
<system:String x:Key="key_409">
 2. calling options
 </system:String>
<system:String x:Key="key_173">
 Sign out
 </system:String>
<system:String x:Key="key_331">
 The current path of the project file does not exist, generating new projects.
 </system:String>
<system:String x:Key="key_416">
 Source attributes: Target attributes are separated by spaces between multiple maps, such as A: B C: D, indicating that A and B attributes in the main task are passed to subtasks under the names C and D
 </system:String>
<system:String x:Key="key_766">
 New attributes
 </system:String>
<system:String x:Key="key_729">
 Task Market
 </system:String>
<system:String x:Key="key_433">
 Output column
 </system:String>
<system:String x:Key="key_621">
 Property 0
 </system:String>
<system:String x:Key="key_114">
 HTTP error, URL:{0}, type: {1}
 </system:String>
<system:String x:Key="RepeatTF_desc">
 Repetitive generation of current row
 </system:String>
<system:String x:Key="key_722">
 Because the input is empty skip.
 </system:String>
<system:String x:Key="key_587">
 Source city
 </system:String>
<system:String x:Key="MongoDBConnector_desc">
 Providing MongoDB interactive database services
Configuration of set up
After installing MongoDB, right-click in the blank space to insert a `MongoDB connector', fill in the required fields on the server address, username and password, database name, and then click `Connect to the database'.
If you're a small white user and have MongoDB installed in the above way, fill in the database address `127.0.0.1'(for local), the username and password are empty, and fill in any name you want with the database name.
MongoDB installation
The installed ones can skip by themselves.
You can download the installation package that I have packaged from here, and then decompress it, right-click on the bat script to execute in administrator mode, and it will be installed to the D disk by default and start the service, which is very convenient.
> https://files.cnblogs.com/files/buptzym/mongodb_windows.zip
MongoDB itself contains two versions of 32 bits and 64 bits. The former supports only the largest 2GB data set. But 32 bits can be mounted on 64 bit systems, and vice versa. So the installation package provided is 32 bit version. If you want to install 64 bits, you can refer to other tutorials on the web.
After installation, you can check on the `service'of the task manager to see if the `running' MonoDB service has been included
 </system:String>
<system:String x:Key="key_311">
 Are you sure of saving tasks?
 </system:String>
<system:String x:Key="key_651">
 Attribute {0}
 </system:String>
<system:String x:Key="key_693">
 Back to the beginning
 </system:String>
<system:String x:Key="key_319">
 Has been successfully added
 </system:String>
<system:String x:Key="key_549">
 First string
 </system:String>
<system:String x:Key="key_257">
 Confirm the data table
 </system:String>
<system:String x:Key="key_249">
 The data connection service is successful!
 </system:String>
<system:String x:Key="key_121">
 timeout
 </system:String>
<system:String x:Key="key_267">
 Using documents
 </system:String>
<system:String x:Key="key_127">
 Prohibition
 </system:String>
<system:String x:Key="key_lang">
 language
 </system:String>
<system:String x:Key="NlpTF_desc">
 Natural Language Processing's functions are acquired through language cloud, including word segmentation, part of speech tagging, topic extraction, etc.
 </system:String>
<system:String x:Key="key_760">
 Source view
 </system:String>
<system:String x:Key="key_787">
 Step 2: Set the main task property column to the sub-task property name, drop-down menu for reference only, you can directly edit the text box
 </system:String>
<system:String x:Key="key_533">
 Reverse order
 </system:String>
<system:String x:Key="RenameTF_desc" xml:space="preserve">
 Modification of column names, commonly used
Drag-in column is the column to be modified. After filling in the `output column', the original column is deleted and the contents are transferred to the new column
In addition to the manual drag-in module, you can also directly modify the column name in the text box on the {{smartetl_name} column, and submit it by withdrawal, to achieve the same effect.  
 </system:String>
<system:String x:Key="key_684">
 Debug to this step
 </system:String>
<system:String x:Key="key_611">
 Korean
 </system:String>
<system:String x:Key="key_199">
 1. basic information
 </system:String>
<system:String x:Key="key_454">
 Number
 </system:String>
<system:String x:Key="key_637">
 Extract label
 </system:String>
<system:String x:Key="key_145">
 There is an error in the plug-in configuration file and has been rebuilt.
 </system:String>
<system:String x:Key="key_788">
 Main task attribute
 </system:String>
<system:String x:Key="key_84">
 Newly build
 </system:String>
<system:String x:Key="key_763">
 Attribute extraction
 </system:String>
<system:String x:Key="key_426">
 After the check, the task will be added to the task manager.
 </system:String>
<system:String x:Key="key_106">
 generate
 </system:String>
<system:String x:Key="key_386">
 Do not check this option to use enumerative iteration, make sure there are no other operations after this module, otherwise check this option
 </system:String>
<system:String x:Key="key_24">
 1. connection management
 </system:String>
<system:String x:Key="MongoDBConnector">
 MongoDB
 </system:String>
<system:String x:Key="key_619">
 Application center account
 </system:String>
<system:String x:Key="WriteFileTextTF">
 Write file text
 </system:String>
<system:String x:Key="key_144">
 The layout file has been successfully saved as
 </system:String>
<system:String x:Key="key_150">
 Uninstalling the plug-in at runtime can cause the program to crash.
 </system:String>
<system:String x:Key="ReReplaceTF_desc">
 Replacing values by regular expressions
 </system:String>
<system:String x:Key="key_286">
 Execute task script
 </system:String>
<system:String x:Key="key_640">
 Save the request
 </system:String>
<system:String x:Key="RepeatFT">
 Delete duplicate items
 </system:String>
<system:String x:Key="key_7">
 Column characteristics
 </system:String>
<system:String x:Key="key_273">
 Blog
 </system:String>
<system:String x:Key="key_141">
 layout
 </system:String>
<system:String x:Key="key_102">
 Execution failed, error message {0}
 </system:String>
<system:String x:Key="key_682">
 Insert copy module above
 </system:String>
<system:String x:Key="key_238">
 New or copy
 </system:String>
<system:String x:Key="key_654">
 The keyword {0} could not be found in this page, possibly a dynamic request, enabling {1} and flipping the browser page to the location containing the keyword
 </system:String>
<system:String x:Key="key_490">
 Query multiple data
 </system:String>
<system:String x:Key="key_122">
 Request coding
 </system:String>
<system:String x:Key="key_644">
 Parameter configuration
 </system:String>
<system:String x:Key="key_280">
 Empty task list
 </system:String>
<system:String x:Key="key_762">
 Task name
 </system:String>
<system:String x:Key="key_491">
 When this item is enabled, it queries multiple qualified items and saves the same column as an array.
 </system:String>
<system:String x:Key="key_543">
 Space segmentation
 </system:String>
<system:String x:Key="key_672">
 Website tips:
 </system:String>
<system:String x:Key="hawk_front_desc" xml:space="preserve">
 Welcome to Hawk.
Advanced Crawler ETL tool written in C#/WPF
* * * * * *
Welcome to use Hawk! HAWK without programming, visible-as-you-go graphical data acquisition and cleaning tools, open source according to the GPL protocol.
Project home page: https://github.com/ferventdesert/Hawk
Project documentation: https://ferventdesert.github.io/Hawk/
Example project document: https://github.com/ferventdesert/Hawk-Projects
1. introduction
The meaning of Hawk is "Eagle", which can kill prey efficiently and accurately. Its idea comes from the Lisp language, and its function mimics the Linux tool awk.
The characteristics are as follows:
Intelligent analysis of web content without programming.
WYSIWYG, visual drag and drop, fast implementation of {{smartetl_name}} operations such as conversion and filtering.
- Import and export from various databases and files.
- tasks can be saved and reused.
Its most suitable area is crawler and {{smartetl_name}}, but its power is far beyond that.
HAWK is written in C#, and its front-end interface is developed using WPF, so it can only run on Windows platforms, but it provides command line entry for automated deployment.
The following is based on the latest version of Hawk3, please use the old version of the students as soon as possible through the following address to upgrade the latest version.
[2.gif-3330.9kB] (http://static.zybuluo.com/buptzym/10kykg6qhqvsabbq8yj32pt0/2.gif)
Taking all Beijing cuisine for example, the software can be configured in 10 minutes, automatically and concurrently capture all the contents within an hour, and can monitor the work of the task. And writing code by hand, even with python, can take more than a day for a skilled programmer:
[1.gif-1001.8kB] (http://static.zybuluo.com/buptzym/qkl0vavjn6cj007qfk2k3gqg/1.gif)  
 </system:String>
<system:String x:Key="MergeRepeatTF_desc">
 Merge operations on duplicate data rows.
 </system:String>
<system:String x:Key="RangeFT">
 Numerical range filter
 </system:String>
<system:String x:Key="key_659">
 Web page structure calculation
 </system:String>
<system:String x:Key="key_281">
 Are all the algorithm modules cleared?
 </system:String>
<system:String x:Key="key_129">
 Parsing error number
 </system:String>
<system:String x:Key="average_time">
 Average time consuming (s)
 </system:String>
<system:String x:Key="key_112">
 Dictionary serialization failure
 </system:String>
<system:String x:Key="key_170">
 The previous
 </system:String>
<system:String x:Key="key_168">
 copy
 </system:String>
<system:String x:Key="key_97">
 Implementation success
 </system:String>
<system:String x:Key="key_92">
 Open new file
 </system:String>
<system:String x:Key="TableEX">
 Write data table
 </system:String>
<system:String x:Key="key_113">
 HTTP error type:
 </system:String>
<system:String x:Key="TableEX_desc">
 Save the data to the software's data manager, and then you can easily do other processing, drag it into any column, commonly used
 </system:String>
<system:String x:Key="key_551">
 Include header and tail string
 </system:String>
<system:String x:Key="key_721">
 Error number
 </system:String>
<system:String x:Key="key_631">
 Configuration properties
 </system:String>
<system:String x:Key="TrimTF_desc" xml:space="preserve">
 Clears the blank before and after the string.
By default, you can remove white space before and after the text, or you can clear the white space in the middle of the text by checking the internal options
Be careful:
- using regular replacement can also achieve similar requirements, but this module will be simpler.  
 </system:String>
<system:String x:Key="key_803">
 Desert Eagle
 </system:String>
<system:String x:Key="key_87">
 For example, d:\\test\\mydb.sqlite
 </system:String>
<system:String x:Key="debug_desc">
 This page shows the number of executions of all modules, the number of incoming and outgoing data, generally the upstream outflow is equal to the downstream inflow, if there is a red box module, prompt that the module configuration may be problematic
 </system:String>
<system:String x:Key="key_658">
 Attribute configuration
 </system:String>
<system:String x:Key="key_566">
 The name of the column to be processed by this module
 </system:String>
<system:String x:Key="key_55">
 attribute
 </system:String>
<system:String x:Key="key_229">
 There is no data available in the table.
 </system:String>
<system:String x:Key="key_316">
 There are no tasks in the current project. Do you want to continue saving them?
 </system:String>
<system:String x:Key="FileConnectorTable">
 Text importer and exporter
 </system:String>
<system:String x:Key="RegexTF_desc" xml:space="preserve">
 Extracting content from regular expressions can match one and more contents.
When the matching number is positive n, it can convert the result of the N match to the new column. If you do not fill in the new column name, the contents will directly cover the original column.
When the negative number n is input, it returns the countdown N content. If no match is found, the space is returned.  
 </system:String>
<system:String x:Key="key_223">
 data management
 </system:String>
<system:String x:Key="key_589">
 Motion scheme
 </system:String>
<system:String x:Key="key_10">
 Virtualized dataset
 </system:String>
<system:String x:Key="key_668">
 Attribute added successfully
 </system:String>
<system:String x:Key="key_266">
 Access to Hawk's open source project address
 </system:String>
<system:String x:Key="key_401">
 Generation time format
 </system:String>
<system:String x:Key="MySQLConnector_desc">
 IDataBaseConnector
 </system:String>
<system:String x:Key="FileExistFT_desc">
 Determine whether a file is already on the specified path.
 </system:String>
<system:String x:Key="key_282">
 Save all tasks
 </system:String>
<system:String x:Key="MySQLConnector">
 MySQL database
 </system:String>
<system:String x:Key="key_683">
 Insert copy module below
 </system:String>
<system:String x:Key="key_308">
 Save the project
 </system:String>
<system:String x:Key="SaveFileEX">
 Save hyperlink files
 </system:String>
<system:String x:Key="key_190">
 Advanced options
 </system:String>
<system:String x:Key="UrlTF">
 URL character escape
 </system:String>
<system:String x:Key="key_574">
 Blanks are replaced by spaces.
 </system:String>
<system:String x:Key="DeleteTF_desc" xml:space="preserve">
 Deleting the contents of the column listed
After deletion, the contents and all tools in the column are no longer visible. To modify, you can select, modify and delete the module list on the left side of the {{smartetl_name}} interface.  
 </system:String>
<system:String x:Key="SQLiteDatabase">
 SQLite database
 </system:String>
<system:String x:Key="key_569">
 The name of the column to which the result will be exported.
 </system:String>
<system:String x:Key="key_95">
 There is no definition.
 </system:String>
<system:String x:Key="key_588">
 Target city
 </system:String>
<system:String x:Key="key_534">
 After selecting this item, choose item n from the back number.
 </system:String>
<system:String x:Key="DataManager_desc">
 View and analyze data
 </system:String>
<system:String x:Key="key_126">
 Total number of requests
 </system:String>
<system:String x:Key="key_661">
 Start sniffing service
 </system:String>
<system:String x:Key="RangeGE">
 Generating interval numbers
 </system:String>
<system:String x:Key="NearbySearch">
 Search the neighborhood
 </system:String>
<system:String x:Key="key_322">
 Load the project file at {0}
 </system:String>
<system:String x:Key="key_545">
 Split character
 </system:String>
<system:String x:Key="key_555">
 Conversion format
 </system:String>
<system:String x:Key="key_305">
 file
 </system:String>
<system:String x:Key="key_26">
 Password
 </system:String>
<system:String x:Key="key_284">
 Load this task
 </system:String>
<system:String x:Key="key_596">
 Search radius
 </system:String>
<system:String x:Key="key_306">
 New project
 </system:String>
<system:String x:Key="http_header">
 Http request details
 </system:String>
<system:String x:Key="DataManager">
 data management
 </system:String>
<system:String x:Key="key_663">
 Using the current parent node {0} {1}, no parent node can be found in the document.
 </system:String>
<system:String x:Key="key_15">
 Primary key
 </system:String>
<system:String x:Key="IConfigFile">
 Configuration file interface
 </system:String>
<system:String x:Key="key_710">
 Maximum thread count
 </system:String>
<system:String x:Key="key_504">
 format
 </system:String>
<system:String x:Key="key_782">
 Start
 </system:String>
<system:String x:Key="key_480">
 Maximum number of repetitions
 </system:String>
<system:String x:Key="key_434">
 The column is passed from the original task to the sub task, and multiple columns are separated by spaces.
 </system:String>
<system:String x:Key="key_597">
 All results
 </system:String>
<system:String x:Key="key_50">
 File is not a legitimate Json file.
 </system:String>
<system:String x:Key="key_216">
 Current connection
 </system:String>
<system:String x:Key="UrlTF_desc">
 Generate URL encoded strings for hyperlink URL for remote access.
 </system:String>
<system:String x:Key="IXPlugin">
 XFrmWork basic plug-in interface
 </system:String>
<system:String x:Key="AutoIndexTF_desc">
 Automatically generates a self added new column from the start index.
 </system:String>
<system:String x:Key="key_406">
 Select the database services you want to connect to
 </system:String>
<system:String x:Key="key_425">
 Add to task
 </system:String>
<system:String x:Key="key_530">
 The name of the response head to be obtained is divided by spaces, and is not case sensitive.
 </system:String>
<system:String x:Key="key_800">
 Thank you for using HAWK.
 </system:String>
<system:String x:Key="key_458">
 If you want to generate array 1,3,5,7,9, the interval is 2.
 </system:String>
<system:String x:Key="key_5">
 source
 </system:String>
<system:String x:Key="key_780">
 You can drag the icon into the upper blank list of the right data column to add a module to the column.
 </system:String>
<system:String x:Key="key_184">
 The path parsing is incorrect and the empty node is returned.
 </system:String>
<system:String x:Key="key_496">
 Table primary key
 </system:String>
<system:String x:Key="SmartETLTool_desc">
 Filter, transform and merge data, and export them to the database.
 </system:String>
<system:String x:Key="SmartETLTool_desc_detail" xml:space="preserve">
 {{smartetl_name} is a task that consists of dozens of sub-modules that fall into four categories: generation, transformation, filtering, and execution.
[Rich modules] (https://images2018.cnblogs.com/blog/287060/201805/287060-20180506160120254-60486829.png)
{{smartetl_name}} can generate multiple functions by combining multiple different sub-modules, and construct a workflow by dragging and dropping, which can produce a finite or unlimited sequence of documents. For example, below:
[image_1auq4oooc1m8m9tc02sjv1j4o9.png-71.6kB] (http://static.zybuluo.com/buptzym/gzr3u0z80478s31u9v1zdfw5/image_1auq4oo1m8m9tc02sjv1j4o9.png)
Parameter description
Mode of work
{{etl_script_mode}}
Introduction of several modules
Converter
{{transformer_desc}}
Filter
{{filter_desc}}
Actuators
{{executor_desc}}
The generator of the bar
{{generator_desc}}
The order of the dragged modules is very important, and a common problem is that the order is not correct, resulting in the resulting data does not meet expectations. {{smartetl_name}} can be called {{smartcrawler_name} by {{CrawlerTF}} or other {{{smartetl_name} by `subtask', which is a factory that combines various modules and tasks.
Operation mode
{{SmartETLTool_debug}}
{{running_mode_desc}}
{{threadmanager_desc}}
{{SmartETLTool_step}}  
 </system:String>
<system:String x:Key="SmartETLTool_debug" xml:space="preserve">
 Debug mode
During the editing task, it is in * debugging mode * *, it has the following characteristics:
- all actuators are not working to avoid side effects.
- click the refresh button in the middle or modify the configuration, and the displayed data will refresh automatically.
- it can only run on {{serial_mode}}.
WYSIWYG shows only a certain amount of data (modified by sampling volume).
- you can disable or enable some modules to observe the effect.
- Increases the preview speed by adding a cache of web requests and read files (which may cause problems)
- input columns and output columns will be represented in different colors.
During debugging, the {{{CrawlerTF}} module may request web data, which is cached to improve performance. Ensure that the data is only retrieved once, and if you want to force refresh, disable the {{Crawler TF} module, and then enable it, the original cache data is erased.  
 </system:String>
<system:String x:Key="running_mode_desc" xml:space="preserve">
 Hawk supports two modes of execution:
{{serial_mode_desc}}
{{parallel_mode_desc}}  
 </system:String>
<system:String x:Key="serial_mode_desc" xml:space="preserve">
 {{serial_mode}}
Only click on * * * execution mode will switch to execution mode. When executed, it can work at {{serial_mode}}/{{parallel_mode}}
Under {{serial_mode}, all tasks execute sequentially, slowly, but with little pressure on the site, it is not easy to be blocked. In order to further reduce the execution speed, the delay time can be set, at this time, each network request before the delay will be a certain time.
Be careful:
1. It is strongly recommended to use {{serial_mode}} when the executor contains an operation similar to `appending content to a file', because Hawk does not add multithreaded locks, which can lead to conflicts.
2. It is suggested that after the crawler design is completed, the {serial_mode} should be done first, and then the {{parallel_mode} should be set up to grab a large number of crawls.  
 </system:String>
<system:String x:Key="parallel_mode_desc" xml:space="preserve">
 {{parallel_mode}}
The speed of grabbing is greatly accelerated, but it is easy to be blocked. Hawk uses a thread pool mechanism to set the maximum number of worker threads, and fills in new tasks only if the previous worker threads have finished their work. Otherwise, too many threads will quickly occupy all system resources.
Compared to Hawk2, Hawk3 automatically analyzes the locations that can be paralleled, so in most cases, it's OK to run directly. But if you want to customize the behavior of parallelization, you need to read the following.  
 </system:String>
<system:String x:Key="threadmanager_desc" xml:space="preserve">
 Thread management
Whether in debugging or execution mode, the system adds one or more threads to the task management view.
You can check or cancel some or all threads, pause or cancel them. When the web site is restricted to crawl, all threads can be suspended, and then executed again after recovery.
Be careful:
1. When the workflow is incorrect (for example, all data in the column is empty and {{NullFT}} is added to the column, then all data is filtered) no data output may be generated. At this point, the progress bar does not move forward, resulting in the illusion of stuck. At this point, you can force it to be deleted.
2. The process of thread deletion is to cancel it safely first and kill it directly if the thread does not respond.  
 </system:String>
<system:String x:Key="new_task" xml:space="preserve">
 At present, the system only provides two tasks: web page collector and data cleaning, double-click to load a new module.
[QQ Intercept 201 60501 105646.jpg-6.8kB] (http://static.zybuluo.com/buptzym/bowssqpr6hn4hi04dgqa0379/QQ%E6%88%AA%E5%9B%BE20160501105646.jpg)
Previously configured modules can be saved as tasks, double-click or right-click to load an existing task:
[QQ Section 201 60501 105700.jpg-10.5kB] (http://static.zybuluo.com/buptzym/xvnwm 920v2hag2nw6rjh02o7/QQ%E6%88%AA%E5%9B%BE20160501105700.jpp)  
 </system:String>
<system:String x:Key="SmartETLTool_step" xml:space="preserve">
 Single step debugging
Hawk mimics the player and debugger, and in debugging mode there is the concept of `step'. For example, the location is 6/20, which means that there are 20 modules in total and only the first six modules are valid. You can debug by clicking left or right, or directly back to the beginning and the end.
The left side shows all the current modules, in order and their input and output columns. Double-click the above module to configure it, and right-click to delete it. Any module t on the list can only emulate the effect of the preceding t step. In essence, single step debugging only extracts part of the workflow to operate. You can drag into the new module in single step debugging. Modules are automatically inserted in the middle of the workflow.
[Drag up and down, right-click to configure parameters for each step] (https://images 2018.cnblogs.com/blog/287060/201805/287060-201805061558987-1522342347.png)
Sometimes in order to view the properties of a module during a single step of debugging, you can check the `debugging DETAILS'in the lower right corner of the interface, where the properties of the current module can be displayed directly.
[Module Number] (https://images 2018.cnblogs.com/blog/287060/201805/287060-20180506160222760-1330008382.png)
When the module has normal output, the module logo will turn blue, so from top to bottom, the first module is not blue, there may be a problem module.  
 </system:String>
<system:String x:Key="key_564">
 Display independent tasks
 </system:String>
<system:String x:Key="LayoutManager">
 Layout manager
 </system:String>
<system:String x:Key="key_291">
 suspend
 </system:String>
<system:String x:Key="key_33">
 Database deletion failed:
 </system:String>
<system:String x:Key="key_30">
 Connection state
 </system:String>
<system:String x:Key="key_563">
 Combining multiple seeds into one task execution can effectively improve the efficiency of small seed tasks.
 </system:String>
<system:String x:Key="ReadFileGe_desc" xml:space="preserve">
 Data content is read from file. To ensure correct reading, file format and read attribute need to be configured.
In addition to the general database import and export, Hawk also supports importing from files.
- Excel
- CSV (comma separated text file)
- TXT (tab breaks text file)
- Json
- XML  
 </system:String>
<system:String x:Key="key_203">
 You did not fill in the corresponding parameters: {0}
 </system:String>
<system:String x:Key="key_725">
 Double click to load tasks, right button can delete tasks, and other operations.
 </system:String>
<system:String x:Key="TextGE_desc">
 Each row of a data, commonly used
 </system:String>
<system:String x:Key="key_703">
 No executor was found in this task.
 </system:String>
<system:String x:Key="key_86">
 Database path
 </system:String>
<system:String x:Key="key_37">
 Create a new library
 </system:String>
<system:String x:Key="key_567">
 introduce
 </system:String>
<system:String x:Key="key_109">
 Unknown
 </system:String>
<system:String x:Key="key_408">
 3. quantity
 </system:String>
<system:String x:Key="key_328">
 Script path
 </system:String>
<system:String x:Key="key_160">
 Attribute name
 </system:String>
<system:String x:Key="click_refresh">
 Click refresh to refresh results.
 </system:String>
<system:String x:Key="click_commit">
 Click "confirm result" to submit.
 </system:String>
<system:String x:Key="key_142">
 Refresh
 </system:String>
<system:String x:Key="TableGE">
 Generation from data tables
 </system:String>
<system:String x:Key="key_358" xml:space="preserve">
 The path or file name, such as D:\\file.txt, can be referenced by other columns.
If it is directory name, it must be explicitly / ended, and the name of the file will be automatically resolved through URL.  
 </system:String>
<system:String x:Key="key_235">
 Browsing mode
 </system:String>
<system:String x:Key="SupplierTF">
 Retry supplementary data
 </system:String>
<system:String x:Key="SupplierTF_desc">
 Try to rerun the patch data for an existing error log that contains the task name and module name of the error
 </system:String>
<system:String x:Key="xpath_detector">
 XPath retrieval
 </system:String>
<system:String x:Key="xpath_detector_desc">
 XPath can be quickly located through search.
 </system:String>
<system:String x:Key="is_generate_error_collection">
 Generating error sets
 </system:String>
<system:String x:Key="is_generate_error_collection_desc">
 It is used to record errors generated in tasks, and then restores the missing data sets.
 </system:String>
<system:String x:Key="is_display_desc">
 Display detailed description
 </system:String>
<system:String x:Key="serial_mode">
 Serial mode
 </system:String>
<system:String x:Key="parallel_mode">
 Parallel mode
 </system:String>
<system:String x:Key="debug_mode">
 Debug mode
 </system:String>
<system:String x:Key="merge_append">
 Vertical merger
 </system:String>
<system:String x:Key="merge_merge">
 Horizontal merger
 </system:String>
<system:String x:Key="merge_cross">
 Descartes intersection
 </system:String>
<system:String x:Key="merge_mix">
 Interlaced intersection
 </system:String>
<system:String x:Key="merge_outputonly">
 Direct output
 </system:String>
<system:String x:Key="proxy_setting_desc" xml:space="preserve">
 One line and one, refer to the python proxy proxy settings, such as:
Contains user name password: http://username:password@121.193.143.249:80/
Does not contain: http://121.193.143.249:80/  
 </system:String>
<system:String x:Key="proxyge">
 Add agent
 </system:String>
<system:String x:Key="proxyge_desc">
 Agent generator
 </system:String>
<system:String x:Key="checkupgrade">
 Check the update
 </system:String>
<system:String x:Key="no_desc">
 No description
 </system:String>
<system:String x:Key="auto_save_time">
 Automatic save interval
 </system:String>
<system:String x:Key="auto_save_time_desc">
 Units for seconds, automatically save engineering and data. If not more than 0, it will not be saved.
 </system:String>
<system:String x:Key="script_mode_list">
 Multi document
 </system:String>
<system:String x:Key="script_mode_one">
 Single document
 </system:String>
<system:String x:Key="script_mode_list_desc" xml:space="preserve">
 Generating multiple data (documents)  
 </system:String>
<system:String x:Key="script_mode_one_desc">
 Single document
 </system:String>
<system:String x:Key="script_mode_none">
 No conversion
 </system:String>
<system:String x:Key="script_mode_none_desc">
 Return according to original data
 </system:String>
<system:String x:Key="SortByColumn">
 Sort by column number
 </system:String>
<system:String x:Key="SortByRow">
 Sort by row number
 </system:String>
<system:String x:Key="SortByScore">
 Sorting by fractions
 </system:String>
<system:String x:Key="SortByArea">
 Sort by area
 </system:String>
<system:String x:Key="default">
 Default value
 </system:String>
<system:String x:Key="options">
 Optional
 </system:String>
<system:String x:Key="exe_inner">
 Using original actuator
 </system:String>
<system:String x:Key="string_option">
 String option
 </system:String>
<system:String x:Key="edit_string_option">
 Editable options
 </system:String>
<system:String x:Key="filter_mode">
 Filtering mode
 </system:String>
<system:String x:Key="filter_mode_by_item">
 Line filter
 </system:String>
<system:String x:Key="filter_mode_pass_when_success">
 All rows after successful passage
 </system:String>
<system:String x:Key="filter_mode_stop_when_fail">
 After failure, all rows are refused.
 </system:String>
<system:String x:Key="filter_mode_pass_when_fail">
 After failure, all rows are passed.
 </system:String>
<system:String x:Key="auto_save" xml:space="preserve">
 Automatic preservation
In order to enhance the stability of Hawk operation, Hawk3 increases the function of automatic save. You can set the automatic save interval (in seconds) in system configuration. When the duty value is less than or equal to 0, it will not be automatically saved.
The saved contents are recorded in the engineering document in the form of XML or hproj suffix. The contents of the preservation include:
- all data tables (in order to reduce storage loss, more than 100 thousand of the data tables will not be saved).
- all tasks (including data cleaning and {{smartcrawler_name}})
- All officially executing threads (Hawk can record where tasks are executed, breakpoint runs at the next startup)
Save time for worker threads:
1. Formal threads are tasks that formally process data, not temporary tasks that automatically refresh startup when debugging mode. At the next start, the last task that is not executed will be suspended, only after manual restart. But not exactly.
3. There may be some latency when the thread is restarted because the thread moves the pointer to the last execution, which takes a certain amount of time. Usually within 10-30 seconds.
4. there may be Caton's situation when loading or saving larger data tables.  
 </system:String>
<system:String x:Key="proj_format" xml:space="preserve">
 Introduction of Hawk project
Hawk's project file is XML or hproj. When saving the project, you can select the file format to save in the file save dialog box.
- xml: can directly check data and be processed by other languages. But when it contains large data tables, the volume of XML files will be very large due to its redundancy.
-hproj is zip-compressed xml. Hawk decompresses hproj automatically after loading it and parses it in XML format, otherwise the process is reversed.
- Both XML and hproj have the same internal structure. The hierarchy is described by the XML tree, and the child nodes are represented by Children.
- due to the poor readability of XML, yaml based configuration may be added in the future.  
 </system:String>
<system:String x:Key="market" xml:space="preserve">
 Hawk task Market
In order to facilitate the sharing of high-quality projects between users and form a good community environment, market functions are provided in Hawk5.
//TODO  
 </system:String>
<system:String x:Key="global_config" xml:space="preserve">
 Global configuration system
Hawk5 adds a global configuration system to facilitate the sharing of parameters between different tasks, and changes the behavior of all tasks through a single switch.
For example, when crawlers are developed for chains, there are subtle differences between different cities, such as xpath, or name... Therefore, configurations can be set up for different cities, switching configurations can be switched between different cities, and the Hawk module dynamically gets these data when executing. Greatly improves the reusability.
Configuration file syntax
Hawk uses a very simple configuration, that is, yaml. Each row has one configuration, and the key value is in English colon. To represent the annotation with the symbol, all the lines starting with the symbol will be ignored. For example:
` ` ` ` ` ` ` ` ` '.
This is a line of notes.
City: BJ
Xpath: your_xpath
` ` ` ` ` ` ` ` ` '.
In any module of data cleansing, most parameters support referencing global configurations with syntax {key_name}, such as {city}, which copies the value of the city item in the configuration.
Be careful:
- use square brackets syntax [[]] to access data from other columns.
- brackets syntax "," is the data that accesses global configuration.
If there is no corresponding item in the global configuration, the original string with braces is returned.
- Although yaml is used as a configuration file, it does not support complete syntax (such as arrays and hierarchical dictionaries) and can only support single-layer key-value pairs.
New and switch configuration group
//TODO: add pictures
Click the Edit button to add a new configuration group. After selecting the corresponding configuration group, it will take effect.  
 </system:String>
<system:String x:Key="doc_system" xml:space="preserve">
 Help file system
Because Hawk is used more complex, it provides a built-in document system.
- On most buttons and menus, a full introduction and help pop up after more than three seconds of mouse placement.
- All modules can be configured to display their usage documentation after configuration, including function profiles, parameter names and corresponding descriptions, considerations, etc.
- Click: Help, you can pop up the global document system, in the document, support font zooming, keyword search, etc., to facilitate the rapid location of content.
The document system of Hawk is divided into the novice mode and the master mode.
- mode switching can be switched in system configuration and {{is_display_desc}}.
- novice mode: detailed documentation, especially in the data cleaning module list, in the form of detailed presentation, easy to visualize the function of each module
Old mode: the document is minimalist, providing only the first paragraph of the novice mode.
Document compilation and automatic generation
As software continues to optimize and upgrade, there will be problems of inconsistent modules and documents. In order to reduce the burden on authors to write documents, Hawk adopted the way of automatic document generation:
The introduction of each module is based on the reflection of C#, and can be updated automatically when the module parameters change.
- software copy and document presentation are kept automatically synchronized, even if the module name changes are not affected.
- more convenient multi lingual: different names can be easily reused.
If you want to write and improve documents for Hawk, this section will introduce the way to generate documents. The core documents are located in the Doc/DefaultLanguage.xaml of the source code path of the software.
Its syntax is very concise.
- use space=preserve to specify a variable as a multiline document.
- use `{{KEY_NAME}}` to refer to other variables, and automatically replace the document when it is generated.
- An overly long document, you can create a new YOUR_MD.md in the resource directory, and you can refer to it using `{{YOUR_MD}'.
- variables can be called by tree structure, but circular references cannot be generated and final documents are generated.
It is recommended that you modify the corresponding XAML file and submit merge request to the trunk via git to ensure document quality. How to preview the generated document effect? Execute the following orders:
` ` ` ` ` ` ` ` ` '.
PIP install mkdocs
PIP install lxml
SH builddoc.sh
Mkdocs serve
` ` ` ` ` ` ` ` ` '.
You can view the preview in `http://127.0.0.1:8000/`.
You can also access all the documents of Hawk online:
> https://ferventdesert.github.io/Hawk/  
 </system:String>
<system:String x:Key="language_config" xml:space="preserve">
 A multilingual language
Hawk5 supports multi language engine and automatically switches the display language according to the operating system language. Languages currently supported include;
- Chinese (zh_CH)
- English (en_US)
You can also set the language manually, switch between `System Settings', `Language', and the next time you start, the language saved by the previous settings will be displayed.
Hawk, with the powerful function of WPF, supports language hot switching to a certain extent, but still can not all smooth switching situation. Therefore, it is recommended that after setting up the language, the language will be effective by restarting.
Add other languages
If you are willing to contribute to the internationalization of Hawk. Welcome to the new language, Hawk's new language is very simple, in the program's execution directory Lang folder, in XAML format to save the configuration files of the various languages. Copy zh_CH.xaml and replace the Chinese content with the corresponding language. Be careful:
> If you just want to internationalize the interface section, you just need to modify the section without the xml: space = preserve tag. The contents of the tag are basically used to display documents. Of course, I hope you can translate all the contents, otherwise the Hawk without documents is very difficult to use.  
 </system:String>
<system:String x:Key="log_info" xml:space="preserve">
 Log function
Hawk includes several types of logging functions, using log4net as a logging system, divided into INFO, DEBUG, ERROR, FATAL, WARNING five levels.
- Online Interface Log: At the bottom of the UI, but only this startup log can be displayed, and not too much, otherwise there will be performance problems
- Log files, log. dat, essentially text files, can be opened with notepad, and new files can be created over 10M.
- pop-up dialog box: pop-up floating windows on the upper right corner. Can be set through system settings.
How to change the log level? When too many or too many existing logs are found, it can be set up in the main menu > debugging > log level.  
 </system:String>
<system:String x:Key="debug_system" xml:space="preserve">
 Debugging system
In addition to operating in debug mode, Hawk also provides a wealth of tools to locate errors.
Debugging and exploring window
//TODO
The debug probe window can easily display the input and output of each module, the number of empty skips, configuration and description at a glance.
System level window
How do I know the total number of HTTP requests and the number of errors? In the system settings - > HTTP request details, the number of requests, the number of prohibited, due to errors and skipped the same number. Click 'clear data', you can set the counter to 0..
Determine the input and output of the module.
In single-step debugging mode, the input columns of the module are represented in blue at the top of the data cleaning and the output columns are represented in green.  
 </system:String>
<system:String x:Key="qa_list" xml:space="preserve">
 None  
 </system:String>
<system:String x:Key="crawler_manual_get_header" xml:space="preserve">
 Even if sniffing fails, it doesn't matter if you use Chrome and other browsers and go into the developer tool (F12):
[image_1ao1q9le113a01mn4scu1q22g7mm.png-118.2kB] (http://static.zybuluo.com/buptzym/lhxi16jt95iwh by 6dlmpo9t8/image_1ao1q9le113a01mn4scu1q22g7mm.png)
Select the top corner of the Web volume display bar, and then refresh the page, chrome lists all requests, usually the top is the actual request:
[image_1ao1qf5fo1geqsf13be1mpi1lia9.png-68.5kB] (http://static.zybuluo.com/buptzym/5vmg by wxwlw71rqxjpk1jczt/image_1ao1qf5fo1geqsf13be1mpi1lia9.png)
Click view source to copy all the text to {{smartcrawler_name} and the corresponding ** Advanced Settings - Request Parameters **. In fact, Hawk is doing similar operations.  
 </system:String>
<system:String x:Key="topic_increase_get" xml:space="preserve">
 Increments, automated timing crawling topics
Although Hawk is a graphical software, it still supports command-line and automated grabbing. This topic discusses how to increment and automate timing grabbing.
Incremental crawling
Incremental crawling is more difficult and different websites are different. Here we provide some skills.
One type is news, arranged in chronological order, and updated with the latest news. The simplest idea is to record the last position taken at the last time. Then, in the new round of grasping, it keeps getting forward until it is found that the last time it was grabbed, it was interrupted.
Two core technologies are needed here:
Save the last stored keywords.
First, locate the column representing data characteristics (such as ID, title, etc.), which uniquely identifies the data. If you cannot find the only column, you can combine it by merging multiple columns.
Drag in the column `Update to Configuration', enter the name column of the configuration to be updated, and at execution, the module automatically updates the column value to the global configuration (TODO: path) for each row of data it passes. With the automatic storage mechanism of the software, the value will be written to the configuration file at any time.
The next point is to locate the interruption point.
When a task is configured, add `regular filter', and the value of the regular item is filled in as `{column}', which represents reading the value from the configuration.  
 </system:String>
<system:String x:Key="topic_ajax" xml:space="preserve">
 None  
 </system:String>
<system:String x:Key="fast_doc" xml:space="preserve">
 None  
 </system:String>
<system:String x:Key="auto_schduler" xml:space="preserve">
 None  
 </system:String>
<system:String x:Key="develop" xml:space="preserve">
 Compilation and extension development
-
Hawk is an open source project, so anyone can contribute code for it. The authors also welcome users to expand more useful plug-ins.
Nowadays, there are few such classmates. It seems that we are far from the Communist society.
See here, you must have contacted the code written by Desert King, don't Tucao, that's what he wrote when he was a graduate student, cynical, as long as he can use it.
Compilation
Compilation requires Visual Stuido, which is recommended for use in 2015, 2010 and above without testing, but should be compilable.
.Net Framework 4.5 and.NET Framework 4 need to be installed.
There are no other dependencies.
When compiling problems occur, please look at the compilation problem in `7. common problems.
Code structure
Hawk adopts plug-in structure, and all components are separable. The plug-in system is self designed, very similar to the MEF framework. Use WPF technology, MVVM structure, interface and logic separation.
The engineering document is as follows:
- Hawk.Core underlying base class library
- Hawk.ETL data cleaning and crawler plug-in library
- Hawk.ETL.Controls interface library
- HawkScheduler command line scheduler
- HawK.exe executable program and plug-in container
The core code that needs modification is located in Hawk.ETL and Hawk.Core.
Implementation of new connector
To implement MySQL support, for example, in the Hawk. Core. Connectors directory, create a new MySQLConnector. CS file, create the corresponding class, inherit from DBConnectorBase.
Add attribute to class. The structure is as follows:
[XFrmWork ("MySQLConnector")]
Public class MySQLConnector
{
//implement interface IDataBaseConnector
}
Implementation of new sub module components
If you want to develop new components, you can refer to the existing code. However, some particularly simple features do not recommend the development of new plug-ins, but directly use the Python converter.
You can create a.NET project, and then you can use Hawk.Core.dll. Interface controls, converters, filters, and executor can be inherited from existing base classes.
After generating the corresponding DLL file, you can copy it to the root directory of Hawk, and in the PluginLoadLogic. XML configuration file, modify the PluginFileName configuration section, paste the DLL file name of the file into it. In this way, Hawk will automatically retrieve all plug-ins in the DLL when it starts.
Remark
If you have any questions about this, please contact the author, but I'll bet that if you want to develop new components, you can find up to three of my friends a year.  
 </system:String>
<system:String x:Key="project" xml:space="preserve">
 Hawk uses the concept of Engineering (Project) to describe a set of tasks. In engineering, all tasks can refer to each other, and tasks can also access internal tables, connectors, and configurations. A typical project includes the following:
Task: multiple webpage collector and data cleaning
- data tables: cache results, error tables and data logs, etc., maximum not exceeding 10W
Connectors: access to various database configurations
- global configuration
After opening Hawk, you can create, load, save and save the project in the file bar. These concepts are close to the standards in Windows, so there is not much to do. You can also open the {{recent_file}} and load the project directly.
Be careful:
- as Hawk continues to develop, early versions of the project may not be compatible with the current software.
When the project is larger, loading and saving will take a certain amount of time.
{{auto_save}}
{{proj_format}}
{{global_config}}  
 </system:String>
<system:String x:Key="hawk_doc" xml:space="preserve">
 {{hawk_front_desc}}
{{fast_doc}}
Hawk project
{{project}}
Introduction of main components
{{core_concept}}
{{new_task}}
{{threadmanager_desc}}
{{market}}
{{debug_system}}
{{log_info}}
{{language_config}}
{{doc_system}}
Data tables and database connections
Data sheet
{{datacollection_helper}}
{{connector_helper}}
{{smartcrawler_name}}
{{SmartCrawler_desc_detail}}
{{smartetl_name}}
{{SmartETLTool_desc_detail}}
{{tools_desc}}
{{subtask_desc}}
{{topic_ajax}}
{{topic_increase_get}}
{{develop}}
{{qa_list}}
{{about}}
{{story1}}
{{story2}}  
 </system:String>
</ResourceDictionary>
